{"abi":[{"type":"function","name":"accesses","inputs":[{"name":"target","type":"address","internalType":"address"}],"outputs":[{"name":"readSlots","type":"bytes32[]","internalType":"bytes32[]"},{"name":"writeSlots","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"activeFork","inputs":[],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"addr","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"allowCheatcodes","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbs","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqAbsDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRel","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertApproxEqRelDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"maxPercentDelta","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertFalse","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertGtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLe","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLeDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLt","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertLtDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool","internalType":"bool"},{"name":"right","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bool[]","internalType":"bool[]"},{"name":"right","type":"bool[]","internalType":"bool[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address[]","internalType":"address[]"},{"name":"right","type":"address[]","internalType":"address[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string","internalType":"string"},{"name":"right","type":"string","internalType":"string"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes","internalType":"bytes"},{"name":"right","type":"bytes","internalType":"bytes"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256[]","internalType":"uint256[]"},{"name":"right","type":"uint256[]","internalType":"uint256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"address","internalType":"address"},{"name":"right","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32","internalType":"bytes32"},{"name":"right","type":"bytes32","internalType":"bytes32"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes32[]","internalType":"bytes32[]"},{"name":"right","type":"bytes32[]","internalType":"bytes32[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"string[]","internalType":"string[]"},{"name":"right","type":"string[]","internalType":"string[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256[]","internalType":"int256[]"},{"name":"right","type":"int256[]","internalType":"int256[]"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"bytes[]","internalType":"bytes[]"},{"name":"right","type":"bytes[]","internalType":"bytes[]"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEq","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"int256","internalType":"int256"},{"name":"right","type":"int256","internalType":"int256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertNotEqDecimal","inputs":[{"name":"left","type":"uint256","internalType":"uint256"},{"name":"right","type":"uint256","internalType":"uint256"},{"name":"decimals","type":"uint256","internalType":"uint256"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assertTrue","inputs":[{"name":"condition","type":"bool","internalType":"bool"},{"name":"error","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"assume","inputs":[{"name":"condition","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"pure"},{"type":"function","name":"blobBaseFee","inputs":[{"name":"newBlobBaseFee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"blobhashes","inputs":[{"name":"hashes","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"breakpoint","inputs":[{"name":"char","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"broadcastRawTransaction","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"chainId","inputs":[{"name":"newChainId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"clearMockedCalls","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"closeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"coinbase","inputs":[{"name":"newCoinbase","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreate2Address","inputs":[{"name":"salt","type":"bytes32","internalType":"bytes32"},{"name":"initCodeHash","type":"bytes32","internalType":"bytes32"},{"name":"deployer","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"computeCreateAddress","inputs":[{"name":"deployer","type":"address","internalType":"address"},{"name":"nonce","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"copyFile","inputs":[{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"copied","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"createDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createSelectFork","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"}],"outputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"createWallet","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"walletLabel","type":"string","internalType":"string"}],"outputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"deal","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newBalance","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshot","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"deleteSnapshots","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"},{"name":"constructorArgs","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deployCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"deployedAddress","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"},{"name":"language","type":"string","internalType":"string"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"deriveKey","inputs":[{"name":"mnemonic","type":"string","internalType":"string"},{"name":"derivationPath","type":"string","internalType":"string"},{"name":"index","type":"uint32","internalType":"uint32"}],"outputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"difficulty","inputs":[{"name":"newDifficulty","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"dumpState","inputs":[{"name":"pathToStateJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ensNamehash","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envAddress","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envBool","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envBytes","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envBytes32","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envExists","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envInt","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"value","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"value","type":"int256[]","internalType":"int256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool","internalType":"bool"}],"outputs":[{"name":"value","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"address","internalType":"address"}],"outputs":[{"name":"value","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"value","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"int256","internalType":"int256"}],"outputs":[{"name":"value","type":"int256","internalType":"int256"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"value","type":"address[]","internalType":"address[]"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"defaultValue","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envOr","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"},{"name":"defaultValue","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"value","type":"bool[]","internalType":"bool[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string[]","internalType":"string[]"}],"stateMutability":"view"},{"type":"function","name":"envString","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"envUint","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"delim","type":"string","internalType":"string"}],"outputs":[{"name":"value","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"etch","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"newRuntimeBytecode","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"eth_getLogs","inputs":[{"name":"fromBlock","type":"uint256","internalType":"uint256"},{"name":"toBlock","type":"uint256","internalType":"uint256"},{"name":"target","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.EthGetLogs[]","components":[{"name":"emitter","type":"address","internalType":"address"},{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"},{"name":"blockNumber","type":"uint64","internalType":"uint64"},{"name":"transactionHash","type":"bytes32","internalType":"bytes32"},{"name":"transactionIndex","type":"uint64","internalType":"uint64"},{"name":"logIndex","type":"uint256","internalType":"uint256"},{"name":"removed","type":"bool","internalType":"bool"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"exists","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"gas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectCallMinGas","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"minGas","type":"uint64","internalType":"uint64"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"count","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmit","inputs":[{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"checkTopic0","type":"bool","internalType":"bool"},{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"},{"name":"emitter","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectEmitAnonymous","inputs":[{"name":"checkTopic0","type":"bool","internalType":"bool"},{"name":"checkTopic1","type":"bool","internalType":"bool"},{"name":"checkTopic2","type":"bool","internalType":"bool"},{"name":"checkTopic3","type":"bool","internalType":"bool"},{"name":"checkData","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes4","internalType":"bytes4"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectRevert","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemory","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"expectSafeMemoryCall","inputs":[{"name":"min","type":"uint64","internalType":"uint64"},{"name":"max","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"fee","inputs":[{"name":"newBasefee","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ffi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"fsMetadata","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"metadata","type":"tuple","internalType":"struct VmSafe.FsMetadata","components":[{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"},{"name":"length","type":"uint256","internalType":"uint256"},{"name":"readOnly","type":"bool","internalType":"bool"},{"name":"modified","type":"uint256","internalType":"uint256"},{"name":"accessed","type":"uint256","internalType":"uint256"},{"name":"created","type":"uint256","internalType":"uint256"}]}],"stateMutability":"view"},{"type":"function","name":"getBlobBaseFee","inputs":[],"outputs":[{"name":"blobBaseFee","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlobhashes","inputs":[],"outputs":[{"name":"hashes","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"view"},{"type":"function","name":"getBlockNumber","inputs":[],"outputs":[{"name":"height","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getBlockTimestamp","inputs":[],"outputs":[{"name":"timestamp","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"creationBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getDeployedCode","inputs":[{"name":"artifactPath","type":"string","internalType":"string"}],"outputs":[{"name":"runtimeBytecode","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"getLabel","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"currentLabel","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"getMappingKeyAndParentOf","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"elementSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"found","type":"bool","internalType":"bool"},{"name":"key","type":"bytes32","internalType":"bytes32"},{"name":"parent","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingLength","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"length","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"getMappingSlotAt","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"mappingSlot","type":"bytes32","internalType":"bytes32"},{"name":"idx","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"getNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"getNonce","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]}],"outputs":[{"name":"nonce","type":"uint64","internalType":"uint64"}],"stateMutability":"nonpayable"},{"type":"function","name":"getRecordedLogs","inputs":[],"outputs":[{"name":"logs","type":"tuple[]","internalType":"struct VmSafe.Log[]","components":[{"name":"topics","type":"bytes32[]","internalType":"bytes32[]"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"emitter","type":"address","internalType":"address"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"indexOf","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"isContext","inputs":[{"name":"context","type":"uint8","internalType":"enum VmSafe.ForgeContext"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"isFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"result","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"isPersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"persistent","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExists","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"keyExistsToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"label","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newLabel","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"lastCallGas","inputs":[],"outputs":[{"name":"gas","type":"tuple","internalType":"struct VmSafe.Gas","components":[{"name":"gasLimit","type":"uint64","internalType":"uint64"},{"name":"gasTotalUsed","type":"uint64","internalType":"uint64"},{"name":"gasMemoryUsed","type":"uint64","internalType":"uint64"},{"name":"gasRefunded","type":"int64","internalType":"int64"},{"name":"gasRemaining","type":"uint64","internalType":"uint64"}]}],"stateMutability":"view"},{"type":"function","name":"load","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"data","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"function","name":"loadAllocs","inputs":[{"name":"pathToAllocsJson","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"makePersistent","inputs":[{"name":"account0","type":"address","internalType":"address"},{"name":"account1","type":"address","internalType":"address"},{"name":"account2","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCall","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"returnData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"msgValue","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mockCallRevert","inputs":[{"name":"callee","type":"address","internalType":"address"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"revertData","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"parseAddress","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseBool","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseBytes32","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseInt","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddress","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonAddressArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBool","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBoolArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytes32Array","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonBytesArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonInt","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonIntArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonKeys","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonString","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonStringArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonType","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonType","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonTypeArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUint","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseJsonUintArray","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseToml","inputs":[{"name":"toml","type":"string","internalType":"string"}],"outputs":[{"name":"abiEncodedData","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddress","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlAddressArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address[]","internalType":"address[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBool","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBoolArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bool[]","internalType":"bool[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes","internalType":"bytes"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytes32Array","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes32[]","internalType":"bytes32[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlBytesArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlInt","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256","internalType":"int256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlIntArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"int256[]","internalType":"int256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlKeys","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"keys","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlString","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlStringArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUint","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"parseTomlUintArray","inputs":[{"name":"toml","type":"string","internalType":"string"},{"name":"key","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"pure"},{"type":"function","name":"parseUint","inputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"outputs":[{"name":"parsedValue","type":"uint256","internalType":"uint256"}],"stateMutability":"pure"},{"type":"function","name":"pauseGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"prevrandao","inputs":[{"name":"newPrevrandao","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"projectRoot","inputs":[],"outputs":[{"name":"path","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"prompt","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptAddress","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecret","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"input","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptSecretUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"promptUint","inputs":[{"name":"promptText","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"randomAddress","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"randomUint","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"randomUint","inputs":[{"name":"min","type":"uint256","internalType":"uint256"},{"name":"max","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"readCallers","inputs":[],"outputs":[{"name":"callerMode","type":"uint8","internalType":"enum VmSafe.CallerMode"},{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"maxDepth","type":"uint64","internalType":"uint64"},{"name":"followLinks","type":"bool","internalType":"bool"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readDir","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"entries","type":"tuple[]","internalType":"struct VmSafe.DirEntry[]","components":[{"name":"errorMessage","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"depth","type":"uint64","internalType":"uint64"},{"name":"isDir","type":"bool","internalType":"bool"},{"name":"isSymlink","type":"bool","internalType":"bool"}]}],"stateMutability":"view"},{"type":"function","name":"readFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"view"},{"type":"function","name":"readLine","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[{"name":"line","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"readLink","inputs":[{"name":"linkPath","type":"string","internalType":"string"}],"outputs":[{"name":"targetPath","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"record","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"recordLogs","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rememberKey","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"keyAddr","type":"address","internalType":"address"}],"stateMutability":"nonpayable"},{"type":"function","name":"removeDir","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"recursive","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"removeFile","inputs":[{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"replace","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"from","type":"string","internalType":"string"},{"name":"to","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"resetNonce","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"resumeGasMetering","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revertTo","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revertToAndDelete","inputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"success","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"accounts","type":"address[]","internalType":"address[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"revokePersistent","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"roll","inputs":[{"name":"newHeight","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rollFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"urlOrAlias","type":"string","internalType":"string"},{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpc","inputs":[{"name":"method","type":"string","internalType":"string"},{"name":"params","type":"string","internalType":"string"}],"outputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"stateMutability":"nonpayable"},{"type":"function","name":"rpcUrl","inputs":[{"name":"rpcAlias","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"rpcUrlStructs","inputs":[],"outputs":[{"name":"urls","type":"tuple[]","internalType":"struct VmSafe.Rpc[]","components":[{"name":"key","type":"string","internalType":"string"},{"name":"url","type":"string","internalType":"string"}]}],"stateMutability":"view"},{"type":"function","name":"rpcUrls","inputs":[],"outputs":[{"name":"urls","type":"string[2][]","internalType":"string[2][]"}],"stateMutability":"view"},{"type":"function","name":"selectFork","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"address[]","internalType":"address[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeAddress","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bool[]","internalType":"bool[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBool","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes[]","internalType":"bytes[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"bytes32[]","internalType":"bytes32[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeBytes32","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeInt","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"int256[]","internalType":"int256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJson","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeJsonType","inputs":[{"name":"typeDescription","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"serializeJsonType","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"typeDescription","type":"string","internalType":"string"},{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeString","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUint","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"values","type":"uint256[]","internalType":"uint256[]"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"serializeUintToHex","inputs":[{"name":"objectKey","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"json","type":"string","internalType":"string"}],"stateMutability":"nonpayable"},{"type":"function","name":"setBlockhash","inputs":[{"name":"blockNumber","type":"uint256","internalType":"uint256"},{"name":"blockHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setEnv","inputs":[{"name":"name","type":"string","internalType":"string"},{"name":"value","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonce","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setNonceUnsafe","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"newNonce","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"signer","type":"address","internalType":"address"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"sign","inputs":[{"name":"wallet","type":"tuple","internalType":"struct VmSafe.Wallet","components":[{"name":"addr","type":"address","internalType":"address"},{"name":"publicKeyX","type":"uint256","internalType":"uint256"},{"name":"publicKeyY","type":"uint256","internalType":"uint256"},{"name":"privateKey","type":"uint256","internalType":"uint256"}]},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"nonpayable"},{"type":"function","name":"sign","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"v","type":"uint8","internalType":"uint8"},{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"signP256","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"},{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"r","type":"bytes32","internalType":"bytes32"},{"name":"s","type":"bytes32","internalType":"bytes32"}],"stateMutability":"pure"},{"type":"function","name":"skip","inputs":[{"name":"skipTest","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"sleep","inputs":[{"name":"duration","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"snapshot","inputs":[],"outputs":[{"name":"snapshotId","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"split","inputs":[{"name":"input","type":"string","internalType":"string"},{"name":"delimiter","type":"string","internalType":"string"}],"outputs":[{"name":"outputs","type":"string[]","internalType":"string[]"}],"stateMutability":"pure"},{"type":"function","name":"startBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"signer","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startBroadcast","inputs":[{"name":"privateKey","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startPrank","inputs":[{"name":"msgSender","type":"address","internalType":"address"},{"name":"txOrigin","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"startStateDiffRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopAndReturnStateDiff","inputs":[],"outputs":[{"name":"accountAccesses","type":"tuple[]","internalType":"struct VmSafe.AccountAccess[]","components":[{"name":"chainInfo","type":"tuple","internalType":"struct VmSafe.ChainInfo","components":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"chainId","type":"uint256","internalType":"uint256"}]},{"name":"kind","type":"uint8","internalType":"enum VmSafe.AccountAccessKind"},{"name":"account","type":"address","internalType":"address"},{"name":"accessor","type":"address","internalType":"address"},{"name":"initialized","type":"bool","internalType":"bool"},{"name":"oldBalance","type":"uint256","internalType":"uint256"},{"name":"newBalance","type":"uint256","internalType":"uint256"},{"name":"deployedCode","type":"bytes","internalType":"bytes"},{"name":"value","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"},{"name":"reverted","type":"bool","internalType":"bool"},{"name":"storageAccesses","type":"tuple[]","internalType":"struct VmSafe.StorageAccess[]","components":[{"name":"account","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"isWrite","type":"bool","internalType":"bool"},{"name":"previousValue","type":"bytes32","internalType":"bytes32"},{"name":"newValue","type":"bytes32","internalType":"bytes32"},{"name":"reverted","type":"bool","internalType":"bool"}]},{"name":"depth","type":"uint64","internalType":"uint64"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"stopBroadcast","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopExpectSafeMemory","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopMappingRecording","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"stopPrank","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"store","inputs":[{"name":"target","type":"address","internalType":"address"},{"name":"slot","type":"bytes32","internalType":"bytes32"},{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"string","internalType":"string"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toBase64URL","inputs":[{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toLowercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"address","internalType":"address"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bool","internalType":"bool"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"int256","internalType":"int256"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toString","inputs":[{"name":"value","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"stringifiedValue","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"toUppercase","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"transact","inputs":[{"name":"forkId","type":"uint256","internalType":"uint256"},{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transact","inputs":[{"name":"txHash","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"trim","inputs":[{"name":"input","type":"string","internalType":"string"}],"outputs":[{"name":"output","type":"string","internalType":"string"}],"stateMutability":"pure"},{"type":"function","name":"tryFfi","inputs":[{"name":"commandInput","type":"string[]","internalType":"string[]"}],"outputs":[{"name":"result","type":"tuple","internalType":"struct VmSafe.FfiResult","components":[{"name":"exitCode","type":"int32","internalType":"int32"},{"name":"stdout","type":"bytes","internalType":"bytes"},{"name":"stderr","type":"bytes","internalType":"bytes"}]}],"stateMutability":"nonpayable"},{"type":"function","name":"txGasPrice","inputs":[{"name":"newGasPrice","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unixTime","inputs":[],"outputs":[{"name":"milliseconds","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"warp","inputs":[{"name":"newTimestamp","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFile","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeFileBinary","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeJson","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeLine","inputs":[{"name":"path","type":"string","internalType":"string"},{"name":"data","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"},{"name":"valueKey","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"writeToml","inputs":[{"name":"json","type":"string","internalType":"string"},{"name":"path","type":"string","internalType":"string"}],"outputs":[],"stateMutability":"nonpayable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"accesses(address)":"65bc9481","activeFork()":"2f103f22","addr(uint256)":"ffa18649","allowCheatcodes(address)":"ea060291","assertApproxEqAbs(int256,int256,uint256)":"240f839d","assertApproxEqAbs(int256,int256,uint256,string)":"8289e621","assertApproxEqAbs(uint256,uint256,uint256)":"16d207c6","assertApproxEqAbs(uint256,uint256,uint256,string)":"f710b062","assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":"3d5bc8bc","assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":"6a5066d4","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":"045c55ce","assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":"60429eb2","assertApproxEqRel(int256,int256,uint256)":"fea2d14f","assertApproxEqRel(int256,int256,uint256,string)":"ef277d72","assertApproxEqRel(uint256,uint256,uint256)":"8cf25ef4","assertApproxEqRel(uint256,uint256,uint256,string)":"1ecb7d33","assertApproxEqRelDecimal(int256,int256,uint256,uint256)":"abbf21cc","assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":"fccc11c4","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":"21ed2977","assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":"82d6c8fd","assertEq(address,address)":"515361f6","assertEq(address,address,string)":"2f2769d1","assertEq(address[],address[])":"3868ac34","assertEq(address[],address[],string)":"3e9173c5","assertEq(bool,bool)":"f7fe3477","assertEq(bool,bool,string)":"4db19e7e","assertEq(bool[],bool[])":"707df785","assertEq(bool[],bool[],string)":"e48a8f8d","assertEq(bytes,bytes)":"97624631","assertEq(bytes,bytes,string)":"e24fed00","assertEq(bytes32,bytes32)":"7c84c69b","assertEq(bytes32,bytes32,string)":"c1fa1ed0","assertEq(bytes32[],bytes32[])":"0cc9ee84","assertEq(bytes32[],bytes32[],string)":"e03e9177","assertEq(bytes[],bytes[])":"e5fb9b4a","assertEq(bytes[],bytes[],string)":"f413f0b6","assertEq(int256,int256)":"fe74f05b","assertEq(int256,int256,string)":"714a2f13","assertEq(int256[],int256[])":"711043ac","assertEq(int256[],int256[],string)":"191f1b30","assertEq(string,string)":"f320d963","assertEq(string,string,string)":"36f656d8","assertEq(string[],string[])":"cf1c049c","assertEq(string[],string[],string)":"eff6b27d","assertEq(uint256,uint256)":"98296c54","assertEq(uint256,uint256,string)":"88b44c85","assertEq(uint256[],uint256[])":"975d5a12","assertEq(uint256[],uint256[],string)":"5d18c73a","assertEqDecimal(int256,int256,uint256)":"48016c04","assertEqDecimal(int256,int256,uint256,string)":"7e77b0c5","assertEqDecimal(uint256,uint256,uint256)":"27af7d9c","assertEqDecimal(uint256,uint256,uint256,string)":"d0cbbdef","assertFalse(bool)":"a5982885","assertFalse(bool,string)":"7ba04809","assertGe(int256,int256)":"0a30b771","assertGe(int256,int256,string)":"a84328dd","assertGe(uint256,uint256)":"a8d4d1d9","assertGe(uint256,uint256,string)":"e25242c0","assertGeDecimal(int256,int256,uint256)":"dc28c0f1","assertGeDecimal(int256,int256,uint256,string)":"5df93c9b","assertGeDecimal(uint256,uint256,uint256)":"3d1fe08a","assertGeDecimal(uint256,uint256,uint256,string)":"8bff9133","assertGt(int256,int256)":"5a362d45","assertGt(int256,int256,string)":"f8d33b9b","assertGt(uint256,uint256)":"db07fcd2","assertGt(uint256,uint256,string)":"d9a3c4d2","assertGtDecimal(int256,int256,uint256)":"78611f0e","assertGtDecimal(int256,int256,uint256,string)":"04a5c7ab","assertGtDecimal(uint256,uint256,uint256)":"eccd2437","assertGtDecimal(uint256,uint256,uint256,string)":"64949a8d","assertLe(int256,int256)":"95fd154e","assertLe(int256,int256,string)":"4dfe692c","assertLe(uint256,uint256)":"8466f415","assertLe(uint256,uint256,string)":"d17d4b0d","assertLeDecimal(int256,int256,uint256)":"11d1364a","assertLeDecimal(int256,int256,uint256,string)":"aa5cf788","assertLeDecimal(uint256,uint256,uint256)":"c304aab7","assertLeDecimal(uint256,uint256,uint256,string)":"7fefbbe0","assertLt(int256,int256)":"3e914080","assertLt(int256,int256,string)":"9ff531e3","assertLt(uint256,uint256)":"b12fc005","assertLt(uint256,uint256,string)":"65d5c135","assertLtDecimal(int256,int256,uint256)":"dbe8d88b","assertLtDecimal(int256,int256,uint256,string)":"40f0b4e0","assertLtDecimal(uint256,uint256,uint256)":"2077337e","assertLtDecimal(uint256,uint256,uint256,string)":"a972d037","assertNotEq(address,address)":"b12e1694","assertNotEq(address,address,string)":"8775a591","assertNotEq(address[],address[])":"46d0b252","assertNotEq(address[],address[],string)":"72c7e0b5","assertNotEq(bool,bool)":"236e4d66","assertNotEq(bool,bool,string)":"1091a261","assertNotEq(bool[],bool[])":"286fafea","assertNotEq(bool[],bool[],string)":"62c6f9fb","assertNotEq(bytes,bytes)":"3cf78e28","assertNotEq(bytes,bytes,string)":"9507540e","assertNotEq(bytes32,bytes32)":"898e83fc","assertNotEq(bytes32,bytes32,string)":"b2332f51","assertNotEq(bytes32[],bytes32[])":"0603ea68","assertNotEq(bytes32[],bytes32[],string)":"b873634c","assertNotEq(bytes[],bytes[])":"edecd035","assertNotEq(bytes[],bytes[],string)":"1dcd1f68","assertNotEq(int256,int256)":"f4c004e3","assertNotEq(int256,int256,string)":"4724c5b9","assertNotEq(int256[],int256[])":"0b72f4ef","assertNotEq(int256[],int256[],string)":"d3977322","assertNotEq(string,string)":"6a8237b3","assertNotEq(string,string,string)":"78bdcea7","assertNotEq(string[],string[])":"bdfacbe8","assertNotEq(string[],string[],string)":"b67187f3","assertNotEq(uint256,uint256)":"b7909320","assertNotEq(uint256,uint256,string)":"98f9bdbd","assertNotEq(uint256[],uint256[])":"56f29cba","assertNotEq(uint256[],uint256[],string)":"9a7fbd8f","assertNotEqDecimal(int256,int256,uint256)":"14e75680","assertNotEqDecimal(int256,int256,uint256,string)":"33949f0b","assertNotEqDecimal(uint256,uint256,uint256)":"669efca7","assertNotEqDecimal(uint256,uint256,uint256,string)":"f5a55558","assertTrue(bool)":"0c9fd581","assertTrue(bool,string)":"a34edc03","assume(bool)":"4c63e562","blobBaseFee(uint256)":"6d315d7e","blobhashes(bytes32[])":"129de7eb","breakpoint(string)":"f0259e92","breakpoint(string,bool)":"f7d39a8d","broadcast()":"afc98040","broadcast(address)":"e6962cdb","broadcast(uint256)":"f67a965b","broadcastRawTransaction(bytes)":"8c0c72e0","chainId(uint256)":"4049ddd2","clearMockedCalls()":"3fdf4e15","closeFile(string)":"48c3241f","coinbase(address)":"ff483c54","computeCreate2Address(bytes32,bytes32)":"890c283b","computeCreate2Address(bytes32,bytes32,address)":"d323826a","computeCreateAddress(address,uint256)":"74637a7a","copyFile(string,string)":"a54a87d8","createDir(string,bool)":"168b64d3","createFork(string)":"31ba3498","createFork(string,bytes32)":"7ca29682","createFork(string,uint256)":"6ba3ba2b","createSelectFork(string)":"98680034","createSelectFork(string,bytes32)":"84d52b7a","createSelectFork(string,uint256)":"71ee464d","createWallet(string)":"7404f1d2","createWallet(uint256)":"7a675bb6","createWallet(uint256,string)":"ed7c5462","deal(address,uint256)":"c88a5e6d","deleteSnapshot(uint256)":"a6368557","deleteSnapshots()":"421ae469","deployCode(string)":"9a8325a0","deployCode(string,bytes)":"29ce9dde","deriveKey(string,string,uint32)":"6bcb2c1b","deriveKey(string,string,uint32,string)":"29233b1f","deriveKey(string,uint32)":"6229498b","deriveKey(string,uint32,string)":"32c8176d","difficulty(uint256)":"46cc92d9","dumpState(string)":"709ecd3f","ensNamehash(string)":"8c374c65","envAddress(string)":"350d56bf","envAddress(string,string)":"ad31b9fa","envBool(string)":"7ed1ec7d","envBool(string,string)":"aaaddeaf","envBytes(string)":"4d7baf06","envBytes(string,string)":"ddc2651b","envBytes32(string)":"97949042","envBytes32(string,string)":"5af231c1","envExists(string)":"ce8365f9","envInt(string)":"892a0c61","envInt(string,string)":"42181150","envOr(string,address)":"561fe540","envOr(string,bool)":"4777f3cf","envOr(string,bytes)":"b3e47705","envOr(string,bytes32)":"b4a85892","envOr(string,int256)":"bbcb713e","envOr(string,string)":"d145736c","envOr(string,string,address[])":"c74e9deb","envOr(string,string,bool[])":"eb85e83b","envOr(string,string,bytes32[])":"2281f367","envOr(string,string,bytes[])":"64bc3e64","envOr(string,string,int256[])":"4700d74b","envOr(string,string,string[])":"859216bc","envOr(string,string,uint256[])":"74318528","envOr(string,uint256)":"5e97348f","envString(string)":"f877cb19","envString(string,string)":"14b02bc9","envUint(string)":"c1978d1f","envUint(string,string)":"f3dec099","etch(address,bytes)":"b4d6c782","eth_getLogs(uint256,uint256,address,bytes32[])":"35e1349b","exists(string)":"261a323e","expectCall(address,bytes)":"bd6af434","expectCall(address,bytes,uint64)":"c1adbbff","expectCall(address,uint256,bytes)":"f30c7ba3","expectCall(address,uint256,bytes,uint64)":"a2b1a1ae","expectCall(address,uint256,uint64,bytes)":"23361207","expectCall(address,uint256,uint64,bytes,uint64)":"65b7b7cc","expectCallMinGas(address,uint256,uint64,bytes)":"08e4e116","expectCallMinGas(address,uint256,uint64,bytes,uint64)":"e13a1834","expectEmit()":"440ed10d","expectEmit(address)":"86b9620d","expectEmit(bool,bool,bool,bool)":"491cc7c2","expectEmit(bool,bool,bool,bool,address)":"81bad6f3","expectEmitAnonymous()":"2e5f270c","expectEmitAnonymous(address)":"6fc68705","expectEmitAnonymous(bool,bool,bool,bool,bool)":"c948db5e","expectEmitAnonymous(bool,bool,bool,bool,bool,address)":"71c95899","expectRevert()":"f4844814","expectRevert(bytes)":"f28dceb3","expectRevert(bytes4)":"c31eb0e0","expectSafeMemory(uint64,uint64)":"6d016688","expectSafeMemoryCall(uint64,uint64)":"05838bf4","fee(uint256)":"39b37ab0","ffi(string[])":"89160467","fsMetadata(string)":"af368a08","getBlobBaseFee()":"1f6d6ef7","getBlobhashes()":"f56ff18b","getBlockNumber()":"42cbb15c","getBlockTimestamp()":"796b89b9","getCode(string)":"8d1cc925","getDeployedCode(string)":"3ebf73b4","getLabel(address)":"28a249b0","getMappingKeyAndParentOf(address,bytes32)":"876e24e6","getMappingLength(address,bytes32)":"2f2fd63f","getMappingSlotAt(address,bytes32,uint256)":"ebc73ab4","getNonce((address,uint256,uint256,uint256))":"a5748aad","getNonce(address)":"2d0335ab","getRecordedLogs()":"191553a4","indexOf(string,string)":"8a0807b7","isContext(uint8)":"64af255d","isDir(string)":"7d15d019","isFile(string)":"e0eb04d4","isPersistent(address)":"d92d8efd","keyExists(string,string)":"528a683c","keyExistsJson(string,string)":"db4235f6","keyExistsToml(string,string)":"600903ad","label(address,string)":"c657c718","lastCallGas()":"2b589b28","load(address,bytes32)":"667f9d70","loadAllocs(string)":"b3a056d7","makePersistent(address)":"57e22dde","makePersistent(address,address)":"4074e0a8","makePersistent(address,address,address)":"efb77a75","makePersistent(address[])":"1d9e269e","mockCall(address,bytes,bytes)":"b96213e4","mockCall(address,uint256,bytes,bytes)":"81409b91","mockCallRevert(address,bytes,bytes)":"dbaad147","mockCallRevert(address,uint256,bytes,bytes)":"d23cd037","parseAddress(string)":"c6ce059d","parseBool(string)":"974ef924","parseBytes(string)":"8f5d232d","parseBytes32(string)":"087e6e81","parseInt(string)":"42346c5e","parseJson(string)":"6a82600a","parseJson(string,string)":"85940ef1","parseJsonAddress(string,string)":"1e19e657","parseJsonAddressArray(string,string)":"2fce7883","parseJsonBool(string,string)":"9f86dc91","parseJsonBoolArray(string,string)":"91f3b94f","parseJsonBytes(string,string)":"fd921be8","parseJsonBytes32(string,string)":"1777e59d","parseJsonBytes32Array(string,string)":"91c75bc3","parseJsonBytesArray(string,string)":"6631aa99","parseJsonInt(string,string)":"7b048ccd","parseJsonIntArray(string,string)":"9983c28a","parseJsonKeys(string,string)":"213e4198","parseJsonString(string,string)":"49c4fac8","parseJsonStringArray(string,string)":"498fdcf4","parseJsonType(string,string)":"a9da313b","parseJsonType(string,string,string)":"e3f5ae33","parseJsonTypeArray(string,string,string)":"0175d535","parseJsonUint(string,string)":"addde2b6","parseJsonUintArray(string,string)":"522074ab","parseToml(string)":"592151f0","parseToml(string,string)":"37736e08","parseTomlAddress(string,string)":"65e7c844","parseTomlAddressArray(string,string)":"65c428e7","parseTomlBool(string,string)":"d30dced6","parseTomlBoolArray(string,string)":"127cfe9a","parseTomlBytes(string,string)":"d77bfdb9","parseTomlBytes32(string,string)":"8e214810","parseTomlBytes32Array(string,string)":"3e716f81","parseTomlBytesArray(string,string)":"b197c247","parseTomlInt(string,string)":"c1350739","parseTomlIntArray(string,string)":"d3522ae6","parseTomlKeys(string,string)":"812a44b2","parseTomlString(string,string)":"8bb8dd43","parseTomlStringArray(string,string)":"9f629281","parseTomlUint(string,string)":"cc7b0487","parseTomlUintArray(string,string)":"b5df27c8","parseUint(string)":"fa91454d","pauseGasMetering()":"d1a5b36f","prank(address)":"ca669fa7","prank(address,address)":"47e50cce","prevrandao(bytes32)":"3b925549","prevrandao(uint256)":"9cb1c0d4","projectRoot()":"d930a0e6","prompt(string)":"47eaf474","promptAddress(string)":"62ee05f4","promptSecret(string)":"1e279d41","promptSecretUint(string)":"69ca02b7","promptUint(string)":"652fd489","randomAddress()":"d5bee9f5","randomUint()":"25124730","randomUint(uint256,uint256)":"d61b051b","readCallers()":"4ad0bac9","readDir(string)":"c4bc59e0","readDir(string,uint64)":"1497876c","readDir(string,uint64,bool)":"8102d70d","readFile(string)":"60f9bb11","readFileBinary(string)":"16ed7bc4","readLine(string)":"70f55728","readLink(string)":"9f5684a2","record()":"266cf109","recordLogs()":"41af2f52","rememberKey(uint256)":"22100064","removeDir(string,bool)":"45c62011","removeFile(string)":"f1afe04d","replace(string,string,string)":"e00ad03e","resetNonce(address)":"1c72346d","resumeGasMetering()":"2bcd50e0","revertTo(uint256)":"44d7f0a4","revertToAndDelete(uint256)":"03e0aca9","revokePersistent(address)":"997a0222","revokePersistent(address[])":"3ce969e6","roll(uint256)":"1f7b4f30","rollFork(bytes32)":"0f29772b","rollFork(uint256)":"d9bbf3a1","rollFork(uint256,bytes32)":"f2830f7b","rollFork(uint256,uint256)":"d74c83a4","rpc(string,string)":"1206c8a8","rpc(string,string,string)":"0199a220","rpcUrl(string)":"975a6ce9","rpcUrlStructs()":"9d2ad72a","rpcUrls()":"a85a8418","selectFork(uint256)":"9ebf6827","serializeAddress(string,string,address)":"972c6062","serializeAddress(string,string,address[])":"1e356e1a","serializeBool(string,string,bool)":"ac22e971","serializeBool(string,string,bool[])":"92925aa1","serializeBytes(string,string,bytes)":"f21d52c7","serializeBytes(string,string,bytes[])":"9884b232","serializeBytes32(string,string,bytes32)":"2d812b44","serializeBytes32(string,string,bytes32[])":"201e43e2","serializeInt(string,string,int256)":"3f33db60","serializeInt(string,string,int256[])":"7676e127","serializeJson(string,string)":"9b3358b0","serializeJsonType(string,bytes)":"6d4f96a6","serializeJsonType(string,string,string,bytes)":"6f93bccb","serializeString(string,string,string)":"88da6d35","serializeString(string,string,string[])":"561cd6f3","serializeUint(string,string,uint256)":"129e9002","serializeUint(string,string,uint256[])":"fee9a469","serializeUintToHex(string,string,uint256)":"ae5a2ae8","setBlockhash(uint256,bytes32)":"5314b54a","setEnv(string,string)":"3d5923ee","setNonce(address,uint64)":"f8e18b57","setNonceUnsafe(address,uint64)":"9b67b21c","sign((address,uint256,uint256,uint256),bytes32)":"b25c5a25","sign(address,bytes32)":"8c1aa205","sign(bytes32)":"799cd333","sign(uint256,bytes32)":"e341eaa4","signP256(uint256,bytes32)":"83211b40","skip(bool)":"dd82d13e","sleep(uint256)":"fa9d8713","snapshot()":"9711715a","split(string,string)":"8bb75533","startBroadcast()":"7fb5297f","startBroadcast(address)":"7fec2a8d","startBroadcast(uint256)":"ce817d47","startMappingRecording()":"3e9705c0","startPrank(address)":"06447d56","startPrank(address,address)":"45b56078","startStateDiffRecording()":"cf22e3c9","stopAndReturnStateDiff()":"aa5cf90e","stopBroadcast()":"76eadd36","stopExpectSafeMemory()":"0956441b","stopMappingRecording()":"0d4aae9b","stopPrank()":"90c5013b","store(address,bytes32,bytes32)":"70ca10bb","toBase64(bytes)":"a5cbfe65","toBase64(string)":"3f8be2c8","toBase64URL(bytes)":"c8bd0e4a","toBase64URL(string)":"ae3165b3","toLowercase(string)":"50bb0884","toString(address)":"56ca623e","toString(bool)":"71dce7da","toString(bytes)":"71aad10d","toString(bytes32)":"b11a19e8","toString(int256)":"a322c40e","toString(uint256)":"6900a3ae","toUppercase(string)":"074ae3d7","transact(bytes32)":"be646da1","transact(uint256,bytes32)":"4d8abc4b","trim(string)":"b2dad155","tryFfi(string[])":"f45c1ce7","txGasPrice(uint256)":"48f50c0f","unixTime()":"625387dc","warp(uint256)":"e5d6bf02","writeFile(string,string)":"897e0a97","writeFileBinary(string,bytes)":"1f21fc80","writeJson(string,string)":"e23cd19f","writeJson(string,string,string)":"35d6ad46","writeLine(string,string)":"619d897f","writeToml(string,string)":"c0865ba7","writeToml(string,string,string)":"51ac6a33"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"accesses\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"readSlots\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"writeSlots\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"activeFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"addr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"allowCheatcodes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbs\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqAbsDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRel\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"maxPercentDelta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertApproxEqRelDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertFalse\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertGtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLe\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLeDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertLt\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertLtDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"left\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"right\",\"type\":\"bool\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool[]\",\"name\":\"left\",\"type\":\"bool[]\"},{\"internalType\":\"bool[]\",\"name\":\"right\",\"type\":\"bool[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"left\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"right\",\"type\":\"address[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"left\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"right\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"left\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"right\",\"type\":\"bytes\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"left\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"right\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"left\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"right\",\"type\":\"address\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"right\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"left\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"right\",\"type\":\"bytes32[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"left\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"right\",\"type\":\"string[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256[]\",\"name\":\"left\",\"type\":\"int256[]\"},{\"internalType\":\"int256[]\",\"name\":\"right\",\"type\":\"int256[]\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"left\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes[]\",\"name\":\"right\",\"type\":\"bytes[]\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"}],\"name\":\"assertNotEq\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"left\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"right\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"left\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"right\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertNotEqDecimal\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"error\",\"type\":\"string\"}],\"name\":\"assertTrue\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"condition\",\"type\":\"bool\"}],\"name\":\"assume\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBlobBaseFee\",\"type\":\"uint256\"}],\"name\":\"blobBaseFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"name\":\"blobhashes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"char\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"breakpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"broadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"broadcastRawTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newChainId\",\"type\":\"uint256\"}],\"name\":\"chainId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearMockedCalls\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"closeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newCoinbase\",\"type\":\"address\"}],\"name\":\"coinbase\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"initCodeHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"}],\"name\":\"computeCreate2Address\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"}],\"name\":\"computeCreateAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"copyFile\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"copied\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"createDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"}],\"name\":\"createSelectFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"walletLabel\",\"type\":\"string\"}],\"name\":\"createWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"deal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"deleteSnapshot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteSnapshots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"constructorArgs\",\"type\":\"bytes\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"deployCode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"deployedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"language\",\"type\":\"string\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"mnemonic\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"derivationPath\",\"type\":\"string\"},{\"internalType\":\"uint32\",\"name\":\"index\",\"type\":\"uint32\"}],\"name\":\"deriveKey\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newDifficulty\",\"type\":\"uint256\"}],\"name\":\"difficulty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToStateJson\",\"type\":\"string\"}],\"name\":\"dumpState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"ensNamehash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envAddress\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBool\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"defaultValue\",\"type\":\"bytes32[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"defaultValue\",\"type\":\"int256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"defaultValue\",\"type\":\"bool\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"defaultValue\",\"type\":\"address\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"defaultValue\",\"type\":\"uint256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"defaultValue\",\"type\":\"bytes[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"value\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"defaultValue\",\"type\":\"uint256[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"defaultValue\",\"type\":\"string[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"defaultValue\",\"type\":\"bytes\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"defaultValue\",\"type\":\"bytes32\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"defaultValue\",\"type\":\"int256\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"defaultValue\",\"type\":\"address[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"defaultValue\",\"type\":\"string\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"defaultValue\",\"type\":\"bool[]\"}],\"name\":\"envOr\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delim\",\"type\":\"string\"}],\"name\":\"envUint\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"newRuntimeBytecode\",\"type\":\"bytes\"}],\"name\":\"etch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fromBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"toBlock\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"}],\"name\":\"eth_getLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"blockNumber\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"transactionIndex\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"logIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"removed\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.EthGetLogs[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"exists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"gas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"minGas\",\"type\":\"uint64\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint64\",\"name\":\"count\",\"type\":\"uint64\"}],\"name\":\"expectCallMinGas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic0\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"checkTopic0\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic1\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic2\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkTopic3\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkData\",\"type\":\"bool\"}],\"name\":\"expectEmitAnonymous\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"revertData\",\"type\":\"bytes4\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expectRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"min\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"max\",\"type\":\"uint64\"}],\"name\":\"expectSafeMemoryCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newBasefee\",\"type\":\"uint256\"}],\"name\":\"fee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"ffi\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"result\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"fsMetadata\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"readOnly\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"modified\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accessed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"created\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.FsMetadata\",\"name\":\"metadata\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobBaseFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"blobBaseFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlobhashes\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"hashes\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"height\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBlockTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"creationBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"artifactPath\",\"type\":\"string\"}],\"name\":\"getDeployedCode\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"runtimeBytecode\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getLabel\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"currentLabel\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"elementSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingKeyAndParentOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"found\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"parent\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"}],\"name\":\"getMappingLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"mappingSlot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"idx\",\"type\":\"uint256\"}],\"name\":\"getMappingSlotAt\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"}],\"name\":\"getNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"nonce\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRecordedLogs\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32[]\",\"name\":\"topics\",\"type\":\"bytes32[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"internalType\":\"struct VmSafe.Log[]\",\"name\":\"logs\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"indexOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum VmSafe.ForgeContext\",\"name\":\"context\",\"type\":\"uint8\"}],\"name\":\"isContext\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isDir\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"isFile\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"result\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPersistent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"persistent\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsJson\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"keyExistsToml\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"newLabel\",\"type\":\"string\"}],\"name\":\"label\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastCallGas\",\"outputs\":[{\"components\":[{\"internalType\":\"uint64\",\"name\":\"gasLimit\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasTotalUsed\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"gasMemoryUsed\",\"type\":\"uint64\"},{\"internalType\":\"int64\",\"name\":\"gasRefunded\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"gasRemaining\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.Gas\",\"name\":\"gas\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"load\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"data\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"pathToAllocsJson\",\"type\":\"string\"}],\"name\":\"loadAllocs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"account2\",\"type\":\"address\"}],\"name\":\"makePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"mockCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"msgValue\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"callee\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"revertData\",\"type\":\"bytes\"}],\"name\":\"mockCallRevert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"parsedValue\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"parsedValue\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"parsedValue\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"parsedValue\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"parsedValue\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJson\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonType\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"}],\"name\":\"parseJsonTypeArray\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseJsonUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"}],\"name\":\"parseToml\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"abiEncodedData\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlAddressArray\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBoolArray\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"\",\"type\":\"bool[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytes32Array\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlBytesArray\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlInt\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlIntArray\",\"outputs\":[{\"internalType\":\"int256[]\",\"name\":\"\",\"type\":\"int256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlKeys\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"keys\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlStringArray\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"toml\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"}],\"name\":\"parseTomlUintArray\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"name\":\"parseUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"parsedValue\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"prank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"newPrevrandao\",\"type\":\"bytes32\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrevrandao\",\"type\":\"uint256\"}],\"name\":\"prevrandao\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectRoot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"prompt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecret\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptSecretUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"promptText\",\"type\":\"string\"}],\"name\":\"promptUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"}],\"name\":\"randomUint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"readCallers\",\"outputs\":[{\"internalType\":\"enum VmSafe.CallerMode\",\"name\":\"callerMode\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"maxDepth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"followLinks\",\"type\":\"bool\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readDir\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"errorMessage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"isDir\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isSymlink\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.DirEntry[]\",\"name\":\"entries\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFile\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readFileBinary\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"readLine\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"line\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"linkPath\",\"type\":\"string\"}],\"name\":\"readLink\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"targetPath\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"record\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recordLogs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"rememberKey\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"keyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"recursive\",\"type\":\"bool\"}],\"name\":\"removeDir\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"removeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"from\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"to\",\"type\":\"string\"}],\"name\":\"replace\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"resetNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resumeGasMetering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertTo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"name\":\"revertToAndDelete\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokePersistent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newHeight\",\"type\":\"uint256\"}],\"name\":\"roll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"rollFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"urlOrAlias\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"method\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"params\",\"type\":\"string\"}],\"name\":\"rpc\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"rpcAlias\",\"type\":\"string\"}],\"name\":\"rpcUrl\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrlStructs\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"internalType\":\"struct VmSafe.Rpc[]\",\"name\":\"urls\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rpcUrls\",\"outputs\":[{\"internalType\":\"string[2][]\",\"name\":\"urls\",\"type\":\"string[2][]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"}],\"name\":\"selectFork\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address[]\",\"name\":\"values\",\"type\":\"address[]\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"serializeAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool[]\",\"name\":\"values\",\"type\":\"bool[]\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"serializeBool\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes[]\",\"name\":\"values\",\"type\":\"bytes[]\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeBytes\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32[]\",\"name\":\"values\",\"type\":\"bytes32[]\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"serializeBytes32\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"int256[]\",\"name\":\"values\",\"type\":\"int256[]\"}],\"name\":\"serializeInt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeJson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeJsonType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"typeDescription\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"serializeJsonType\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"values\",\"type\":\"string[]\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"serializeString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"serializeUint\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"objectKey\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"serializeUintToHex\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"name\":\"setBlockhash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"setEnv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonce\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"newNonce\",\"type\":\"uint64\"}],\"name\":\"setNonceUnsafe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"publicKeyY\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.Wallet\",\"name\":\"wallet\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"sign\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"signP256\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"skipTest\",\"type\":\"bool\"}],\"name\":\"skip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"sleep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshot\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"delimiter\",\"type\":\"string\"}],\"name\":\"split\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"outputs\",\"type\":\"string[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"privateKey\",\"type\":\"uint256\"}],\"name\":\"startBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"txOrigin\",\"type\":\"address\"}],\"name\":\"startPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startStateDiffRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopAndReturnStateDiff\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"internalType\":\"struct VmSafe.ChainInfo\",\"name\":\"chainInfo\",\"type\":\"tuple\"},{\"internalType\":\"enum VmSafe.AccountAccessKind\",\"name\":\"kind\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessor\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"deployedCode\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"isWrite\",\"type\":\"bool\"},{\"internalType\":\"bytes32\",\"name\":\"previousValue\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newValue\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"reverted\",\"type\":\"bool\"}],\"internalType\":\"struct VmSafe.StorageAccess[]\",\"name\":\"storageAccesses\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"depth\",\"type\":\"uint64\"}],\"internalType\":\"struct VmSafe.AccountAccess[]\",\"name\":\"accountAccesses\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopBroadcast\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopExpectSafeMemory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopMappingRecording\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stopPrank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"toBase64URL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toLowercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"toString\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"stringifiedValue\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"toUppercase\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"forkId\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"txHash\",\"type\":\"bytes32\"}],\"name\":\"transact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"input\",\"type\":\"string\"}],\"name\":\"trim\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"output\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"commandInput\",\"type\":\"string[]\"}],\"name\":\"tryFfi\",\"outputs\":[{\"components\":[{\"internalType\":\"int32\",\"name\":\"exitCode\",\"type\":\"int32\"},{\"internalType\":\"bytes\",\"name\":\"stdout\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"stderr\",\"type\":\"bytes\"}],\"internalType\":\"struct VmSafe.FfiResult\",\"name\":\"result\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newGasPrice\",\"type\":\"uint256\"}],\"name\":\"txGasPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unixTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"milliseconds\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTimestamp\",\"type\":\"uint256\"}],\"name\":\"warp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeFile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"writeFileBinary\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeJson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"writeLine\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"valueKey\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"json\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"path\",\"type\":\"string\"}],\"name\":\"writeToml\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"accesses(address)\":{\"notice\":\"Gets all accessed reads and write slot from a `vm.record` session, for a given address.\"},\"activeFork()\":{\"notice\":\"Returns the identifier of the currently active fork. Reverts if no fork is currently active.\"},\"addr(uint256)\":{\"notice\":\"Gets the address for a given private key.\"},\"allowCheatcodes(address)\":{\"notice\":\"In forking mode, explicitly grant the given address cheatcode access.\"},\"assertApproxEqAbs(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbs(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\"},\"assertApproxEqAbs(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message.\"},\"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRel(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRel(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\"},\"assertApproxEqRel(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message.\"},\"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEq(address,address)\":{\"notice\":\"Asserts that two `address` values are equal.\"},\"assertEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are equal.\"},\"assertEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are equal.\"},\"assertEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are equal.\"},\"assertEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are equal.\"},\"assertEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are equal.\"},\"assertEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal.\"},\"assertEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure.\"},\"assertEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal.\"},\"assertEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are equal.\"},\"assertEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are equal.\"},\"assertEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure.\"},\"assertEq(string,string)\":{\"notice\":\"Asserts that two `string` values are equal.\"},\"assertEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are equal.\"},\"assertEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal.\"},\"assertEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256 values are equal.\"},\"assertEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure.\"},\"assertEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\"},\"assertEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertFalse(bool)\":{\"notice\":\"Asserts that the given condition is false.\"},\"assertFalse(bool,string)\":{\"notice\":\"Asserts that the given condition is false and includes error message into revert string on failure.\"},\"assertGe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second.\"},\"assertGe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure.\"},\"assertGeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message.\"},\"assertGeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second.\"},\"assertGt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second.\"},\"assertGt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure.\"},\"assertGtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertGtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message.\"},\"assertGtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLe(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second.\"},\"assertLe(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLe(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second.\"},\"assertLe(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure.\"},\"assertLeDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLeDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message.\"},\"assertLeDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLt(int256,int256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second.\"},\"assertLt(int256,int256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLt(uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second.\"},\"assertLt(uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure.\"},\"assertLtDecimal(int256,int256,uint256)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(int256,int256,uint256,string)\":{\"notice\":\"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertLtDecimal(uint256,uint256,uint256)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message.\"},\"assertLtDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEq(address,address)\":{\"notice\":\"Asserts that two `address` values are not equal.\"},\"assertNotEq(address,address,string)\":{\"notice\":\"Asserts that two `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(address[],address[])\":{\"notice\":\"Asserts that two arrays of `address` values are not equal.\"},\"assertNotEq(address[],address[],string)\":{\"notice\":\"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool,bool)\":{\"notice\":\"Asserts that two `bool` values are not equal.\"},\"assertNotEq(bool,bool,string)\":{\"notice\":\"Asserts that two `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bool[],bool[])\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal.\"},\"assertNotEq(bool[],bool[],string)\":{\"notice\":\"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes,bytes)\":{\"notice\":\"Asserts that two `bytes` values are not equal.\"},\"assertNotEq(bytes,bytes,string)\":{\"notice\":\"Asserts that two `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32,bytes32)\":{\"notice\":\"Asserts that two `bytes32` values are not equal.\"},\"assertNotEq(bytes32,bytes32,string)\":{\"notice\":\"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes32[],bytes32[])\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal.\"},\"assertNotEq(bytes32[],bytes32[],string)\":{\"notice\":\"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(bytes[],bytes[])\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal.\"},\"assertNotEq(bytes[],bytes[],string)\":{\"notice\":\"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256,int256)\":{\"notice\":\"Asserts that two `int256` values are not equal.\"},\"assertNotEq(int256,int256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(int256[],int256[])\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal.\"},\"assertNotEq(int256[],int256[],string)\":{\"notice\":\"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string,string)\":{\"notice\":\"Asserts that two `string` values are not equal.\"},\"assertNotEq(string,string,string)\":{\"notice\":\"Asserts that two `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(string[],string[])\":{\"notice\":\"Asserts that two arrays of `string` values are not equal.\"},\"assertNotEq(string[],string[],string)\":{\"notice\":\"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal.\"},\"assertNotEq(uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEq(uint256[],uint256[])\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal.\"},\"assertNotEq(uint256[],uint256[],string)\":{\"notice\":\"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure.\"},\"assertNotEqDecimal(int256,int256,uint256)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(int256,int256,uint256,string)\":{\"notice\":\"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertNotEqDecimal(uint256,uint256,uint256)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\"},\"assertNotEqDecimal(uint256,uint256,uint256,string)\":{\"notice\":\"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure.\"},\"assertTrue(bool)\":{\"notice\":\"Asserts that the given condition is true.\"},\"assertTrue(bool,string)\":{\"notice\":\"Asserts that the given condition is true and includes error message into revert string on failure.\"},\"assume(bool)\":{\"notice\":\"If the condition is false, discard this run's fuzz inputs and generate new ones.\"},\"blobBaseFee(uint256)\":{\"notice\":\"Sets `block.blobbasefee`\"},\"blobhashes(bytes32[])\":{\"notice\":\"Sets the blobhashes in the transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"breakpoint(string)\":{\"notice\":\"Writes a breakpoint to jump to in the debugger.\"},\"breakpoint(string,bool)\":{\"notice\":\"Writes a conditional breakpoint to jump to in the debugger.\"},\"broadcast()\":{\"notice\":\"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"broadcast(address)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain.\"},\"broadcast(uint256)\":{\"notice\":\"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain.\"},\"broadcastRawTransaction(bytes)\":{\"notice\":\"Takes a signed transaction and broadcasts it to the network.\"},\"chainId(uint256)\":{\"notice\":\"Sets `block.chainid`.\"},\"clearMockedCalls()\":{\"notice\":\"Clears all mocked calls.\"},\"closeFile(string)\":{\"notice\":\"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root.\"},\"coinbase(address)\":{\"notice\":\"Sets `block.coinbase`.\"},\"computeCreate2Address(bytes32,bytes32)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer.\"},\"computeCreate2Address(bytes32,bytes32,address)\":{\"notice\":\"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer.\"},\"computeCreateAddress(address,uint256)\":{\"notice\":\"Compute the address a contract will be deployed at for a given deployer address and nonce.\"},\"copyFile(string,string)\":{\"notice\":\"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root.\"},\"createDir(string,bool)\":{\"notice\":\"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root.\"},\"createFork(string)\":{\"notice\":\"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork.\"},\"createFork(string,bytes32)\":{\"notice\":\"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork.\"},\"createFork(string,uint256)\":{\"notice\":\"Creates a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createSelectFork(string)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork.\"},\"createSelectFork(string,bytes32)\":{\"notice\":\"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork.\"},\"createSelectFork(string,uint256)\":{\"notice\":\"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork.\"},\"createWallet(string)\":{\"notice\":\"Derives a private key from the name, labels the account with that name, and returns the wallet.\"},\"createWallet(uint256)\":{\"notice\":\"Generates a wallet from the private key and returns the wallet.\"},\"createWallet(uint256,string)\":{\"notice\":\"Generates a wallet from the private key, labels the account with that name, and returns the wallet.\"},\"deal(address,uint256)\":{\"notice\":\"Sets an address' balance.\"},\"deleteSnapshot(uint256)\":{\"notice\":\"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist.\"},\"deleteSnapshots()\":{\"notice\":\"Removes _all_ snapshots previously created by `snapshot`.\"},\"deployCode(string)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"deployCode(string,bytes)\":{\"notice\":\"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionaly accepts abi-encoded constructor arguments.\"},\"deriveKey(string,string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`.\"},\"deriveKey(string,string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`.\"},\"deriveKey(string,uint32)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"deriveKey(string,uint32,string)\":{\"notice\":\"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`.\"},\"difficulty(uint256)\":{\"notice\":\"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions.\"},\"dumpState(string)\":{\"notice\":\"Dump a genesis JSON file's `allocs` to disk.\"},\"ensNamehash(string)\":{\"notice\":\"Returns ENS namehash for provided string.\"},\"envAddress(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed.\"},\"envAddress(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed.\"},\"envBool(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed.\"},\"envBytes32(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envExists(string)\":{\"notice\":\"Gets the environment variable `name` and returns true if it exists, else returns false.\"},\"envInt(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed.\"},\"envInt(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envOr(string,address)\":{\"notice\":\"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bool)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,bytes32)\":{\"notice\":\"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,int256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,address[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bool[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes32[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,bytes[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,int256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,string[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,string,uint256[])\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envOr(string,uint256)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found.\"},\"envString(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed.\"},\"envString(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string)\":{\"notice\":\"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed.\"},\"envUint(string,string)\":{\"notice\":\"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed.\"},\"etch(address,bytes)\":{\"notice\":\"Sets an address' code.\"},\"eth_getLogs(uint256,uint256,address,bytes32[])\":{\"notice\":\"Gets all the logs according to specified filter.\"},\"exists(string)\":{\"notice\":\"Returns true if the given path points to an existing entity, else returns false.\"},\"expectCall(address,bytes)\":{\"notice\":\"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match.\"},\"expectCall(address,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified calldata.\"},\"expectCall(address,uint256,bytes)\":{\"notice\":\"Expects a call to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value` and calldata.\"},\"expectCall(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCall(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata.\"},\"expectCallMinGas(address,uint256,uint64,bytes)\":{\"notice\":\"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectCallMinGas(address,uint256,uint64,bytes,uint64)\":{\"notice\":\"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas.\"},\"expectEmit()\":{\"notice\":\"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmit(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmit(bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmit(bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmitAnonymous()\":{\"notice\":\"Prepare an expected anonymous log with all topic and data checks enabled. Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data.\"},\"expectEmitAnonymous(address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectEmitAnonymous(bool,bool,bool,bool,bool)\":{\"notice\":\"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans).\"},\"expectEmitAnonymous(bool,bool,bool,bool,bool,address)\":{\"notice\":\"Same as the previous method, but also checks supplied address against emitting contract.\"},\"expectRevert()\":{\"notice\":\"Expects an error on next call with any revert data.\"},\"expectRevert(bytes)\":{\"notice\":\"Expects an error on next call that exactly matches the revert data.\"},\"expectRevert(bytes4)\":{\"notice\":\"Expects an error on next call that starts with the revert data.\"},\"expectSafeMemory(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"expectSafeMemoryCall(uint64,uint64)\":{\"notice\":\"Only allows memory writes to offsets [0x00, 0x60) \\u222a [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set.\"},\"fee(uint256)\":{\"notice\":\"Sets `block.basefee`.\"},\"ffi(string[])\":{\"notice\":\"Performs a foreign function call via the terminal.\"},\"fsMetadata(string)\":{\"notice\":\"Given a path, query the file system to get information about a file, directory, etc.\"},\"getBlobBaseFee()\":{\"notice\":\"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlobhashes()\":{\"notice\":\"Gets the blockhashes from the current transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert.\"},\"getBlockNumber()\":{\"notice\":\"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getBlockTimestamp()\":{\"notice\":\"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180\"},\"getCode(string)\":{\"notice\":\"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getDeployedCode(string)\":{\"notice\":\"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\"},\"getLabel(address)\":{\"notice\":\"Gets the label for the specified address.\"},\"getMappingKeyAndParentOf(address,bytes32)\":{\"notice\":\"Gets the map key and parent of a mapping at a given slot, for a given address.\"},\"getMappingLength(address,bytes32)\":{\"notice\":\"Gets the number of elements in the mapping at the given slot, for a given address.\"},\"getMappingSlotAt(address,bytes32,uint256)\":{\"notice\":\"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping).\"},\"getNonce((address,uint256,uint256,uint256))\":{\"notice\":\"Get a `Wallet`'s nonce.\"},\"getNonce(address)\":{\"notice\":\"Gets the nonce of an account.\"},\"getRecordedLogs()\":{\"notice\":\"Gets all the recorded logs.\"},\"indexOf(string,string)\":{\"notice\":\"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`.\"},\"isContext(uint8)\":{\"notice\":\"Returns true if `forge` command was executed in given context.\"},\"isDir(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a directory, else returns false.\"},\"isFile(string)\":{\"notice\":\"Returns true if the path exists on disk and is pointing at a regular file, else returns false.\"},\"isPersistent(address)\":{\"notice\":\"Returns true if the account is marked as persistent.\"},\"keyExists(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions.\"},\"keyExistsJson(string,string)\":{\"notice\":\"Checks if `key` exists in a JSON object.\"},\"keyExistsToml(string,string)\":{\"notice\":\"Checks if `key` exists in a TOML table.\"},\"label(address,string)\":{\"notice\":\"Labels an address in call traces.\"},\"lastCallGas()\":{\"notice\":\"Gets the gas used in the last call.\"},\"load(address,bytes32)\":{\"notice\":\"Loads a storage slot from an address.\"},\"loadAllocs(string)\":{\"notice\":\"Load a genesis JSON file's `allocs` into the in-memory revm state.\"},\"makePersistent(address)\":{\"notice\":\"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks.\"},\"makePersistent(address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address,address,address)\":{\"notice\":\"See `makePersistent(address)`.\"},\"makePersistent(address[])\":{\"notice\":\"See `makePersistent(address)`.\"},\"mockCall(address,bytes,bytes)\":{\"notice\":\"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked.\"},\"mockCall(address,uint256,bytes,bytes)\":{\"notice\":\"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity.\"},\"mockCallRevert(address,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with specified revert data.\"},\"mockCallRevert(address,uint256,bytes,bytes)\":{\"notice\":\"Reverts a call to an address with a specific `msg.value`, with specified revert data.\"},\"parseAddress(string)\":{\"notice\":\"Parses the given `string` into an `address`.\"},\"parseBool(string)\":{\"notice\":\"Parses the given `string` into a `bool`.\"},\"parseBytes(string)\":{\"notice\":\"Parses the given `string` into `bytes`.\"},\"parseBytes32(string)\":{\"notice\":\"Parses the given `string` into a `bytes32`.\"},\"parseInt(string)\":{\"notice\":\"Parses the given `string` into a `int256`.\"},\"parseJson(string)\":{\"notice\":\"ABI-encodes a JSON object.\"},\"parseJson(string,string)\":{\"notice\":\"ABI-encodes a JSON object at `key`.\"},\"parseJsonAddress(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address`.\"},\"parseJsonAddressArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `address[]`.\"},\"parseJsonBool(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool`.\"},\"parseJsonBoolArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bool[]`.\"},\"parseJsonBytes(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes`.\"},\"parseJsonBytes32(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32`.\"},\"parseJsonBytes32Array(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes32[]`.\"},\"parseJsonBytesArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `bytes[]`.\"},\"parseJsonInt(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256`.\"},\"parseJsonIntArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `int256[]`.\"},\"parseJsonKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a JSON object.\"},\"parseJsonString(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string`.\"},\"parseJsonStringArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `string[]`.\"},\"parseJsonType(string,string)\":{\"notice\":\"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`.\"},\"parseJsonType(string,string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`.\"},\"parseJsonTypeArray(string,string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`.\"},\"parseJsonUint(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256`.\"},\"parseJsonUintArray(string,string)\":{\"notice\":\"Parses a string of JSON data at `key` and coerces it to `uint256[]`.\"},\"parseToml(string)\":{\"notice\":\"ABI-encodes a TOML table.\"},\"parseToml(string,string)\":{\"notice\":\"ABI-encodes a TOML table at `key`.\"},\"parseTomlAddress(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address`.\"},\"parseTomlAddressArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `address[]`.\"},\"parseTomlBool(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool`.\"},\"parseTomlBoolArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bool[]`.\"},\"parseTomlBytes(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes`.\"},\"parseTomlBytes32(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32`.\"},\"parseTomlBytes32Array(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes32[]`.\"},\"parseTomlBytesArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `bytes[]`.\"},\"parseTomlInt(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256`.\"},\"parseTomlIntArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `int256[]`.\"},\"parseTomlKeys(string,string)\":{\"notice\":\"Returns an array of all the keys in a TOML table.\"},\"parseTomlString(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string`.\"},\"parseTomlStringArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `string[]`.\"},\"parseTomlUint(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256`.\"},\"parseTomlUintArray(string,string)\":{\"notice\":\"Parses a string of TOML data at `key` and coerces it to `uint256[]`.\"},\"parseUint(string)\":{\"notice\":\"Parses the given `string` into a `uint256`.\"},\"pauseGasMetering()\":{\"notice\":\"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused.\"},\"prank(address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address.\"},\"prank(address,address)\":{\"notice\":\"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input.\"},\"prevrandao(bytes32)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"prevrandao(uint256)\":{\"notice\":\"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert.\"},\"projectRoot()\":{\"notice\":\"Get the path of the current project root.\"},\"prompt(string)\":{\"notice\":\"Prompts the user for a string value in the terminal.\"},\"promptAddress(string)\":{\"notice\":\"Prompts the user for an address in the terminal.\"},\"promptSecret(string)\":{\"notice\":\"Prompts the user for a hidden string value in the terminal.\"},\"promptSecretUint(string)\":{\"notice\":\"Prompts the user for hidden uint256 in the terminal (usually pk).\"},\"promptUint(string)\":{\"notice\":\"Prompts the user for uint256 in the terminal.\"},\"randomAddress()\":{\"notice\":\"Returns a random `address`.\"},\"randomUint()\":{\"notice\":\"Returns a random uint256 value.\"},\"randomUint(uint256,uint256)\":{\"notice\":\"Returns random uin256 value between the provided range (=min..=max).\"},\"readCallers()\":{\"notice\":\"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification.\"},\"readDir(string)\":{\"notice\":\"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true.\"},\"readDir(string,uint64)\":{\"notice\":\"See `readDir(string)`.\"},\"readDir(string,uint64,bool)\":{\"notice\":\"See `readDir(string)`.\"},\"readFile(string)\":{\"notice\":\"Reads the entire content of file to string. `path` is relative to the project root.\"},\"readFileBinary(string)\":{\"notice\":\"Reads the entire content of file as binary. `path` is relative to the project root.\"},\"readLine(string)\":{\"notice\":\"Reads next line of file to string.\"},\"readLink(string)\":{\"notice\":\"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist.\"},\"record()\":{\"notice\":\"Records all storage reads and writes.\"},\"recordLogs()\":{\"notice\":\"Record all the transaction logs.\"},\"rememberKey(uint256)\":{\"notice\":\"Adds a private key to the local forge wallet and returns the address.\"},\"removeDir(string,bool)\":{\"notice\":\"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root.\"},\"removeFile(string)\":{\"notice\":\"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root.\"},\"replace(string,string,string)\":{\"notice\":\"Replaces occurrences of `from` in the given `string` with `to`.\"},\"resetNonce(address)\":{\"notice\":\"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts.\"},\"resumeGasMetering()\":{\"notice\":\"Resumes gas metering (i.e. gas usage is counted again). Noop if already on.\"},\"revertTo(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`.\"},\"revertToAndDelete(uint256)\":{\"notice\":\"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist.\"},\"revokePersistent(address)\":{\"notice\":\"Revokes persistent status from the address, previously added via `makePersistent`.\"},\"revokePersistent(address[])\":{\"notice\":\"See `revokePersistent(address)`.\"},\"roll(uint256)\":{\"notice\":\"Sets `block.height`.\"},\"rollFork(bytes32)\":{\"notice\":\"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block.\"},\"rollFork(uint256)\":{\"notice\":\"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork.\"},\"rollFork(uint256,bytes32)\":{\"notice\":\"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block.\"},\"rollFork(uint256,uint256)\":{\"notice\":\"Updates the given fork to given block number.\"},\"rpc(string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the current fork URL.\"},\"rpc(string,string,string)\":{\"notice\":\"Performs an Ethereum JSON-RPC request to the given endpoint.\"},\"rpcUrl(string)\":{\"notice\":\"Returns the RPC url for the given alias.\"},\"rpcUrlStructs()\":{\"notice\":\"Returns all rpc urls and their aliases as structs.\"},\"rpcUrls()\":{\"notice\":\"Returns all rpc urls and their aliases `[alias, url][]`.\"},\"selectFork(uint256)\":{\"notice\":\"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active.\"},\"serializeAddress(string,string,address)\":{\"notice\":\"See `serializeJson`.\"},\"serializeAddress(string,string,address[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBool(string,string,bool[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes(string,string,bytes[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32)\":{\"notice\":\"See `serializeJson`.\"},\"serializeBytes32(string,string,bytes32[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeInt(string,string,int256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeJson(string,string)\":{\"notice\":\"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment.\"},\"serializeJsonType(string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeJsonType(string,string,string,bytes)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string)\":{\"notice\":\"See `serializeJson`.\"},\"serializeString(string,string,string[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"serializeUint(string,string,uint256[])\":{\"notice\":\"See `serializeJson`.\"},\"serializeUintToHex(string,string,uint256)\":{\"notice\":\"See `serializeJson`.\"},\"setBlockhash(uint256,bytes32)\":{\"notice\":\"Set blockhash for the current block. It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`.\"},\"setEnv(string,string)\":{\"notice\":\"Sets environment variables.\"},\"setNonce(address,uint64)\":{\"notice\":\"Sets the nonce of an account. Must be higher than the current nonce of the account.\"},\"setNonceUnsafe(address,uint64)\":{\"notice\":\"Sets the nonce of an account to an arbitrary value.\"},\"sign((address,uint256,uint256,uint256),bytes32)\":{\"notice\":\"Signs data with a `Wallet`.\"},\"sign(address,bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address.\"},\"sign(bytes32)\":{\"notice\":\"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script.\"},\"sign(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256k1 curve.\"},\"signP256(uint256,bytes32)\":{\"notice\":\"Signs `digest` with `privateKey` using the secp256r1 curve.\"},\"skip(bool)\":{\"notice\":\"Marks a test as skipped. Must be called at the top of the test.\"},\"sleep(uint256)\":{\"notice\":\"Suspends execution of the main thread for `duration` milliseconds.\"},\"snapshot()\":{\"notice\":\"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertTo`.\"},\"split(string,string)\":{\"notice\":\"Splits the given `string` into an array of strings divided by the `delimiter`.\"},\"startBroadcast()\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used.\"},\"startBroadcast(address)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain.\"},\"startBroadcast(uint256)\":{\"notice\":\"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain.\"},\"startMappingRecording()\":{\"notice\":\"Starts recording all map SSTOREs for later retrieval.\"},\"startPrank(address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called.\"},\"startPrank(address,address)\":{\"notice\":\"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input.\"},\"startStateDiffRecording()\":{\"notice\":\"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls\"},\"stopAndReturnStateDiff()\":{\"notice\":\"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session.\"},\"stopBroadcast()\":{\"notice\":\"Stops collecting onchain transactions.\"},\"stopExpectSafeMemory()\":{\"notice\":\"Stops all safe memory expectation in the current subcontext.\"},\"stopMappingRecording()\":{\"notice\":\"Stops recording all map SSTOREs for later retrieval and clears the recorded data.\"},\"stopPrank()\":{\"notice\":\"Resets subsequent calls' `msg.sender` to be `address(this)`.\"},\"store(address,bytes32,bytes32)\":{\"notice\":\"Stores a value to an address' storage slot.\"},\"toBase64(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64 string.\"},\"toBase64(string)\":{\"notice\":\"Encodes a `string` value to a base64 string.\"},\"toBase64URL(bytes)\":{\"notice\":\"Encodes a `bytes` value to a base64url string.\"},\"toBase64URL(string)\":{\"notice\":\"Encodes a `string` value to a base64url string.\"},\"toLowercase(string)\":{\"notice\":\"Converts the given `string` value to Lowercase.\"},\"toString(address)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bool)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(bytes32)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(int256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toString(uint256)\":{\"notice\":\"Converts the given value to a `string`.\"},\"toUppercase(string)\":{\"notice\":\"Converts the given `string` value to Uppercase.\"},\"transact(bytes32)\":{\"notice\":\"Fetches the given transaction from the active fork and executes it on the current state.\"},\"transact(uint256,bytes32)\":{\"notice\":\"Fetches the given transaction from the given fork and executes it on the current state.\"},\"trim(string)\":{\"notice\":\"Trims leading and trailing whitespace from the given `string` value.\"},\"tryFfi(string[])\":{\"notice\":\"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr.\"},\"txGasPrice(uint256)\":{\"notice\":\"Sets `tx.gasprice`.\"},\"unixTime()\":{\"notice\":\"Returns the time since unix epoch in milliseconds.\"},\"warp(uint256)\":{\"notice\":\"Sets `block.timestamp`.\"},\"writeFile(string,string)\":{\"notice\":\"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeFileBinary(string,bytes)\":{\"notice\":\"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root.\"},\"writeJson(string,string)\":{\"notice\":\"Write a serialized JSON object to a file. If the file exists, it will be overwritten.\"},\"writeJson(string,string,string)\":{\"notice\":\"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing.\"},\"writeLine(string,string)\":{\"notice\":\"Writes line to file, creating a file if it does not exist. `path` is relative to the project root.\"},\"writeToml(string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML to a file.\"},\"writeToml(string,string,string)\":{\"notice\":\"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing.\"}},\"notice\":\"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used in tests, but it is not recommended to use these cheats in scripts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/forge-std/src/Vm.sol\":\"Vm\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0x8ee02a18c21a3cb37d315c1b16249ebb64feb1ea000f403e401844565dac9897\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://0d0d660a5ad2a84cfa66dec8638cfb3f237a891a2ca87be2a86e5b5e56da6350\",\"dweb:/ipfs/QmPAxUCp64UWxvBCcePovDTHv6Bipa8FWrz8F9Y2ewCzXR\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.26+commit.8a97fa7a"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"accesses","outputs":[{"internalType":"bytes32[]","name":"readSlots","type":"bytes32[]"},{"internalType":"bytes32[]","name":"writeSlots","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"activeFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"pure","type":"function","name":"addr","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"allowCheatcodes"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbs"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqAbsDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRel"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"maxPercentDelta","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertApproxEqRelDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertFalse"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertGtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLe"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLeDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLt"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertLtDecimal"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool","name":"left","type":"bool"},{"internalType":"bool","name":"right","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bool[]","name":"left","type":"bool[]"},{"internalType":"bool[]","name":"right","type":"bool[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address[]","name":"left","type":"address[]"},{"internalType":"address[]","name":"right","type":"address[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string","name":"left","type":"string"},{"internalType":"string","name":"right","type":"string"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes","name":"left","type":"bytes"},{"internalType":"bytes","name":"right","type":"bytes"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256[]","name":"left","type":"uint256[]"},{"internalType":"uint256[]","name":"right","type":"uint256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"address","name":"left","type":"address"},{"internalType":"address","name":"right","type":"address"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32","name":"left","type":"bytes32"},{"internalType":"bytes32","name":"right","type":"bytes32"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes32[]","name":"left","type":"bytes32[]"},{"internalType":"bytes32[]","name":"right","type":"bytes32[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"string[]","name":"left","type":"string[]"},{"internalType":"string[]","name":"right","type":"string[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256[]","name":"left","type":"int256[]"},{"internalType":"int256[]","name":"right","type":"int256[]"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"bytes[]","name":"left","type":"bytes[]"},{"internalType":"bytes[]","name":"right","type":"bytes[]"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"}],"stateMutability":"pure","type":"function","name":"assertNotEq"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"int256","name":"left","type":"int256"},{"internalType":"int256","name":"right","type":"int256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"uint256","name":"left","type":"uint256"},{"internalType":"uint256","name":"right","type":"uint256"},{"internalType":"uint256","name":"decimals","type":"uint256"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertNotEqDecimal"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"},{"internalType":"string","name":"error","type":"string"}],"stateMutability":"pure","type":"function","name":"assertTrue"},{"inputs":[{"internalType":"bool","name":"condition","type":"bool"}],"stateMutability":"pure","type":"function","name":"assume"},{"inputs":[{"internalType":"uint256","name":"newBlobBaseFee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"blobBaseFee"},{"inputs":[{"internalType":"bytes32[]","name":"hashes","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"blobhashes"},{"inputs":[{"internalType":"string","name":"char","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"breakpoint"},{"inputs":[{"internalType":"string","name":"char","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"breakpoint"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"broadcast"},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"broadcastRawTransaction"},{"inputs":[{"internalType":"uint256","name":"newChainId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"chainId"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"clearMockedCalls"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"closeFile"},{"inputs":[{"internalType":"address","name":"newCoinbase","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"coinbase"},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"bytes32","name":"initCodeHash","type":"bytes32"},{"internalType":"address","name":"deployer","type":"address"}],"stateMutability":"pure","type":"function","name":"computeCreate2Address","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"deployer","type":"address"},{"internalType":"uint256","name":"nonce","type":"uint256"}],"stateMutability":"pure","type":"function","name":"computeCreateAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"copyFile","outputs":[{"internalType":"uint64","name":"copied","type":"uint64"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"createDir"},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createSelectFork","outputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"string","name":"walletLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"createWallet","outputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"newBalance","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deal"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshot","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"deleteSnapshots"},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"},{"internalType":"bytes","name":"constructorArgs","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"deployCode","outputs":[{"internalType":"address","name":"deployedAddress","type":"address"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"},{"internalType":"string","name":"language","type":"string"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"mnemonic","type":"string"},{"internalType":"string","name":"derivationPath","type":"string"},{"internalType":"uint32","name":"index","type":"uint32"}],"stateMutability":"pure","type":"function","name":"deriveKey","outputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newDifficulty","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"difficulty"},{"inputs":[{"internalType":"string","name":"pathToStateJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"dumpState"},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"pure","type":"function","name":"ensNamehash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envAddress","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBool","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envBytes32","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envExists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envInt","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes32[]","name":"defaultValue","type":"bytes32[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32[]","name":"value","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"int256[]","name":"defaultValue","type":"int256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256[]","name":"value","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bool","name":"defaultValue","type":"bool"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool","name":"value","type":"bool"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"address","name":"defaultValue","type":"address"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address","name":"value","type":"address"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"uint256","name":"defaultValue","type":"uint256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bytes[]","name":"defaultValue","type":"bytes[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes[]","name":"value","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"uint256[]","name":"defaultValue","type":"uint256[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"string[]","name":"defaultValue","type":"string[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes","name":"defaultValue","type":"bytes"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes","name":"value","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"bytes32","name":"defaultValue","type":"bytes32"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"int256","name":"defaultValue","type":"int256"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"int256","name":"value","type":"int256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"address[]","name":"defaultValue","type":"address[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"address[]","name":"value","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"defaultValue","type":"string"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"},{"internalType":"bool[]","name":"defaultValue","type":"bool[]"}],"stateMutability":"view","type":"function","name":"envOr","outputs":[{"internalType":"bool[]","name":"value","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string[]","name":"value","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envString","outputs":[{"internalType":"string","name":"value","type":"string"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256","name":"value","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"delim","type":"string"}],"stateMutability":"view","type":"function","name":"envUint","outputs":[{"internalType":"uint256[]","name":"value","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"newRuntimeBytecode","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"etch"},{"inputs":[{"internalType":"uint256","name":"fromBlock","type":"uint256"},{"internalType":"uint256","name":"toBlock","type":"uint256"},{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"eth_getLogs","outputs":[{"internalType":"struct VmSafe.EthGetLogs[]","name":"logs","type":"tuple[]","components":[{"internalType":"address","name":"emitter","type":"address"},{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"internalType":"uint64","name":"blockNumber","type":"uint64"},{"internalType":"bytes32","name":"transactionHash","type":"bytes32"},{"internalType":"uint64","name":"transactionIndex","type":"uint64"},{"internalType":"uint256","name":"logIndex","type":"uint256"},{"internalType":"bool","name":"removed","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"exists","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"gas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"uint64","name":"minGas","type":"uint64"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"uint64","name":"count","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectCallMinGas"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmit"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bool","name":"checkTopic0","type":"bool"},{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"},{"internalType":"address","name":"emitter","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bool","name":"checkTopic0","type":"bool"},{"internalType":"bool","name":"checkTopic1","type":"bool"},{"internalType":"bool","name":"checkTopic2","type":"bool"},{"internalType":"bool","name":"checkTopic3","type":"bool"},{"internalType":"bool","name":"checkData","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"expectEmitAnonymous"},{"inputs":[{"internalType":"bytes4","name":"revertData","type":"bytes4"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"expectRevert"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemory"},{"inputs":[{"internalType":"uint64","name":"min","type":"uint64"},{"internalType":"uint64","name":"max","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"expectSafeMemoryCall"},{"inputs":[{"internalType":"uint256","name":"newBasefee","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"fee"},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"ffi","outputs":[{"internalType":"bytes","name":"result","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"fsMetadata","outputs":[{"internalType":"struct VmSafe.FsMetadata","name":"metadata","type":"tuple","components":[{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"},{"internalType":"uint256","name":"length","type":"uint256"},{"internalType":"bool","name":"readOnly","type":"bool"},{"internalType":"uint256","name":"modified","type":"uint256"},{"internalType":"uint256","name":"accessed","type":"uint256"},{"internalType":"uint256","name":"created","type":"uint256"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobBaseFee","outputs":[{"internalType":"uint256","name":"blobBaseFee","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlobhashes","outputs":[{"internalType":"bytes32[]","name":"hashes","type":"bytes32[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockNumber","outputs":[{"internalType":"uint256","name":"height","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getBlockTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getCode","outputs":[{"internalType":"bytes","name":"creationBytecode","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"artifactPath","type":"string"}],"stateMutability":"view","type":"function","name":"getDeployedCode","outputs":[{"internalType":"bytes","name":"runtimeBytecode","type":"bytes"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getLabel","outputs":[{"internalType":"string","name":"currentLabel","type":"string"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"elementSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingKeyAndParentOf","outputs":[{"internalType":"bool","name":"found","type":"bool"},{"internalType":"bytes32","name":"key","type":"bytes32"},{"internalType":"bytes32","name":"parent","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"getMappingLength","outputs":[{"internalType":"uint256","name":"length","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"mappingSlot","type":"bytes32"},{"internalType":"uint256","name":"idx","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"getMappingSlotAt","outputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]}],"stateMutability":"nonpayable","type":"function","name":"getNonce","outputs":[{"internalType":"uint64","name":"nonce","type":"uint64"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"getRecordedLogs","outputs":[{"internalType":"struct VmSafe.Log[]","name":"logs","type":"tuple[]","components":[{"internalType":"bytes32[]","name":"topics","type":"bytes32[]"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"address","name":"emitter","type":"address"}]}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"indexOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"enum VmSafe.ForgeContext","name":"context","type":"uint8"}],"stateMutability":"view","type":"function","name":"isContext","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"isDir","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"isFile","outputs":[{"internalType":"bool","name":"result","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"isPersistent","outputs":[{"internalType":"bool","name":"persistent","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExists","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsJson","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"view","type":"function","name":"keyExistsToml","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"string","name":"newLabel","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"label"},{"inputs":[],"stateMutability":"view","type":"function","name":"lastCallGas","outputs":[{"internalType":"struct VmSafe.Gas","name":"gas","type":"tuple","components":[{"internalType":"uint64","name":"gasLimit","type":"uint64"},{"internalType":"uint64","name":"gasTotalUsed","type":"uint64"},{"internalType":"uint64","name":"gasMemoryUsed","type":"uint64"},{"internalType":"int64","name":"gasRefunded","type":"int64"},{"internalType":"uint64","name":"gasRemaining","type":"uint64"}]}]},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"}],"stateMutability":"view","type":"function","name":"load","outputs":[{"internalType":"bytes32","name":"data","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"pathToAllocsJson","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"loadAllocs"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"account0","type":"address"},{"internalType":"address","name":"account1","type":"address"},{"internalType":"address","name":"account2","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"makePersistent"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCall"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"uint256","name":"msgValue","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"address","name":"callee","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bytes","name":"revertData","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"mockCallRevert"},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseAddress","outputs":[{"internalType":"address","name":"parsedValue","type":"address"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBool","outputs":[{"internalType":"bool","name":"parsedValue","type":"bool"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes","outputs":[{"internalType":"bytes","name":"parsedValue","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseBytes32","outputs":[{"internalType":"bytes32","name":"parsedValue","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseInt","outputs":[{"internalType":"int256","name":"parsedValue","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJson","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonType","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonTypeArray","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseJsonUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"}],"stateMutability":"pure","type":"function","name":"parseToml","outputs":[{"internalType":"bytes","name":"abiEncodedData","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlAddressArray","outputs":[{"internalType":"address[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBool","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBoolArray","outputs":[{"internalType":"bool[]","name":"","type":"bool[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytes32Array","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlBytesArray","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlInt","outputs":[{"internalType":"int256","name":"","type":"int256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlIntArray","outputs":[{"internalType":"int256[]","name":"","type":"int256[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlKeys","outputs":[{"internalType":"string[]","name":"keys","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlString","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlStringArray","outputs":[{"internalType":"string[]","name":"","type":"string[]"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"toml","type":"string"},{"internalType":"string","name":"key","type":"string"}],"stateMutability":"pure","type":"function","name":"parseTomlUintArray","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}],"stateMutability":"pure","type":"function","name":"parseUint","outputs":[{"internalType":"uint256","name":"parsedValue","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pauseGasMetering"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"prank"},{"inputs":[{"internalType":"bytes32","name":"newPrevrandao","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[{"internalType":"uint256","name":"newPrevrandao","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"prevrandao"},{"inputs":[],"stateMutability":"view","type":"function","name":"projectRoot","outputs":[{"internalType":"string","name":"path","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"prompt","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecret","outputs":[{"internalType":"string","name":"input","type":"string"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptSecretUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"promptText","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"promptUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"randomAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"min","type":"uint256"},{"internalType":"uint256","name":"max","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"randomUint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"readCallers","outputs":[{"internalType":"enum VmSafe.CallerMode","name":"callerMode","type":"uint8"},{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"maxDepth","type":"uint64"},{"internalType":"bool","name":"followLinks","type":"bool"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readDir","outputs":[{"internalType":"struct VmSafe.DirEntry[]","name":"entries","type":"tuple[]","components":[{"internalType":"string","name":"errorMessage","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"uint64","name":"depth","type":"uint64"},{"internalType":"bool","name":"isDir","type":"bool"},{"internalType":"bool","name":"isSymlink","type":"bool"}]}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFile","outputs":[{"internalType":"string","name":"data","type":"string"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readFileBinary","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"view","type":"function","name":"readLine","outputs":[{"internalType":"string","name":"line","type":"string"}]},{"inputs":[{"internalType":"string","name":"linkPath","type":"string"}],"stateMutability":"view","type":"function","name":"readLink","outputs":[{"internalType":"string","name":"targetPath","type":"string"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"record"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"recordLogs"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rememberKey","outputs":[{"internalType":"address","name":"keyAddr","type":"address"}]},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bool","name":"recursive","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"removeDir"},{"inputs":[{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"removeFile"},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"from","type":"string"},{"internalType":"string","name":"to","type":"string"}],"stateMutability":"pure","type":"function","name":"replace","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"resetNonce"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"resumeGasMetering"},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertTo","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"revertToAndDelete","outputs":[{"internalType":"bool","name":"success","type":"bool"}]},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"revokePersistent"},{"inputs":[{"internalType":"uint256","name":"newHeight","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"roll"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"rollFork"},{"inputs":[{"internalType":"string","name":"urlOrAlias","type":"string"},{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"method","type":"string"},{"internalType":"string","name":"params","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"rpc","outputs":[{"internalType":"bytes","name":"data","type":"bytes"}]},{"inputs":[{"internalType":"string","name":"rpcAlias","type":"string"}],"stateMutability":"view","type":"function","name":"rpcUrl","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrlStructs","outputs":[{"internalType":"struct VmSafe.Rpc[]","name":"urls","type":"tuple[]","components":[{"internalType":"string","name":"key","type":"string"},{"internalType":"string","name":"url","type":"string"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"rpcUrls","outputs":[{"internalType":"string[2][]","name":"urls","type":"string[2][]"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"selectFork"},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address[]","name":"values","type":"address[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"address","name":"value","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"serializeAddress","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool[]","name":"values","type":"bool[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"serializeBool","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes[]","name":"values","type":"bytes[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32[]","name":"values","type":"bytes32[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"serializeBytes32","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"int256[]","name":"values","type":"int256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeInt","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeJson","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"typeDescription","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"serializeJsonType","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"typeDescription","type":"string"},{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"serializeJsonType","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string[]","name":"values","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"serializeString","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256[]","name":"values","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"serializeUint","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"string","name":"objectKey","type":"string"},{"internalType":"string","name":"valueKey","type":"string"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"serializeUintToHex","outputs":[{"internalType":"string","name":"json","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"setBlockhash"},{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"value","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"setEnv"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonce"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint64","name":"newNonce","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"setNonceUnsafe"},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"signer","type":"address"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"struct VmSafe.Wallet","name":"wallet","type":"tuple","components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"publicKeyX","type":"uint256"},{"internalType":"uint256","name":"publicKeyY","type":"uint256"},{"internalType":"uint256","name":"privateKey","type":"uint256"}]},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"sign","outputs":[{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"},{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"signP256","outputs":[{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}]},{"inputs":[{"internalType":"bool","name":"skipTest","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"skip"},{"inputs":[{"internalType":"uint256","name":"duration","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"sleep"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"snapshot","outputs":[{"internalType":"uint256","name":"snapshotId","type":"uint256"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"},{"internalType":"string","name":"delimiter","type":"string"}],"stateMutability":"pure","type":"function","name":"split","outputs":[{"internalType":"string[]","name":"outputs","type":"string[]"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"address","name":"signer","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[{"internalType":"uint256","name":"privateKey","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"startBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startMappingRecording"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[{"internalType":"address","name":"msgSender","type":"address"},{"internalType":"address","name":"txOrigin","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"startPrank"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"startStateDiffRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopAndReturnStateDiff","outputs":[{"internalType":"struct VmSafe.AccountAccess[]","name":"accountAccesses","type":"tuple[]","components":[{"internalType":"struct VmSafe.ChainInfo","name":"chainInfo","type":"tuple","components":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"uint256","name":"chainId","type":"uint256"}]},{"internalType":"enum VmSafe.AccountAccessKind","name":"kind","type":"uint8"},{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"accessor","type":"address"},{"internalType":"bool","name":"initialized","type":"bool"},{"internalType":"uint256","name":"oldBalance","type":"uint256"},{"internalType":"uint256","name":"newBalance","type":"uint256"},{"internalType":"bytes","name":"deployedCode","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bool","name":"reverted","type":"bool"},{"internalType":"struct VmSafe.StorageAccess[]","name":"storageAccesses","type":"tuple[]","components":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bool","name":"isWrite","type":"bool"},{"internalType":"bytes32","name":"previousValue","type":"bytes32"},{"internalType":"bytes32","name":"newValue","type":"bytes32"},{"internalType":"bool","name":"reverted","type":"bool"}]},{"internalType":"uint64","name":"depth","type":"uint64"}]}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopBroadcast"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopExpectSafeMemory"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopMappingRecording"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"stopPrank"},{"inputs":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes32","name":"slot","type":"bytes32"},{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"store"},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"data","type":"string"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toBase64URL","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toLowercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"address","name":"value","type":"address"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes","name":"value","type":"bytes"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bool","name":"value","type":"bool"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"bytes32","name":"value","type":"bytes32"}],"stateMutability":"pure","type":"function","name":"toString","outputs":[{"internalType":"string","name":"stringifiedValue","type":"string"}]},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"toUppercase","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"uint256","name":"forkId","type":"uint256"},{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"bytes32","name":"txHash","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"transact"},{"inputs":[{"internalType":"string","name":"input","type":"string"}],"stateMutability":"pure","type":"function","name":"trim","outputs":[{"internalType":"string","name":"output","type":"string"}]},{"inputs":[{"internalType":"string[]","name":"commandInput","type":"string[]"}],"stateMutability":"nonpayable","type":"function","name":"tryFfi","outputs":[{"internalType":"struct VmSafe.FfiResult","name":"result","type":"tuple","components":[{"internalType":"int32","name":"exitCode","type":"int32"},{"internalType":"bytes","name":"stdout","type":"bytes"},{"internalType":"bytes","name":"stderr","type":"bytes"}]}]},{"inputs":[{"internalType":"uint256","name":"newGasPrice","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"txGasPrice"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"unixTime","outputs":[{"internalType":"uint256","name":"milliseconds","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"newTimestamp","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"warp"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeFile"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"writeFileBinary"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeJson"},{"inputs":[{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"data","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeLine"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"},{"internalType":"string","name":"valueKey","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"},{"inputs":[{"internalType":"string","name":"json","type":"string"},{"internalType":"string","name":"path","type":"string"}],"stateMutability":"nonpayable","type":"function","name":"writeToml"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{"accesses(address)":{"notice":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"activeFork()":{"notice":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"addr(uint256)":{"notice":"Gets the address for a given private key."},"allowCheatcodes(address)":{"notice":"In forking mode, explicitly grant the given address cheatcode access."},"assertApproxEqAbs(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbs(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"assertApproxEqAbs(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message."},"assertApproxEqAbsDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRel(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRel(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"assertApproxEqRel(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Includes error message into revert string on failure."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(int256,int256,uint256,uint256,string)":{"notice":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message."},"assertApproxEqRelDecimal(uint256,uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`. `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100% Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertEq(address,address)":{"notice":"Asserts that two `address` values are equal."},"assertEq(address,address,string)":{"notice":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"assertEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are equal."},"assertEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"assertEq(bool,bool)":{"notice":"Asserts that two `bool` values are equal."},"assertEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"assertEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are equal."},"assertEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"assertEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are equal."},"assertEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"assertEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are equal."},"assertEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are equal."},"assertEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"assertEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are equal."},"assertEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"assertEq(int256,int256)":{"notice":"Asserts that two `int256` values are equal."},"assertEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"assertEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are equal."},"assertEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"assertEq(string,string)":{"notice":"Asserts that two `string` values are equal."},"assertEq(string,string,string)":{"notice":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"assertEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are equal."},"assertEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"assertEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal."},"assertEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"assertEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256 values are equal."},"assertEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"assertEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"assertEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertFalse(bool)":{"notice":"Asserts that the given condition is false."},"assertFalse(bool,string)":{"notice":"Asserts that the given condition is false and includes error message into revert string on failure."},"assertGe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"assertGe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"assertGe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Includes error message into revert string on failure."},"assertGeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message."},"assertGeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second."},"assertGt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second."},"assertGt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Includes error message into revert string on failure."},"assertGtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertGtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message."},"assertGtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be greater than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLe(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second."},"assertLe(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLe(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"assertLe(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Includes error message into revert string on failure."},"assertLeDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLeDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message."},"assertLeDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than or equal to second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLt(int256,int256)":{"notice":"Compares two `int256` values. Expects first value to be less than second."},"assertLt(int256,int256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLt(uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second."},"assertLt(uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Includes error message into revert string on failure."},"assertLtDecimal(int256,int256,uint256)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(int256,int256,uint256,string)":{"notice":"Compares two `int256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertLtDecimal(uint256,uint256,uint256)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message."},"assertLtDecimal(uint256,uint256,uint256,string)":{"notice":"Compares two `uint256` values. Expects first value to be less than second. Formats values with decimals in failure message. Includes error message into revert string on failure."},"assertNotEq(address,address)":{"notice":"Asserts that two `address` values are not equal."},"assertNotEq(address,address,string)":{"notice":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(address[],address[])":{"notice":"Asserts that two arrays of `address` values are not equal."},"assertNotEq(address[],address[],string)":{"notice":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool,bool)":{"notice":"Asserts that two `bool` values are not equal."},"assertNotEq(bool,bool,string)":{"notice":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bool[],bool[])":{"notice":"Asserts that two arrays of `bool` values are not equal."},"assertNotEq(bool[],bool[],string)":{"notice":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes,bytes)":{"notice":"Asserts that two `bytes` values are not equal."},"assertNotEq(bytes,bytes,string)":{"notice":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32,bytes32)":{"notice":"Asserts that two `bytes32` values are not equal."},"assertNotEq(bytes32,bytes32,string)":{"notice":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes32[],bytes32[])":{"notice":"Asserts that two arrays of `bytes32` values are not equal."},"assertNotEq(bytes32[],bytes32[],string)":{"notice":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"assertNotEq(bytes[],bytes[])":{"notice":"Asserts that two arrays of `bytes` values are not equal."},"assertNotEq(bytes[],bytes[],string)":{"notice":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256,int256)":{"notice":"Asserts that two `int256` values are not equal."},"assertNotEq(int256,int256,string)":{"notice":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(int256[],int256[])":{"notice":"Asserts that two arrays of `int256` values are not equal."},"assertNotEq(int256[],int256[],string)":{"notice":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"assertNotEq(string,string)":{"notice":"Asserts that two `string` values are not equal."},"assertNotEq(string,string,string)":{"notice":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(string[],string[])":{"notice":"Asserts that two arrays of `string` values are not equal."},"assertNotEq(string[],string[],string)":{"notice":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal."},"assertNotEq(uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEq(uint256[],uint256[])":{"notice":"Asserts that two arrays of `uint256` values are not equal."},"assertNotEq(uint256[],uint256[],string)":{"notice":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"assertNotEqDecimal(int256,int256,uint256)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(int256,int256,uint256,string)":{"notice":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertNotEqDecimal(uint256,uint256,uint256)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"assertNotEqDecimal(uint256,uint256,uint256,string)":{"notice":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message. Includes error message into revert string on failure."},"assertTrue(bool)":{"notice":"Asserts that the given condition is true."},"assertTrue(bool,string)":{"notice":"Asserts that the given condition is true and includes error message into revert string on failure."},"assume(bool)":{"notice":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"blobBaseFee(uint256)":{"notice":"Sets `block.blobbasefee`"},"blobhashes(bytes32[])":{"notice":"Sets the blobhashes in the transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert."},"breakpoint(string)":{"notice":"Writes a breakpoint to jump to in the debugger."},"breakpoint(string,bool)":{"notice":"Writes a conditional breakpoint to jump to in the debugger."},"broadcast()":{"notice":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"broadcast(address)":{"notice":"Has the next call (at this call depth only) create a transaction with the address provided as the sender that can later be signed and sent onchain."},"broadcast(uint256)":{"notice":"Has the next call (at this call depth only) create a transaction with the private key provided as the sender that can later be signed and sent onchain."},"broadcastRawTransaction(bytes)":{"notice":"Takes a signed transaction and broadcasts it to the network."},"chainId(uint256)":{"notice":"Sets `block.chainid`."},"clearMockedCalls()":{"notice":"Clears all mocked calls."},"closeFile(string)":{"notice":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine. `path` is relative to the project root."},"coinbase(address)":{"notice":"Sets `block.coinbase`."},"computeCreate2Address(bytes32,bytes32)":{"notice":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"computeCreate2Address(bytes32,bytes32,address)":{"notice":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"computeCreateAddress(address,uint256)":{"notice":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"copyFile(string,string)":{"notice":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`. On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`. Both `from` and `to` are relative to the project root."},"createDir(string,bool)":{"notice":"Creates a new, empty directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - User lacks permissions to modify `path`. - A parent of the given path doesn't exist and `recursive` is false. - `path` already exists and `recursive` is false. `path` is relative to the project root."},"createFork(string)":{"notice":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"createFork(string,bytes32)":{"notice":"Creates a new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"createFork(string,uint256)":{"notice":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"createSelectFork(string)":{"notice":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"createSelectFork(string,bytes32)":{"notice":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in, replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"createSelectFork(string,uint256)":{"notice":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"createWallet(string)":{"notice":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"createWallet(uint256)":{"notice":"Generates a wallet from the private key and returns the wallet."},"createWallet(uint256,string)":{"notice":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"deal(address,uint256)":{"notice":"Sets an address' balance."},"deleteSnapshot(uint256)":{"notice":"Removes the snapshot with the given ID created by `snapshot`. Takes the snapshot ID to delete. Returns `true` if the snapshot was successfully deleted. Returns `false` if the snapshot does not exist."},"deleteSnapshots()":{"notice":"Removes _all_ snapshots previously created by `snapshot`."},"deployCode(string)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"deployCode(string,bytes)":{"notice":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional. Additionaly accepts abi-encoded constructor arguments."},"deriveKey(string,string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at `{derivationPath}{index}`."},"deriveKey(string,string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at `{derivationPath}{index}`."},"deriveKey(string,uint32)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) at the derivation path `m/44'/60'/0'/0/{index}`."},"deriveKey(string,uint32,string)":{"notice":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language at the derivation path `m/44'/60'/0'/0/{index}`."},"difficulty(uint256)":{"notice":"Sets `block.difficulty`. Not available on EVM versions from Paris onwards. Use `prevrandao` instead. Reverts if used on unsupported EVM versions."},"dumpState(string)":{"notice":"Dump a genesis JSON file's `allocs` to disk."},"ensNamehash(string)":{"notice":"Returns ENS namehash for provided string."},"envAddress(string)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable was not found or could not be parsed."},"envAddress(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBool(string)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable was not found or could not be parsed."},"envBool(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable was not found or could not be parsed."},"envBytes(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable was not found or could not be parsed."},"envBytes32(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envExists(string)":{"notice":"Gets the environment variable `name` and returns true if it exists, else returns false."},"envInt(string)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable was not found or could not be parsed."},"envInt(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envOr(string,address)":{"notice":"Gets the environment variable `name` and parses it as `address`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bool)":{"notice":"Gets the environment variable `name` and parses it as `bool`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes)":{"notice":"Gets the environment variable `name` and parses it as `bytes`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,bytes32)":{"notice":"Gets the environment variable `name` and parses it as `bytes32`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,int256)":{"notice":"Gets the environment variable `name` and parses it as `int256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,address[])":{"notice":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bool[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes32[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,bytes[])":{"notice":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,int256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,string[])":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,string,uint256[])":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envOr(string,uint256)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable could not be parsed. Returns `defaultValue` if the variable was not found."},"envString(string)":{"notice":"Gets the environment variable `name` and parses it as `string`. Reverts if the variable was not found or could not be parsed."},"envString(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"envUint(string)":{"notice":"Gets the environment variable `name` and parses it as `uint256`. Reverts if the variable was not found or could not be parsed."},"envUint(string,string)":{"notice":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`. Reverts if the variable was not found or could not be parsed."},"etch(address,bytes)":{"notice":"Sets an address' code."},"eth_getLogs(uint256,uint256,address,bytes32[])":{"notice":"Gets all the logs according to specified filter."},"exists(string)":{"notice":"Returns true if the given path points to an existing entity, else returns false."},"expectCall(address,bytes)":{"notice":"Expects a call to an address with the specified calldata. Calldata can either be a strict or a partial match."},"expectCall(address,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified calldata."},"expectCall(address,uint256,bytes)":{"notice":"Expects a call to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"expectCall(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"expectCall(address,uint256,uint64,bytes,uint64)":{"notice":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"expectCallMinGas(address,uint256,uint64,bytes)":{"notice":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectCallMinGas(address,uint256,uint64,bytes,uint64)":{"notice":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"expectEmit()":{"notice":"Prepare an expected log with all topic and data checks enabled. Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data."},"expectEmit(address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmit(bool,bool,bool,bool)":{"notice":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"expectEmit(bool,bool,bool,bool,address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmitAnonymous()":{"notice":"Prepare an expected anonymous log with all topic and data checks enabled. Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data."},"expectEmitAnonymous(address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectEmitAnonymous(bool,bool,bool,bool,bool)":{"notice":"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.). Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"expectEmitAnonymous(bool,bool,bool,bool,bool,address)":{"notice":"Same as the previous method, but also checks supplied address against emitting contract."},"expectRevert()":{"notice":"Expects an error on next call with any revert data."},"expectRevert(bytes)":{"notice":"Expects an error on next call that exactly matches the revert data."},"expectRevert(bytes4)":{"notice":"Expects an error on next call that starts with the revert data."},"expectSafeMemory(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"expectSafeMemoryCall(uint64,uint64)":{"notice":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext. If any other memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"fee(uint256)":{"notice":"Sets `block.basefee`."},"ffi(string[])":{"notice":"Performs a foreign function call via the terminal."},"fsMetadata(string)":{"notice":"Given a path, query the file system to get information about a file, directory, etc."},"getBlobBaseFee()":{"notice":"Gets the current `block.blobbasefee`. You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlobhashes()":{"notice":"Gets the blockhashes from the current transaction. Not available on EVM versions before Cancun. If used on unsupported EVM versions it will revert."},"getBlockNumber()":{"notice":"Gets the current `block.number`. You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getBlockTimestamp()":{"notice":"Gets the current `block.timestamp`. You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction, and as a result will get optimized out by the compiler. See https://github.com/foundry-rs/foundry/issues/6180"},"getCode(string)":{"notice":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getDeployedCode(string)":{"notice":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"getLabel(address)":{"notice":"Gets the label for the specified address."},"getMappingKeyAndParentOf(address,bytes32)":{"notice":"Gets the map key and parent of a mapping at a given slot, for a given address."},"getMappingLength(address,bytes32)":{"notice":"Gets the number of elements in the mapping at the given slot, for a given address."},"getMappingSlotAt(address,bytes32,uint256)":{"notice":"Gets the elements at index idx of the mapping at the given slot, for a given address. The index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"getNonce((address,uint256,uint256,uint256))":{"notice":"Get a `Wallet`'s nonce."},"getNonce(address)":{"notice":"Gets the nonce of an account."},"getRecordedLogs()":{"notice":"Gets all the recorded logs."},"indexOf(string,string)":{"notice":"Returns the index of the first occurrence of a `key` in an `input` string. Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found. Returns 0 in case of an empty `key`."},"isContext(uint8)":{"notice":"Returns true if `forge` command was executed in given context."},"isDir(string)":{"notice":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"isFile(string)":{"notice":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"isPersistent(address)":{"notice":"Returns true if the account is marked as persistent."},"keyExists(string,string)":{"notice":"Checks if `key` exists in a JSON object `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"keyExistsJson(string,string)":{"notice":"Checks if `key` exists in a JSON object."},"keyExistsToml(string,string)":{"notice":"Checks if `key` exists in a TOML table."},"label(address,string)":{"notice":"Labels an address in call traces."},"lastCallGas()":{"notice":"Gets the gas used in the last call."},"load(address,bytes32)":{"notice":"Loads a storage slot from an address."},"loadAllocs(string)":{"notice":"Load a genesis JSON file's `allocs` into the in-memory revm state."},"makePersistent(address)":{"notice":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup Meaning, changes made to the state of this account will be kept when switching forks."},"makePersistent(address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address,address,address)":{"notice":"See `makePersistent(address)`."},"makePersistent(address[])":{"notice":"See `makePersistent(address)`."},"mockCall(address,bytes,bytes)":{"notice":"Mocks a call to an address, returning specified data. Calldata can either be strict or a partial match, e.g. if you only pass a Solidity selector to the expected calldata, then the entire Solidity function will be mocked."},"mockCall(address,uint256,bytes,bytes)":{"notice":"Mocks a call to an address with a specific `msg.value`, returning specified data. Calldata match takes precedence over `msg.value` in case of ambiguity."},"mockCallRevert(address,bytes,bytes)":{"notice":"Reverts a call to an address with specified revert data."},"mockCallRevert(address,uint256,bytes,bytes)":{"notice":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"parseAddress(string)":{"notice":"Parses the given `string` into an `address`."},"parseBool(string)":{"notice":"Parses the given `string` into a `bool`."},"parseBytes(string)":{"notice":"Parses the given `string` into `bytes`."},"parseBytes32(string)":{"notice":"Parses the given `string` into a `bytes32`."},"parseInt(string)":{"notice":"Parses the given `string` into a `int256`."},"parseJson(string)":{"notice":"ABI-encodes a JSON object."},"parseJson(string,string)":{"notice":"ABI-encodes a JSON object at `key`."},"parseJsonAddress(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address`."},"parseJsonAddressArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"parseJsonBool(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool`."},"parseJsonBoolArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"parseJsonBytes(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"parseJsonBytes32(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"parseJsonBytes32Array(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"parseJsonBytesArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"parseJsonInt(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256`."},"parseJsonIntArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"parseJsonKeys(string,string)":{"notice":"Returns an array of all the keys in a JSON object."},"parseJsonString(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string`."},"parseJsonStringArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"parseJsonType(string,string)":{"notice":"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`."},"parseJsonType(string,string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`."},"parseJsonTypeArray(string,string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`."},"parseJsonUint(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"parseJsonUintArray(string,string)":{"notice":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"parseToml(string)":{"notice":"ABI-encodes a TOML table."},"parseToml(string,string)":{"notice":"ABI-encodes a TOML table at `key`."},"parseTomlAddress(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address`."},"parseTomlAddressArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"parseTomlBool(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool`."},"parseTomlBoolArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"parseTomlBytes(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"parseTomlBytes32(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"parseTomlBytes32Array(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"parseTomlBytesArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"parseTomlInt(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256`."},"parseTomlIntArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"parseTomlKeys(string,string)":{"notice":"Returns an array of all the keys in a TOML table."},"parseTomlString(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string`."},"parseTomlStringArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"parseTomlUint(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"parseTomlUintArray(string,string)":{"notice":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"parseUint(string)":{"notice":"Parses the given `string` into a `uint256`."},"pauseGasMetering()":{"notice":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"prank(address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address."},"prank(address,address)":{"notice":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"prevrandao(bytes32)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"prevrandao(uint256)":{"notice":"Sets `block.prevrandao`. Not available on EVM versions before Paris. Use `difficulty` instead. If used on unsupported EVM versions it will revert."},"projectRoot()":{"notice":"Get the path of the current project root."},"prompt(string)":{"notice":"Prompts the user for a string value in the terminal."},"promptAddress(string)":{"notice":"Prompts the user for an address in the terminal."},"promptSecret(string)":{"notice":"Prompts the user for a hidden string value in the terminal."},"promptSecretUint(string)":{"notice":"Prompts the user for hidden uint256 in the terminal (usually pk)."},"promptUint(string)":{"notice":"Prompts the user for uint256 in the terminal."},"randomAddress()":{"notice":"Returns a random `address`."},"randomUint()":{"notice":"Returns a random uint256 value."},"randomUint(uint256,uint256)":{"notice":"Returns random uin256 value between the provided range (=min..=max)."},"readCallers()":{"notice":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"readDir(string)":{"notice":"Reads the directory at the given path recursively, up to `maxDepth`. `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned. Follows symbolic links if `followLinks` is true."},"readDir(string,uint64)":{"notice":"See `readDir(string)`."},"readDir(string,uint64,bool)":{"notice":"See `readDir(string)`."},"readFile(string)":{"notice":"Reads the entire content of file to string. `path` is relative to the project root."},"readFileBinary(string)":{"notice":"Reads the entire content of file as binary. `path` is relative to the project root."},"readLine(string)":{"notice":"Reads next line of file to string."},"readLink(string)":{"notice":"Reads a symbolic link, returning the path that the link points to. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` is not a symbolic link. - `path` does not exist."},"record()":{"notice":"Records all storage reads and writes."},"recordLogs()":{"notice":"Record all the transaction logs."},"rememberKey(uint256)":{"notice":"Adds a private key to the local forge wallet and returns the address."},"removeDir(string,bool)":{"notice":"Removes a directory at the provided path. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` doesn't exist. - `path` isn't a directory. - User lacks permissions to modify `path`. - The directory is not empty and `recursive` is false. `path` is relative to the project root."},"removeFile(string)":{"notice":"Removes a file from the filesystem. This cheatcode will revert in the following situations, but is not limited to just these cases: - `path` points to a directory. - The file doesn't exist. - The user lacks permissions to remove the file. `path` is relative to the project root."},"replace(string,string,string)":{"notice":"Replaces occurrences of `from` in the given `string` with `to`."},"resetNonce(address)":{"notice":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"resumeGasMetering()":{"notice":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"revertTo(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted. Returns `false` if the snapshot does not exist. **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`."},"revertToAndDelete(uint256)":{"notice":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots Takes the snapshot ID to revert to. Returns `true` if the snapshot was successfully reverted and deleted. Returns `false` if the snapshot does not exist."},"revokePersistent(address)":{"notice":"Revokes persistent status from the address, previously added via `makePersistent`."},"revokePersistent(address[])":{"notice":"See `revokePersistent(address)`."},"roll(uint256)":{"notice":"Sets `block.height`."},"rollFork(bytes32)":{"notice":"Updates the currently active fork to given transaction. This will `rollFork` with the number of the block the transaction was mined in and replays all transaction mined before it in the block."},"rollFork(uint256)":{"notice":"Updates the currently active fork to given block number This is similar to `roll` but for the currently active fork."},"rollFork(uint256,bytes32)":{"notice":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"rollFork(uint256,uint256)":{"notice":"Updates the given fork to given block number."},"rpc(string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the current fork URL."},"rpc(string,string,string)":{"notice":"Performs an Ethereum JSON-RPC request to the given endpoint."},"rpcUrl(string)":{"notice":"Returns the RPC url for the given alias."},"rpcUrlStructs()":{"notice":"Returns all rpc urls and their aliases as structs."},"rpcUrls()":{"notice":"Returns all rpc urls and their aliases `[alias, url][]`."},"selectFork(uint256)":{"notice":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"serializeAddress(string,string,address)":{"notice":"See `serializeJson`."},"serializeAddress(string,string,address[])":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool)":{"notice":"See `serializeJson`."},"serializeBool(string,string,bool[])":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes)":{"notice":"See `serializeJson`."},"serializeBytes(string,string,bytes[])":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32)":{"notice":"See `serializeJson`."},"serializeBytes32(string,string,bytes32[])":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256)":{"notice":"See `serializeJson`."},"serializeInt(string,string,int256[])":{"notice":"See `serializeJson`."},"serializeJson(string,string)":{"notice":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file. Returns the stringified version of the specific JSON file up to that moment."},"serializeJsonType(string,bytes)":{"notice":"See `serializeJson`."},"serializeJsonType(string,string,string,bytes)":{"notice":"See `serializeJson`."},"serializeString(string,string,string)":{"notice":"See `serializeJson`."},"serializeString(string,string,string[])":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256)":{"notice":"See `serializeJson`."},"serializeUint(string,string,uint256[])":{"notice":"See `serializeJson`."},"serializeUintToHex(string,string,uint256)":{"notice":"See `serializeJson`."},"setBlockhash(uint256,bytes32)":{"notice":"Set blockhash for the current block. It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`."},"setEnv(string,string)":{"notice":"Sets environment variables."},"setNonce(address,uint64)":{"notice":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"setNonceUnsafe(address,uint64)":{"notice":"Sets the nonce of an account to an arbitrary value."},"sign((address,uint256,uint256,uint256),bytes32)":{"notice":"Signs data with a `Wallet`."},"sign(address,bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. Raises error if none of the signers passed into the script have provided address."},"sign(bytes32)":{"notice":"Signs `digest` with signer provided to script using the secp256k1 curve. If `--sender` is provided, the signer with provided address is used, otherwise, if exactly one signer is provided to the script, that signer is used. Raises error if signer passed through `--sender` does not match any unlocked signers or if `--sender` is not provided and not exactly one signer is passed to the script."},"sign(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256k1 curve."},"signP256(uint256,bytes32)":{"notice":"Signs `digest` with `privateKey` using the secp256r1 curve."},"skip(bool)":{"notice":"Marks a test as skipped. Must be called at the top of the test."},"sleep(uint256)":{"notice":"Suspends execution of the main thread for `duration` milliseconds."},"snapshot()":{"notice":"Snapshot the current state of the evm. Returns the ID of the snapshot that was created. To revert a snapshot use `revertTo`."},"split(string,string)":{"notice":"Splits the given `string` into an array of strings divided by the `delimiter`."},"startBroadcast()":{"notice":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain. Broadcasting address is determined by checking the following in order: 1. If `--sender` argument was provided, that address is used. 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used. 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"startBroadcast(address)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the address provided that can later be signed and sent onchain."},"startBroadcast(uint256)":{"notice":"Has all subsequent calls (at this call depth only) create transactions with the private key provided that can later be signed and sent onchain."},"startMappingRecording()":{"notice":"Starts recording all map SSTOREs for later retrieval."},"startPrank(address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"startPrank(address,address)":{"notice":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"startStateDiffRecording()":{"notice":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order, along with the context of the calls"},"stopAndReturnStateDiff()":{"notice":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"stopBroadcast()":{"notice":"Stops collecting onchain transactions."},"stopExpectSafeMemory()":{"notice":"Stops all safe memory expectation in the current subcontext."},"stopMappingRecording()":{"notice":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"stopPrank()":{"notice":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"store(address,bytes32,bytes32)":{"notice":"Stores a value to an address' storage slot."},"toBase64(bytes)":{"notice":"Encodes a `bytes` value to a base64 string."},"toBase64(string)":{"notice":"Encodes a `string` value to a base64 string."},"toBase64URL(bytes)":{"notice":"Encodes a `bytes` value to a base64url string."},"toBase64URL(string)":{"notice":"Encodes a `string` value to a base64url string."},"toLowercase(string)":{"notice":"Converts the given `string` value to Lowercase."},"toString(address)":{"notice":"Converts the given value to a `string`."},"toString(bool)":{"notice":"Converts the given value to a `string`."},"toString(bytes)":{"notice":"Converts the given value to a `string`."},"toString(bytes32)":{"notice":"Converts the given value to a `string`."},"toString(int256)":{"notice":"Converts the given value to a `string`."},"toString(uint256)":{"notice":"Converts the given value to a `string`."},"toUppercase(string)":{"notice":"Converts the given `string` value to Uppercase."},"transact(bytes32)":{"notice":"Fetches the given transaction from the active fork and executes it on the current state."},"transact(uint256,bytes32)":{"notice":"Fetches the given transaction from the given fork and executes it on the current state."},"trim(string)":{"notice":"Trims leading and trailing whitespace from the given `string` value."},"tryFfi(string[])":{"notice":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"txGasPrice(uint256)":{"notice":"Sets `tx.gasprice`."},"unixTime()":{"notice":"Returns the time since unix epoch in milliseconds."},"warp(uint256)":{"notice":"Sets `block.timestamp`."},"writeFile(string,string)":{"notice":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeFileBinary(string,bytes)":{"notice":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does. `path` is relative to the project root."},"writeJson(string,string)":{"notice":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"writeJson(string,string,string)":{"notice":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.> This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"writeLine(string,string)":{"notice":"Writes line to file, creating a file if it does not exist. `path` is relative to the project root."},"writeToml(string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"writeToml(string,string,string)":{"notice":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.> This is useful to replace a specific value of a TOML file, without having to parse the entire thing."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","hardhat/=node_modules/hardhat/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/forge-std/src/Vm.sol":"Vm"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/forge-std/src/Vm.sol":{"keccak256":"0x8ee02a18c21a3cb37d315c1b16249ebb64feb1ea000f403e401844565dac9897","urls":["bzz-raw://0d0d660a5ad2a84cfa66dec8638cfb3f237a891a2ca87be2a86e5b5e56da6350","dweb:/ipfs/QmPAxUCp64UWxvBCcePovDTHv6Bipa8FWrz8F9Y2ewCzXR"],"license":"MIT OR Apache-2.0"}},"version":1},"ast":{"absolutePath":"lib/forge-std/src/Vm.sol","id":16887,"exportedSymbols":{"Vm":[16886],"VmSafe":[16237]},"nodeType":"SourceUnit","src":"117:95126:15","nodes":[{"id":12903,"nodeType":"PragmaDirective","src":"117:31:15","nodes":[],"literals":["solidity",">=","0.6",".2","<","0.9",".0"]},{"id":12904,"nodeType":"PragmaDirective","src":"149:33:15","nodes":[],"literals":["experimental","ABIEncoderV2"]},{"id":16237,"nodeType":"ContractDefinition","src":"409:78772:15","nodes":[{"id":12912,"nodeType":"EnumDefinition","src":"529:533:15","nodes":[],"canonicalName":"VmSafe.CallerMode","documentation":{"id":12906,"nodeType":"StructuredDocumentation","src":"432:92:15","text":"A modification applied to either `msg.sender` or `tx.origin`. Returned by `readCallers`."},"members":[{"id":12907,"name":"None","nameLocation":"610:4:15","nodeType":"EnumValue","src":"610:4:15"},{"id":12908,"name":"Broadcast","nameLocation":"714:9:15","nodeType":"EnumValue","src":"714:9:15"},{"id":12909,"name":"RecurrentBroadcast","nameLocation":"829:18:15","nodeType":"EnumValue","src":"829:18:15"},{"id":12910,"name":"Prank","nameLocation":"939:5:15","nodeType":"EnumValue","src":"939:5:15"},{"id":12911,"name":"RecurrentPrank","nameLocation":"1042:14:15","nodeType":"EnumValue","src":"1042:14:15"}],"name":"CallerMode","nameLocation":"534:10:15"},{"id":12925,"nodeType":"EnumDefinition","src":"1118:791:15","nodes":[],"canonicalName":"VmSafe.AccountAccessKind","documentation":{"id":12913,"nodeType":"StructuredDocumentation","src":"1068:45:15","text":"The kind of account access that occurred."},"members":[{"id":12914,"name":"Call","nameLocation":"1186:4:15","nodeType":"EnumValue","src":"1186:4:15"},{"id":12915,"name":"DelegateCall","nameLocation":"1252:12:15","nodeType":"EnumValue","src":"1252:12:15"},{"id":12916,"name":"CallCode","nameLocation":"1322:8:15","nodeType":"EnumValue","src":"1322:8:15"},{"id":12917,"name":"StaticCall","nameLocation":"1390:10:15","nodeType":"EnumValue","src":"1390:10:15"},{"id":12918,"name":"Create","nameLocation":"1446:6:15","nodeType":"EnumValue","src":"1446:6:15"},{"id":12919,"name":"SelfDestruct","nameLocation":"1505:12:15","nodeType":"EnumValue","src":"1505:12:15"},{"id":12920,"name":"Resume","nameLocation":"1644:6:15","nodeType":"EnumValue","src":"1644:6:15"},{"id":12921,"name":"Balance","nameLocation":"1703:7:15","nodeType":"EnumValue","src":"1703:7:15"},{"id":12922,"name":"Extcodesize","nameLocation":"1764:11:15","nodeType":"EnumValue","src":"1764:11:15"},{"id":12923,"name":"Extcodehash","nameLocation":"1829:11:15","nodeType":"EnumValue","src":"1829:11:15"},{"id":12924,"name":"Extcodecopy","nameLocation":"1892:11:15","nodeType":"EnumValue","src":"1892:11:15"}],"name":"AccountAccessKind","nameLocation":"1123:17:15"},{"id":12936,"nodeType":"EnumDefinition","src":"1949:683:15","nodes":[],"canonicalName":"VmSafe.ForgeContext","documentation":{"id":12926,"nodeType":"StructuredDocumentation","src":"1915:29:15","text":"Forge execution contexts."},"members":[{"id":12927,"name":"TestGroup","nameLocation":"2047:9:15","nodeType":"EnumValue","src":"2047:9:15"},{"id":12928,"name":"Test","nameLocation":"2109:4:15","nodeType":"EnumValue","src":"2109:4:15"},{"id":12929,"name":"Coverage","nameLocation":"2170:8:15","nodeType":"EnumValue","src":"2170:8:15"},{"id":12930,"name":"Snapshot","nameLocation":"2235:8:15","nodeType":"EnumValue","src":"2235:8:15"},{"id":12931,"name":"ScriptGroup","nameLocation":"2327:11:15","nodeType":"EnumValue","src":"2327:11:15"},{"id":12932,"name":"ScriptDryRun","nameLocation":"2393:12:15","nodeType":"EnumValue","src":"2393:12:15"},{"id":12933,"name":"ScriptBroadcast","nameLocation":"2472:15:15","nodeType":"EnumValue","src":"2472:15:15"},{"id":12934,"name":"ScriptResume","nameLocation":"2551:12:15","nodeType":"EnumValue","src":"2551:12:15"},{"id":12935,"name":"Unknown","nameLocation":"2619:7:15","nodeType":"EnumValue","src":"2619:7:15"}],"name":"ForgeContext","nameLocation":"1954:12:15"},{"id":12945,"nodeType":"StructDefinition","src":"2694:237:15","nodes":[],"canonicalName":"VmSafe.Log","documentation":{"id":12937,"nodeType":"StructuredDocumentation","src":"2638:51:15","text":"An Ethereum log. Returned by `getRecordedLogs`."},"members":[{"constant":false,"id":12940,"mutability":"mutable","name":"topics","nameLocation":"2792:6:15","nodeType":"VariableDeclaration","scope":12945,"src":"2782:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12938,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2782:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12939,"nodeType":"ArrayTypeName","src":"2782:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":12942,"mutability":"mutable","name":"data","nameLocation":"2850:4:15","nodeType":"VariableDeclaration","scope":12945,"src":"2844:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12941,"name":"bytes","nodeType":"ElementaryTypeName","src":"2844:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12944,"mutability":"mutable","name":"emitter","nameLocation":"2917:7:15","nodeType":"VariableDeclaration","scope":12945,"src":"2909:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12943,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Log","nameLocation":"2701:3:15","scope":16237,"visibility":"public"},{"id":12951,"nodeType":"StructDefinition","src":"3000:119:15","nodes":[],"canonicalName":"VmSafe.Rpc","documentation":{"id":12946,"nodeType":"StructuredDocumentation","src":"2937:58:15","text":"An RPC URL and its alias. Returned by `rpcUrlStructs`."},"members":[{"constant":false,"id":12948,"mutability":"mutable","name":"key","nameLocation":"3065:3:15","nodeType":"VariableDeclaration","scope":12951,"src":"3058:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":12947,"name":"string","nodeType":"ElementaryTypeName","src":"3058:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12950,"mutability":"mutable","name":"url","nameLocation":"3109:3:15","nodeType":"VariableDeclaration","scope":12951,"src":"3102:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":12949,"name":"string","nodeType":"ElementaryTypeName","src":"3102:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"Rpc","nameLocation":"3007:3:15","scope":16237,"visibility":"public"},{"id":12972,"nodeType":"StructDefinition","src":"3179:615:15","nodes":[],"canonicalName":"VmSafe.EthGetLogs","documentation":{"id":12952,"nodeType":"StructuredDocumentation","src":"3125:49:15","text":"An RPC log object. Returned by `eth_getLogs`."},"members":[{"constant":false,"id":12954,"mutability":"mutable","name":"emitter","nameLocation":"3260:7:15","nodeType":"VariableDeclaration","scope":12972,"src":"3252:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12953,"name":"address","nodeType":"ElementaryTypeName","src":"3252:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":12957,"mutability":"mutable","name":"topics","nameLocation":"3354:6:15","nodeType":"VariableDeclaration","scope":12972,"src":"3344:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":12955,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3344:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":12956,"nodeType":"ArrayTypeName","src":"3344:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":12959,"mutability":"mutable","name":"data","nameLocation":"3412:4:15","nodeType":"VariableDeclaration","scope":12972,"src":"3406:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":12958,"name":"bytes","nodeType":"ElementaryTypeName","src":"3406:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":12961,"mutability":"mutable","name":"blockHash","nameLocation":"3461:9:15","nodeType":"VariableDeclaration","scope":12972,"src":"3453:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12960,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3453:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12963,"mutability":"mutable","name":"blockNumber","nameLocation":"3516:11:15","nodeType":"VariableDeclaration","scope":12972,"src":"3509:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12962,"name":"uint64","nodeType":"ElementaryTypeName","src":"3509:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12965,"mutability":"mutable","name":"transactionHash","nameLocation":"3578:15:15","nodeType":"VariableDeclaration","scope":12972,"src":"3570:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":12964,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3570:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":12967,"mutability":"mutable","name":"transactionIndex","nameLocation":"3657:16:15","nodeType":"VariableDeclaration","scope":12972,"src":"3650:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12966,"name":"uint64","nodeType":"ElementaryTypeName","src":"3650:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12969,"mutability":"mutable","name":"logIndex","nameLocation":"3717:8:15","nodeType":"VariableDeclaration","scope":12972,"src":"3709:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12968,"name":"uint256","nodeType":"ElementaryTypeName","src":"3709:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12971,"mutability":"mutable","name":"removed","nameLocation":"3780:7:15","nodeType":"VariableDeclaration","scope":12972,"src":"3775:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12970,"name":"bool","nodeType":"ElementaryTypeName","src":"3775:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"EthGetLogs","nameLocation":"3186:10:15","scope":16237,"visibility":"public"},{"id":12984,"nodeType":"StructDefinition","src":"3870:334:15","nodes":[],"canonicalName":"VmSafe.DirEntry","documentation":{"id":12973,"nodeType":"StructuredDocumentation","src":"3800:65:15","text":"A single entry in a directory listing. Returned by `readDir`."},"members":[{"constant":false,"id":12975,"mutability":"mutable","name":"errorMessage","nameLocation":"3941:12:15","nodeType":"VariableDeclaration","scope":12984,"src":"3934:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":12974,"name":"string","nodeType":"ElementaryTypeName","src":"3934:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12977,"mutability":"mutable","name":"path","nameLocation":"4004:4:15","nodeType":"VariableDeclaration","scope":12984,"src":"3997:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":12976,"name":"string","nodeType":"ElementaryTypeName","src":"3997:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":12979,"mutability":"mutable","name":"depth","nameLocation":"4060:5:15","nodeType":"VariableDeclaration","scope":12984,"src":"4053:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":12978,"name":"uint64","nodeType":"ElementaryTypeName","src":"4053:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":12981,"mutability":"mutable","name":"isDir","nameLocation":"4125:5:15","nodeType":"VariableDeclaration","scope":12984,"src":"4120:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12980,"name":"bool","nodeType":"ElementaryTypeName","src":"4120:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12983,"mutability":"mutable","name":"isSymlink","nameLocation":"4188:9:15","nodeType":"VariableDeclaration","scope":12984,"src":"4183:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12982,"name":"bool","nodeType":"ElementaryTypeName","src":"4183:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"DirEntry","nameLocation":"3877:8:15","scope":16237,"visibility":"public"},{"id":13000,"nodeType":"StructDefinition","src":"4434:599:15","nodes":[],"canonicalName":"VmSafe.FsMetadata","documentation":{"id":12985,"nodeType":"StructuredDocumentation","src":"4210:219:15","text":"Metadata information about a file.\n This structure is returned from the `fsMetadata` function and represents known\n metadata about a file such as its permissions, size, modification\n times, etc."},"members":[{"constant":false,"id":12987,"mutability":"mutable","name":"isDir","nameLocation":"4520:5:15","nodeType":"VariableDeclaration","scope":13000,"src":"4515:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12986,"name":"bool","nodeType":"ElementaryTypeName","src":"4515:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12989,"mutability":"mutable","name":"isSymlink","nameLocation":"4591:9:15","nodeType":"VariableDeclaration","scope":13000,"src":"4586:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12988,"name":"bool","nodeType":"ElementaryTypeName","src":"4586:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12991,"mutability":"mutable","name":"length","nameLocation":"4683:6:15","nodeType":"VariableDeclaration","scope":13000,"src":"4675:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12990,"name":"uint256","nodeType":"ElementaryTypeName","src":"4675:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12993,"mutability":"mutable","name":"readOnly","nameLocation":"4774:8:15","nodeType":"VariableDeclaration","scope":13000,"src":"4769:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":12992,"name":"bool","nodeType":"ElementaryTypeName","src":"4769:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":12995,"mutability":"mutable","name":"modified","nameLocation":"4863:8:15","nodeType":"VariableDeclaration","scope":13000,"src":"4855:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12994,"name":"uint256","nodeType":"ElementaryTypeName","src":"4855:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12997,"mutability":"mutable","name":"accessed","nameLocation":"4939:8:15","nodeType":"VariableDeclaration","scope":13000,"src":"4931:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12996,"name":"uint256","nodeType":"ElementaryTypeName","src":"4931:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":12999,"mutability":"mutable","name":"created","nameLocation":"5019:7:15","nodeType":"VariableDeclaration","scope":13000,"src":"5011:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":12998,"name":"uint256","nodeType":"ElementaryTypeName","src":"5011:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"FsMetadata","nameLocation":"4441:10:15","scope":16237,"visibility":"public"},{"id":13010,"nodeType":"StructDefinition","src":"5087:277:15","nodes":[],"canonicalName":"VmSafe.Wallet","documentation":{"id":13001,"nodeType":"StructuredDocumentation","src":"5039:43:15","text":"A wallet with a public and private key."},"members":[{"constant":false,"id":13003,"mutability":"mutable","name":"addr","nameLocation":"5152:4:15","nodeType":"VariableDeclaration","scope":13010,"src":"5144:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13002,"name":"address","nodeType":"ElementaryTypeName","src":"5144:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13005,"mutability":"mutable","name":"publicKeyX","nameLocation":"5214:10:15","nodeType":"VariableDeclaration","scope":13010,"src":"5206:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13004,"name":"uint256","nodeType":"ElementaryTypeName","src":"5206:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13007,"mutability":"mutable","name":"publicKeyY","nameLocation":"5282:10:15","nodeType":"VariableDeclaration","scope":13010,"src":"5274:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13006,"name":"uint256","nodeType":"ElementaryTypeName","src":"5274:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13009,"mutability":"mutable","name":"privateKey","nameLocation":"5347:10:15","nodeType":"VariableDeclaration","scope":13010,"src":"5339:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13008,"name":"uint256","nodeType":"ElementaryTypeName","src":"5339:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Wallet","nameLocation":"5094:6:15","scope":16237,"visibility":"public"},{"id":13018,"nodeType":"StructDefinition","src":"5409:213:15","nodes":[],"canonicalName":"VmSafe.FfiResult","documentation":{"id":13011,"nodeType":"StructuredDocumentation","src":"5370:34:15","text":"The result of a `tryFfi` call."},"members":[{"constant":false,"id":13013,"mutability":"mutable","name":"exitCode","nameLocation":"5480:8:15","nodeType":"VariableDeclaration","scope":13018,"src":"5474:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":13012,"name":"int32","nodeType":"ElementaryTypeName","src":"5474:5:15","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"},{"constant":false,"id":13015,"mutability":"mutable","name":"stdout","nameLocation":"5557:6:15","nodeType":"VariableDeclaration","scope":13018,"src":"5551:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":13014,"name":"bytes","nodeType":"ElementaryTypeName","src":"5551:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":13017,"mutability":"mutable","name":"stderr","nameLocation":"5609:6:15","nodeType":"VariableDeclaration","scope":13018,"src":"5603:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":13016,"name":"bytes","nodeType":"ElementaryTypeName","src":"5603:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"FfiResult","nameLocation":"5416:9:15","scope":16237,"visibility":"public"},{"id":13024,"nodeType":"StructDefinition","src":"5671:184:15","nodes":[],"canonicalName":"VmSafe.ChainInfo","documentation":{"id":13019,"nodeType":"StructuredDocumentation","src":"5628:38:15","text":"Information on the chain and fork."},"members":[{"constant":false,"id":13021,"mutability":"mutable","name":"forkId","nameLocation":"5772:6:15","nodeType":"VariableDeclaration","scope":13024,"src":"5764:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13020,"name":"uint256","nodeType":"ElementaryTypeName","src":"5764:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13023,"mutability":"mutable","name":"chainId","nameLocation":"5841:7:15","nodeType":"VariableDeclaration","scope":13024,"src":"5833:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13022,"name":"uint256","nodeType":"ElementaryTypeName","src":"5833:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ChainInfo","nameLocation":"5678:9:15","scope":16237,"visibility":"public"},{"id":13056,"nodeType":"StructDefinition","src":"5916:1837:15","nodes":[],"canonicalName":"VmSafe.AccountAccess","documentation":{"id":13025,"nodeType":"StructuredDocumentation","src":"5861:50:15","text":"The result of a `stopAndReturnStateDiff` call."},"members":[{"constant":false,"id":13028,"mutability":"mutable","name":"chainInfo","nameLocation":"6008:9:15","nodeType":"VariableDeclaration","scope":13056,"src":"5998:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$13024_storage_ptr","typeString":"struct VmSafe.ChainInfo"},"typeName":{"id":13027,"nodeType":"UserDefinedTypeName","pathNode":{"id":13026,"name":"ChainInfo","nameLocations":["5998:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":13024,"src":"5998:9:15"},"referencedDeclaration":13024,"src":"5998:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_ChainInfo_$13024_storage_ptr","typeString":"struct VmSafe.ChainInfo"}},"visibility":"internal"},{"constant":false,"id":13031,"mutability":"mutable","name":"kind","nameLocation":"6471:4:15","nodeType":"VariableDeclaration","scope":13056,"src":"6453:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$12925","typeString":"enum VmSafe.AccountAccessKind"},"typeName":{"id":13030,"nodeType":"UserDefinedTypeName","pathNode":{"id":13029,"name":"AccountAccessKind","nameLocations":["6453:17:15"],"nodeType":"IdentifierPath","referencedDeclaration":12925,"src":"6453:17:15"},"referencedDeclaration":12925,"src":"6453:17:15","typeDescriptions":{"typeIdentifier":"t_enum$_AccountAccessKind_$12925","typeString":"enum VmSafe.AccountAccessKind"}},"visibility":"internal"},{"constant":false,"id":13033,"mutability":"mutable","name":"account","nameLocation":"6648:7:15","nodeType":"VariableDeclaration","scope":13056,"src":"6640:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13032,"name":"address","nodeType":"ElementaryTypeName","src":"6640:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13035,"mutability":"mutable","name":"accessor","nameLocation":"6711:8:15","nodeType":"VariableDeclaration","scope":13056,"src":"6703:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13034,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13037,"mutability":"mutable","name":"initialized","nameLocation":"6922:11:15","nodeType":"VariableDeclaration","scope":13056,"src":"6917:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13036,"name":"bool","nodeType":"ElementaryTypeName","src":"6917:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13039,"mutability":"mutable","name":"oldBalance","nameLocation":"7008:10:15","nodeType":"VariableDeclaration","scope":13056,"src":"7000:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13038,"name":"uint256","nodeType":"ElementaryTypeName","src":"7000:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13041,"mutability":"mutable","name":"newBalance","nameLocation":"7183:10:15","nodeType":"VariableDeclaration","scope":13056,"src":"7175:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13040,"name":"uint256","nodeType":"ElementaryTypeName","src":"7175:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13043,"mutability":"mutable","name":"deployedCode","nameLocation":"7260:12:15","nodeType":"VariableDeclaration","scope":13056,"src":"7254:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":13042,"name":"bytes","nodeType":"ElementaryTypeName","src":"7254:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":13045,"mutability":"mutable","name":"value","nameLocation":"7344:5:15","nodeType":"VariableDeclaration","scope":13056,"src":"7336:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13044,"name":"uint256","nodeType":"ElementaryTypeName","src":"7336:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13047,"mutability":"mutable","name":"data","nameLocation":"7418:4:15","nodeType":"VariableDeclaration","scope":13056,"src":"7412:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":13046,"name":"bytes","nodeType":"ElementaryTypeName","src":"7412:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":13049,"mutability":"mutable","name":"reverted","nameLocation":"7513:8:15","nodeType":"VariableDeclaration","scope":13056,"src":"7508:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13048,"name":"bool","nodeType":"ElementaryTypeName","src":"7508:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13053,"mutability":"mutable","name":"storageAccesses","nameLocation":"7635:15:15","nodeType":"VariableDeclaration","scope":13056,"src":"7619:31:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$13070_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"},"typeName":{"baseType":{"id":13051,"nodeType":"UserDefinedTypeName","pathNode":{"id":13050,"name":"StorageAccess","nameLocations":["7619:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":13070,"src":"7619:13:15"},"referencedDeclaration":13070,"src":"7619:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_StorageAccess_$13070_storage_ptr","typeString":"struct VmSafe.StorageAccess"}},"id":13052,"nodeType":"ArrayTypeName","src":"7619:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_StorageAccess_$13070_storage_$dyn_storage_ptr","typeString":"struct VmSafe.StorageAccess[]"}},"visibility":"internal"},{"constant":false,"id":13055,"mutability":"mutable","name":"depth","nameLocation":"7741:5:15","nodeType":"VariableDeclaration","scope":13056,"src":"7734:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13054,"name":"uint64","nodeType":"ElementaryTypeName","src":"7734:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"AccountAccess","nameLocation":"5923:13:15","scope":16237,"visibility":"public"},{"id":13070,"nodeType":"StructDefinition","src":"7815:425:15","nodes":[],"canonicalName":"VmSafe.StorageAccess","documentation":{"id":13057,"nodeType":"StructuredDocumentation","src":"7759:51:15","text":"The storage accessed during an `AccountAccess`."},"members":[{"constant":false,"id":13059,"mutability":"mutable","name":"account","nameLocation":"7905:7:15","nodeType":"VariableDeclaration","scope":13070,"src":"7897:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13058,"name":"address","nodeType":"ElementaryTypeName","src":"7897:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13061,"mutability":"mutable","name":"slot","nameLocation":"7969:4:15","nodeType":"VariableDeclaration","scope":13070,"src":"7961:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13060,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7961:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13063,"mutability":"mutable","name":"isWrite","nameLocation":"8026:7:15","nodeType":"VariableDeclaration","scope":13070,"src":"8021:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13062,"name":"bool","nodeType":"ElementaryTypeName","src":"8021:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13065,"mutability":"mutable","name":"previousValue","nameLocation":"8094:13:15","nodeType":"VariableDeclaration","scope":13070,"src":"8086:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13064,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8086:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13067,"mutability":"mutable","name":"newValue","nameLocation":"8163:8:15","nodeType":"VariableDeclaration","scope":13070,"src":"8155:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13066,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8155:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13069,"mutability":"mutable","name":"reverted","nameLocation":"8225:8:15","nodeType":"VariableDeclaration","scope":13070,"src":"8220:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13068,"name":"bool","nodeType":"ElementaryTypeName","src":"8220:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"StorageAccess","nameLocation":"7822:13:15","scope":16237,"visibility":"public"},{"id":13082,"nodeType":"StructDefinition","src":"8291:458:15","nodes":[],"canonicalName":"VmSafe.Gas","documentation":{"id":13071,"nodeType":"StructuredDocumentation","src":"8246:40:15","text":"Gas used. Returned by `lastCallGas`."},"members":[{"constant":false,"id":13073,"mutability":"mutable","name":"gasLimit","nameLocation":"8357:8:15","nodeType":"VariableDeclaration","scope":13082,"src":"8350:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13072,"name":"uint64","nodeType":"ElementaryTypeName","src":"8350:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":13075,"mutability":"mutable","name":"gasTotalUsed","nameLocation":"8413:12:15","nodeType":"VariableDeclaration","scope":13082,"src":"8406:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13074,"name":"uint64","nodeType":"ElementaryTypeName","src":"8406:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":13077,"mutability":"mutable","name":"gasMemoryUsed","nameLocation":"8594:13:15","nodeType":"VariableDeclaration","scope":13082,"src":"8587:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13076,"name":"uint64","nodeType":"ElementaryTypeName","src":"8587:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":13079,"mutability":"mutable","name":"gasRefunded","nameLocation":"8662:11:15","nodeType":"VariableDeclaration","scope":13082,"src":"8656:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":13078,"name":"int64","nodeType":"ElementaryTypeName","src":"8656:5:15","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":13081,"mutability":"mutable","name":"gasRemaining","nameLocation":"8730:12:15","nodeType":"VariableDeclaration","scope":13082,"src":"8723:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13080,"name":"uint64","nodeType":"ElementaryTypeName","src":"8723:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"Gas","nameLocation":"8298:3:15","scope":16237,"visibility":"public"},{"id":13090,"nodeType":"FunctionDefinition","src":"8936:80:15","nodes":[],"documentation":{"id":13083,"nodeType":"StructuredDocumentation","src":"8793:138:15","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"350d56bf","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"8945:10:15","parameters":{"id":13086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13085,"mutability":"mutable","name":"name","nameLocation":"8972:4:15","nodeType":"VariableDeclaration","scope":13090,"src":"8956:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13084,"name":"string","nodeType":"ElementaryTypeName","src":"8956:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8955:22:15"},"returnParameters":{"id":13089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13088,"mutability":"mutable","name":"value","nameLocation":"9009:5:15","nodeType":"VariableDeclaration","scope":13090,"src":"9001:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13087,"name":"address","nodeType":"ElementaryTypeName","src":"9001:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9000:15:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13101,"nodeType":"FunctionDefinition","src":"9199:112:15","nodes":[],"documentation":{"id":13091,"nodeType":"StructuredDocumentation","src":"9022:172:15","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ad31b9fa","implemented":false,"kind":"function","modifiers":[],"name":"envAddress","nameLocation":"9208:10:15","parameters":{"id":13096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13093,"mutability":"mutable","name":"name","nameLocation":"9235:4:15","nodeType":"VariableDeclaration","scope":13101,"src":"9219:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13092,"name":"string","nodeType":"ElementaryTypeName","src":"9219:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13095,"mutability":"mutable","name":"delim","nameLocation":"9257:5:15","nodeType":"VariableDeclaration","scope":13101,"src":"9241:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13094,"name":"string","nodeType":"ElementaryTypeName","src":"9241:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9218:45:15"},"returnParameters":{"id":13100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13099,"mutability":"mutable","name":"value","nameLocation":"9304:5:15","nodeType":"VariableDeclaration","scope":13101,"src":"9287:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13097,"name":"address","nodeType":"ElementaryTypeName","src":"9287:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13098,"nodeType":"ArrayTypeName","src":"9287:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"9286:24:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13109,"nodeType":"FunctionDefinition","src":"9457:74:15","nodes":[],"documentation":{"id":13102,"nodeType":"StructuredDocumentation","src":"9317:135:15","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"7ed1ec7d","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"9466:7:15","parameters":{"id":13105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13104,"mutability":"mutable","name":"name","nameLocation":"9490:4:15","nodeType":"VariableDeclaration","scope":13109,"src":"9474:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13103,"name":"string","nodeType":"ElementaryTypeName","src":"9474:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9473:22:15"},"returnParameters":{"id":13108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13107,"mutability":"mutable","name":"value","nameLocation":"9524:5:15","nodeType":"VariableDeclaration","scope":13109,"src":"9519:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13106,"name":"bool","nodeType":"ElementaryTypeName","src":"9519:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9518:12:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13120,"nodeType":"FunctionDefinition","src":"9711:106:15","nodes":[],"documentation":{"id":13110,"nodeType":"StructuredDocumentation","src":"9537:169:15","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"aaaddeaf","implemented":false,"kind":"function","modifiers":[],"name":"envBool","nameLocation":"9720:7:15","parameters":{"id":13115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13112,"mutability":"mutable","name":"name","nameLocation":"9744:4:15","nodeType":"VariableDeclaration","scope":13120,"src":"9728:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13111,"name":"string","nodeType":"ElementaryTypeName","src":"9728:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13114,"mutability":"mutable","name":"delim","nameLocation":"9766:5:15","nodeType":"VariableDeclaration","scope":13120,"src":"9750:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13113,"name":"string","nodeType":"ElementaryTypeName","src":"9750:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9727:45:15"},"returnParameters":{"id":13119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13118,"mutability":"mutable","name":"value","nameLocation":"9810:5:15","nodeType":"VariableDeclaration","scope":13120,"src":"9796:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13116,"name":"bool","nodeType":"ElementaryTypeName","src":"9796:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13117,"nodeType":"ArrayTypeName","src":"9796:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"9795:21:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13128,"nodeType":"FunctionDefinition","src":"9966:80:15","nodes":[],"documentation":{"id":13121,"nodeType":"StructuredDocumentation","src":"9823:138:15","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"97949042","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"9975:10:15","parameters":{"id":13124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13123,"mutability":"mutable","name":"name","nameLocation":"10002:4:15","nodeType":"VariableDeclaration","scope":13128,"src":"9986:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13122,"name":"string","nodeType":"ElementaryTypeName","src":"9986:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"9985:22:15"},"returnParameters":{"id":13127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13126,"mutability":"mutable","name":"value","nameLocation":"10039:5:15","nodeType":"VariableDeclaration","scope":13128,"src":"10031:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13125,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10031:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10030:15:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13139,"nodeType":"FunctionDefinition","src":"10229:112:15","nodes":[],"documentation":{"id":13129,"nodeType":"StructuredDocumentation","src":"10052:172:15","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"5af231c1","implemented":false,"kind":"function","modifiers":[],"name":"envBytes32","nameLocation":"10238:10:15","parameters":{"id":13134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13131,"mutability":"mutable","name":"name","nameLocation":"10265:4:15","nodeType":"VariableDeclaration","scope":13139,"src":"10249:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13130,"name":"string","nodeType":"ElementaryTypeName","src":"10249:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13133,"mutability":"mutable","name":"delim","nameLocation":"10287:5:15","nodeType":"VariableDeclaration","scope":13139,"src":"10271:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13132,"name":"string","nodeType":"ElementaryTypeName","src":"10271:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10248:45:15"},"returnParameters":{"id":13138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13137,"mutability":"mutable","name":"value","nameLocation":"10334:5:15","nodeType":"VariableDeclaration","scope":13139,"src":"10317:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13135,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10317:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13136,"nodeType":"ArrayTypeName","src":"10317:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"10316:24:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13147,"nodeType":"FunctionDefinition","src":"10488:83:15","nodes":[],"documentation":{"id":13140,"nodeType":"StructuredDocumentation","src":"10347:136:15","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"4d7baf06","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"10497:8:15","parameters":{"id":13143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13142,"mutability":"mutable","name":"name","nameLocation":"10522:4:15","nodeType":"VariableDeclaration","scope":13147,"src":"10506:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13141,"name":"string","nodeType":"ElementaryTypeName","src":"10506:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10505:22:15"},"returnParameters":{"id":13146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13145,"mutability":"mutable","name":"value","nameLocation":"10564:5:15","nodeType":"VariableDeclaration","scope":13147,"src":"10551:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13144,"name":"bytes","nodeType":"ElementaryTypeName","src":"10551:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10550:20:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13158,"nodeType":"FunctionDefinition","src":"10752:108:15","nodes":[],"documentation":{"id":13148,"nodeType":"StructuredDocumentation","src":"10577:170:15","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"ddc2651b","implemented":false,"kind":"function","modifiers":[],"name":"envBytes","nameLocation":"10761:8:15","parameters":{"id":13153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13150,"mutability":"mutable","name":"name","nameLocation":"10786:4:15","nodeType":"VariableDeclaration","scope":13158,"src":"10770:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13149,"name":"string","nodeType":"ElementaryTypeName","src":"10770:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13152,"mutability":"mutable","name":"delim","nameLocation":"10808:5:15","nodeType":"VariableDeclaration","scope":13158,"src":"10792:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13151,"name":"string","nodeType":"ElementaryTypeName","src":"10792:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10769:45:15"},"returnParameters":{"id":13157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13156,"mutability":"mutable","name":"value","nameLocation":"10853:5:15","nodeType":"VariableDeclaration","scope":13158,"src":"10838:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13154,"name":"bytes","nodeType":"ElementaryTypeName","src":"10838:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13155,"nodeType":"ArrayTypeName","src":"10838:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"10837:22:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13166,"nodeType":"FunctionDefinition","src":"10962:77:15","nodes":[],"documentation":{"id":13159,"nodeType":"StructuredDocumentation","src":"10866:91:15","text":"Gets the environment variable `name` and returns true if it exists, else returns false."},"functionSelector":"ce8365f9","implemented":false,"kind":"function","modifiers":[],"name":"envExists","nameLocation":"10971:9:15","parameters":{"id":13162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13161,"mutability":"mutable","name":"name","nameLocation":"10997:4:15","nodeType":"VariableDeclaration","scope":13166,"src":"10981:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13160,"name":"string","nodeType":"ElementaryTypeName","src":"10981:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10980:22:15"},"returnParameters":{"id":13165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13164,"mutability":"mutable","name":"result","nameLocation":"11031:6:15","nodeType":"VariableDeclaration","scope":13166,"src":"11026:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13163,"name":"bool","nodeType":"ElementaryTypeName","src":"11026:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11025:13:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13174,"nodeType":"FunctionDefinition","src":"11187:75:15","nodes":[],"documentation":{"id":13167,"nodeType":"StructuredDocumentation","src":"11045:137:15","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"892a0c61","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"11196:6:15","parameters":{"id":13170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13169,"mutability":"mutable","name":"name","nameLocation":"11219:4:15","nodeType":"VariableDeclaration","scope":13174,"src":"11203:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13168,"name":"string","nodeType":"ElementaryTypeName","src":"11203:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11202:22:15"},"returnParameters":{"id":13173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13172,"mutability":"mutable","name":"value","nameLocation":"11255:5:15","nodeType":"VariableDeclaration","scope":13174,"src":"11248:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13171,"name":"int256","nodeType":"ElementaryTypeName","src":"11248:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"11247:14:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13185,"nodeType":"FunctionDefinition","src":"11444:107:15","nodes":[],"documentation":{"id":13175,"nodeType":"StructuredDocumentation","src":"11268:171:15","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"42181150","implemented":false,"kind":"function","modifiers":[],"name":"envInt","nameLocation":"11453:6:15","parameters":{"id":13180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13177,"mutability":"mutable","name":"name","nameLocation":"11476:4:15","nodeType":"VariableDeclaration","scope":13185,"src":"11460:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13176,"name":"string","nodeType":"ElementaryTypeName","src":"11460:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13179,"mutability":"mutable","name":"delim","nameLocation":"11498:5:15","nodeType":"VariableDeclaration","scope":13185,"src":"11482:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13178,"name":"string","nodeType":"ElementaryTypeName","src":"11482:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11459:45:15"},"returnParameters":{"id":13184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13183,"mutability":"mutable","name":"value","nameLocation":"11544:5:15","nodeType":"VariableDeclaration","scope":13185,"src":"11528:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13181,"name":"int256","nodeType":"ElementaryTypeName","src":"11528:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13182,"nodeType":"ArrayTypeName","src":"11528:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"11527:23:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13195,"nodeType":"FunctionDefinition","src":"11742:91:15","nodes":[],"documentation":{"id":13186,"nodeType":"StructuredDocumentation","src":"11557:180:15","text":"Gets the environment variable `name` and parses it as `bool`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4777f3cf","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"11751:5:15","parameters":{"id":13191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13188,"mutability":"mutable","name":"name","nameLocation":"11773:4:15","nodeType":"VariableDeclaration","scope":13195,"src":"11757:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13187,"name":"string","nodeType":"ElementaryTypeName","src":"11757:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13190,"mutability":"mutable","name":"defaultValue","nameLocation":"11784:12:15","nodeType":"VariableDeclaration","scope":13195,"src":"11779:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13189,"name":"bool","nodeType":"ElementaryTypeName","src":"11779:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11756:41:15"},"returnParameters":{"id":13194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13193,"mutability":"mutable","name":"value","nameLocation":"11826:5:15","nodeType":"VariableDeclaration","scope":13195,"src":"11821:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13192,"name":"bool","nodeType":"ElementaryTypeName","src":"11821:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11820:12:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13205,"nodeType":"FunctionDefinition","src":"12027:97:15","nodes":[],"documentation":{"id":13196,"nodeType":"StructuredDocumentation","src":"11839:183:15","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"5e97348f","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"12036:5:15","parameters":{"id":13201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13198,"mutability":"mutable","name":"name","nameLocation":"12058:4:15","nodeType":"VariableDeclaration","scope":13205,"src":"12042:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13197,"name":"string","nodeType":"ElementaryTypeName","src":"12042:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13200,"mutability":"mutable","name":"defaultValue","nameLocation":"12072:12:15","nodeType":"VariableDeclaration","scope":13205,"src":"12064:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13199,"name":"uint256","nodeType":"ElementaryTypeName","src":"12064:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12041:44:15"},"returnParameters":{"id":13204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13203,"mutability":"mutable","name":"value","nameLocation":"12117:5:15","nodeType":"VariableDeclaration","scope":13205,"src":"12109:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13202,"name":"uint256","nodeType":"ElementaryTypeName","src":"12109:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12108:15:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13219,"nodeType":"FunctionDefinition","src":"12352:164:15","nodes":[],"documentation":{"id":13206,"nodeType":"StructuredDocumentation","src":"12130:217:15","text":"Gets the environment variable `name` and parses it as an array of `address`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"c74e9deb","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"12361:5:15","parameters":{"id":13214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13208,"mutability":"mutable","name":"name","nameLocation":"12383:4:15","nodeType":"VariableDeclaration","scope":13219,"src":"12367:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13207,"name":"string","nodeType":"ElementaryTypeName","src":"12367:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13210,"mutability":"mutable","name":"delim","nameLocation":"12405:5:15","nodeType":"VariableDeclaration","scope":13219,"src":"12389:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13209,"name":"string","nodeType":"ElementaryTypeName","src":"12389:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13213,"mutability":"mutable","name":"defaultValue","nameLocation":"12431:12:15","nodeType":"VariableDeclaration","scope":13219,"src":"12412:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13211,"name":"address","nodeType":"ElementaryTypeName","src":"12412:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13212,"nodeType":"ArrayTypeName","src":"12412:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"12366:78:15"},"returnParameters":{"id":13218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13217,"mutability":"mutable","name":"value","nameLocation":"12509:5:15","nodeType":"VariableDeclaration","scope":13219,"src":"12492:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13215,"name":"address","nodeType":"ElementaryTypeName","src":"12492:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13216,"nodeType":"ArrayTypeName","src":"12492:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"12491:24:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13233,"nodeType":"FunctionDefinition","src":"12744:164:15","nodes":[],"documentation":{"id":13220,"nodeType":"StructuredDocumentation","src":"12522:217:15","text":"Gets the environment variable `name` and parses it as an array of `bytes32`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"2281f367","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"12753:5:15","parameters":{"id":13228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13222,"mutability":"mutable","name":"name","nameLocation":"12775:4:15","nodeType":"VariableDeclaration","scope":13233,"src":"12759:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13221,"name":"string","nodeType":"ElementaryTypeName","src":"12759:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13224,"mutability":"mutable","name":"delim","nameLocation":"12797:5:15","nodeType":"VariableDeclaration","scope":13233,"src":"12781:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13223,"name":"string","nodeType":"ElementaryTypeName","src":"12781:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13227,"mutability":"mutable","name":"defaultValue","nameLocation":"12823:12:15","nodeType":"VariableDeclaration","scope":13233,"src":"12804:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12804:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13226,"nodeType":"ArrayTypeName","src":"12804:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"12758:78:15"},"returnParameters":{"id":13232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13231,"mutability":"mutable","name":"value","nameLocation":"12901:5:15","nodeType":"VariableDeclaration","scope":13233,"src":"12884:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13229,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12884:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13230,"nodeType":"ArrayTypeName","src":"12884:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"12883:24:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13247,"nodeType":"FunctionDefinition","src":"13135:162:15","nodes":[],"documentation":{"id":13234,"nodeType":"StructuredDocumentation","src":"12914:216:15","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"859216bc","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"13144:5:15","parameters":{"id":13242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13236,"mutability":"mutable","name":"name","nameLocation":"13166:4:15","nodeType":"VariableDeclaration","scope":13247,"src":"13150:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13235,"name":"string","nodeType":"ElementaryTypeName","src":"13150:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13238,"mutability":"mutable","name":"delim","nameLocation":"13188:5:15","nodeType":"VariableDeclaration","scope":13247,"src":"13172:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13237,"name":"string","nodeType":"ElementaryTypeName","src":"13172:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13241,"mutability":"mutable","name":"defaultValue","nameLocation":"13213:12:15","nodeType":"VariableDeclaration","scope":13247,"src":"13195:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13239,"name":"string","nodeType":"ElementaryTypeName","src":"13195:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13240,"nodeType":"ArrayTypeName","src":"13195:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"13149:77:15"},"returnParameters":{"id":13246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13245,"mutability":"mutable","name":"value","nameLocation":"13290:5:15","nodeType":"VariableDeclaration","scope":13247,"src":"13274:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13243,"name":"string","nodeType":"ElementaryTypeName","src":"13274:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13244,"nodeType":"ArrayTypeName","src":"13274:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"13273:23:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13261,"nodeType":"FunctionDefinition","src":"13523:160:15","nodes":[],"documentation":{"id":13248,"nodeType":"StructuredDocumentation","src":"13303:215:15","text":"Gets the environment variable `name` and parses it as an array of `bytes`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"64bc3e64","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"13532:5:15","parameters":{"id":13256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13250,"mutability":"mutable","name":"name","nameLocation":"13554:4:15","nodeType":"VariableDeclaration","scope":13261,"src":"13538:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13249,"name":"string","nodeType":"ElementaryTypeName","src":"13538:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13252,"mutability":"mutable","name":"delim","nameLocation":"13576:5:15","nodeType":"VariableDeclaration","scope":13261,"src":"13560:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13251,"name":"string","nodeType":"ElementaryTypeName","src":"13560:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13255,"mutability":"mutable","name":"defaultValue","nameLocation":"13600:12:15","nodeType":"VariableDeclaration","scope":13261,"src":"13583:29:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13253,"name":"bytes","nodeType":"ElementaryTypeName","src":"13583:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13254,"nodeType":"ArrayTypeName","src":"13583:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"13537:76:15"},"returnParameters":{"id":13260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13259,"mutability":"mutable","name":"value","nameLocation":"13676:5:15","nodeType":"VariableDeclaration","scope":13261,"src":"13661:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":13257,"name":"bytes","nodeType":"ElementaryTypeName","src":"13661:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":13258,"nodeType":"ArrayTypeName","src":"13661:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"13660:22:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13271,"nodeType":"FunctionDefinition","src":"13876:95:15","nodes":[],"documentation":{"id":13262,"nodeType":"StructuredDocumentation","src":"13689:182:15","text":"Gets the environment variable `name` and parses it as `int256`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"bbcb713e","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"13885:5:15","parameters":{"id":13267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13264,"mutability":"mutable","name":"name","nameLocation":"13907:4:15","nodeType":"VariableDeclaration","scope":13271,"src":"13891:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13263,"name":"string","nodeType":"ElementaryTypeName","src":"13891:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13266,"mutability":"mutable","name":"defaultValue","nameLocation":"13920:12:15","nodeType":"VariableDeclaration","scope":13271,"src":"13913:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13265,"name":"int256","nodeType":"ElementaryTypeName","src":"13913:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"13890:43:15"},"returnParameters":{"id":13270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13269,"mutability":"mutable","name":"value","nameLocation":"13964:5:15","nodeType":"VariableDeclaration","scope":13271,"src":"13957:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":13268,"name":"int256","nodeType":"ElementaryTypeName","src":"13957:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"13956:14:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13281,"nodeType":"FunctionDefinition","src":"14165:97:15","nodes":[],"documentation":{"id":13272,"nodeType":"StructuredDocumentation","src":"13977:183:15","text":"Gets the environment variable `name` and parses it as `address`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"561fe540","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"14174:5:15","parameters":{"id":13277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13274,"mutability":"mutable","name":"name","nameLocation":"14196:4:15","nodeType":"VariableDeclaration","scope":13281,"src":"14180:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13273,"name":"string","nodeType":"ElementaryTypeName","src":"14180:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13276,"mutability":"mutable","name":"defaultValue","nameLocation":"14210:12:15","nodeType":"VariableDeclaration","scope":13281,"src":"14202:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13275,"name":"address","nodeType":"ElementaryTypeName","src":"14202:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14179:44:15"},"returnParameters":{"id":13280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13279,"mutability":"mutable","name":"value","nameLocation":"14255:5:15","nodeType":"VariableDeclaration","scope":13281,"src":"14247:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13278,"name":"address","nodeType":"ElementaryTypeName","src":"14247:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14246:15:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13291,"nodeType":"FunctionDefinition","src":"14456:97:15","nodes":[],"documentation":{"id":13282,"nodeType":"StructuredDocumentation","src":"14268:183:15","text":"Gets the environment variable `name` and parses it as `bytes32`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b4a85892","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"14465:5:15","parameters":{"id":13287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13284,"mutability":"mutable","name":"name","nameLocation":"14487:4:15","nodeType":"VariableDeclaration","scope":13291,"src":"14471:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13283,"name":"string","nodeType":"ElementaryTypeName","src":"14471:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13286,"mutability":"mutable","name":"defaultValue","nameLocation":"14501:12:15","nodeType":"VariableDeclaration","scope":13291,"src":"14493:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14493:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14470:44:15"},"returnParameters":{"id":13290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13289,"mutability":"mutable","name":"value","nameLocation":"14546:5:15","nodeType":"VariableDeclaration","scope":13291,"src":"14538:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13288,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14538:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"14537:15:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13301,"nodeType":"FunctionDefinition","src":"14746:111:15","nodes":[],"documentation":{"id":13292,"nodeType":"StructuredDocumentation","src":"14559:182:15","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"d145736c","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"14755:5:15","parameters":{"id":13297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13294,"mutability":"mutable","name":"name","nameLocation":"14777:4:15","nodeType":"VariableDeclaration","scope":13301,"src":"14761:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13293,"name":"string","nodeType":"ElementaryTypeName","src":"14761:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13296,"mutability":"mutable","name":"defaultValue","nameLocation":"14799:12:15","nodeType":"VariableDeclaration","scope":13301,"src":"14783:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13295,"name":"string","nodeType":"ElementaryTypeName","src":"14783:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14760:52:15"},"returnParameters":{"id":13300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13299,"mutability":"mutable","name":"value","nameLocation":"14850:5:15","nodeType":"VariableDeclaration","scope":13301,"src":"14836:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13298,"name":"string","nodeType":"ElementaryTypeName","src":"14836:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14835:21:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13311,"nodeType":"FunctionDefinition","src":"15049:109:15","nodes":[],"documentation":{"id":13302,"nodeType":"StructuredDocumentation","src":"14863:181:15","text":"Gets the environment variable `name` and parses it as `bytes`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"b3e47705","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"15058:5:15","parameters":{"id":13307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13304,"mutability":"mutable","name":"name","nameLocation":"15080:4:15","nodeType":"VariableDeclaration","scope":13311,"src":"15064:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13303,"name":"string","nodeType":"ElementaryTypeName","src":"15064:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13306,"mutability":"mutable","name":"defaultValue","nameLocation":"15101:12:15","nodeType":"VariableDeclaration","scope":13311,"src":"15086:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13305,"name":"bytes","nodeType":"ElementaryTypeName","src":"15086:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15063:51:15"},"returnParameters":{"id":13310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13309,"mutability":"mutable","name":"value","nameLocation":"15151:5:15","nodeType":"VariableDeclaration","scope":13311,"src":"15138:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13308,"name":"bytes","nodeType":"ElementaryTypeName","src":"15138:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15137:20:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13325,"nodeType":"FunctionDefinition","src":"15383:158:15","nodes":[],"documentation":{"id":13312,"nodeType":"StructuredDocumentation","src":"15164:214:15","text":"Gets the environment variable `name` and parses it as an array of `bool`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"eb85e83b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"15392:5:15","parameters":{"id":13320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13314,"mutability":"mutable","name":"name","nameLocation":"15414:4:15","nodeType":"VariableDeclaration","scope":13325,"src":"15398:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13313,"name":"string","nodeType":"ElementaryTypeName","src":"15398:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13316,"mutability":"mutable","name":"delim","nameLocation":"15436:5:15","nodeType":"VariableDeclaration","scope":13325,"src":"15420:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13315,"name":"string","nodeType":"ElementaryTypeName","src":"15420:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13319,"mutability":"mutable","name":"defaultValue","nameLocation":"15459:12:15","nodeType":"VariableDeclaration","scope":13325,"src":"15443:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13317,"name":"bool","nodeType":"ElementaryTypeName","src":"15443:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13318,"nodeType":"ArrayTypeName","src":"15443:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"15397:75:15"},"returnParameters":{"id":13324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13323,"mutability":"mutable","name":"value","nameLocation":"15534:5:15","nodeType":"VariableDeclaration","scope":13325,"src":"15520:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13321,"name":"bool","nodeType":"ElementaryTypeName","src":"15520:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13322,"nodeType":"ArrayTypeName","src":"15520:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"15519:21:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13339,"nodeType":"FunctionDefinition","src":"15769:164:15","nodes":[],"documentation":{"id":13326,"nodeType":"StructuredDocumentation","src":"15547:217:15","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"74318528","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"15778:5:15","parameters":{"id":13334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13328,"mutability":"mutable","name":"name","nameLocation":"15800:4:15","nodeType":"VariableDeclaration","scope":13339,"src":"15784:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13327,"name":"string","nodeType":"ElementaryTypeName","src":"15784:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13330,"mutability":"mutable","name":"delim","nameLocation":"15822:5:15","nodeType":"VariableDeclaration","scope":13339,"src":"15806:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13329,"name":"string","nodeType":"ElementaryTypeName","src":"15806:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13333,"mutability":"mutable","name":"defaultValue","nameLocation":"15848:12:15","nodeType":"VariableDeclaration","scope":13339,"src":"15829:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13331,"name":"uint256","nodeType":"ElementaryTypeName","src":"15829:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13332,"nodeType":"ArrayTypeName","src":"15829:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"15783:78:15"},"returnParameters":{"id":13338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13337,"mutability":"mutable","name":"value","nameLocation":"15926:5:15","nodeType":"VariableDeclaration","scope":13339,"src":"15909:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13335,"name":"uint256","nodeType":"ElementaryTypeName","src":"15909:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13336,"nodeType":"ArrayTypeName","src":"15909:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"15908:24:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13353,"nodeType":"FunctionDefinition","src":"16160:162:15","nodes":[],"documentation":{"id":13340,"nodeType":"StructuredDocumentation","src":"15939:216:15","text":"Gets the environment variable `name` and parses it as an array of `int256`, delimited by `delim`.\n Reverts if the variable could not be parsed.\n Returns `defaultValue` if the variable was not found."},"functionSelector":"4700d74b","implemented":false,"kind":"function","modifiers":[],"name":"envOr","nameLocation":"16169:5:15","parameters":{"id":13348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13342,"mutability":"mutable","name":"name","nameLocation":"16191:4:15","nodeType":"VariableDeclaration","scope":13353,"src":"16175:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13341,"name":"string","nodeType":"ElementaryTypeName","src":"16175:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13344,"mutability":"mutable","name":"delim","nameLocation":"16213:5:15","nodeType":"VariableDeclaration","scope":13353,"src":"16197:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13343,"name":"string","nodeType":"ElementaryTypeName","src":"16197:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13347,"mutability":"mutable","name":"defaultValue","nameLocation":"16238:12:15","nodeType":"VariableDeclaration","scope":13353,"src":"16220:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13345,"name":"int256","nodeType":"ElementaryTypeName","src":"16220:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13346,"nodeType":"ArrayTypeName","src":"16220:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"16174:77:15"},"returnParameters":{"id":13352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13351,"mutability":"mutable","name":"value","nameLocation":"16315:5:15","nodeType":"VariableDeclaration","scope":13353,"src":"16299:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":13349,"name":"int256","nodeType":"ElementaryTypeName","src":"16299:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":13350,"nodeType":"ArrayTypeName","src":"16299:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"16298:23:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13361,"nodeType":"FunctionDefinition","src":"16470:85:15","nodes":[],"documentation":{"id":13354,"nodeType":"StructuredDocumentation","src":"16328:137:15","text":"Gets the environment variable `name` and parses it as `string`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f877cb19","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"16479:9:15","parameters":{"id":13357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13356,"mutability":"mutable","name":"name","nameLocation":"16505:4:15","nodeType":"VariableDeclaration","scope":13361,"src":"16489:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13355,"name":"string","nodeType":"ElementaryTypeName","src":"16489:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16488:22:15"},"returnParameters":{"id":13360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13359,"mutability":"mutable","name":"value","nameLocation":"16548:5:15","nodeType":"VariableDeclaration","scope":13361,"src":"16534:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13358,"name":"string","nodeType":"ElementaryTypeName","src":"16534:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16533:21:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13372,"nodeType":"FunctionDefinition","src":"16737:110:15","nodes":[],"documentation":{"id":13362,"nodeType":"StructuredDocumentation","src":"16561:171:15","text":"Gets the environment variable `name` and parses it as an array of `string`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"14b02bc9","implemented":false,"kind":"function","modifiers":[],"name":"envString","nameLocation":"16746:9:15","parameters":{"id":13367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13364,"mutability":"mutable","name":"name","nameLocation":"16772:4:15","nodeType":"VariableDeclaration","scope":13372,"src":"16756:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13363,"name":"string","nodeType":"ElementaryTypeName","src":"16756:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13366,"mutability":"mutable","name":"delim","nameLocation":"16794:5:15","nodeType":"VariableDeclaration","scope":13372,"src":"16778:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13365,"name":"string","nodeType":"ElementaryTypeName","src":"16778:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16755:45:15"},"returnParameters":{"id":13371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13370,"mutability":"mutable","name":"value","nameLocation":"16840:5:15","nodeType":"VariableDeclaration","scope":13372,"src":"16824:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13368,"name":"string","nodeType":"ElementaryTypeName","src":"16824:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13369,"nodeType":"ArrayTypeName","src":"16824:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"16823:23:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13380,"nodeType":"FunctionDefinition","src":"16996:77:15","nodes":[],"documentation":{"id":13373,"nodeType":"StructuredDocumentation","src":"16853:138:15","text":"Gets the environment variable `name` and parses it as `uint256`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"c1978d1f","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"17005:7:15","parameters":{"id":13376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13375,"mutability":"mutable","name":"name","nameLocation":"17029:4:15","nodeType":"VariableDeclaration","scope":13380,"src":"17013:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13374,"name":"string","nodeType":"ElementaryTypeName","src":"17013:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17012:22:15"},"returnParameters":{"id":13379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13378,"mutability":"mutable","name":"value","nameLocation":"17066:5:15","nodeType":"VariableDeclaration","scope":13380,"src":"17058:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13377,"name":"uint256","nodeType":"ElementaryTypeName","src":"17058:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17057:15:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13391,"nodeType":"FunctionDefinition","src":"17256:109:15","nodes":[],"documentation":{"id":13381,"nodeType":"StructuredDocumentation","src":"17079:172:15","text":"Gets the environment variable `name` and parses it as an array of `uint256`, delimited by `delim`.\n Reverts if the variable was not found or could not be parsed."},"functionSelector":"f3dec099","implemented":false,"kind":"function","modifiers":[],"name":"envUint","nameLocation":"17265:7:15","parameters":{"id":13386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13383,"mutability":"mutable","name":"name","nameLocation":"17289:4:15","nodeType":"VariableDeclaration","scope":13391,"src":"17273:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13382,"name":"string","nodeType":"ElementaryTypeName","src":"17273:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13385,"mutability":"mutable","name":"delim","nameLocation":"17311:5:15","nodeType":"VariableDeclaration","scope":13391,"src":"17295:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13384,"name":"string","nodeType":"ElementaryTypeName","src":"17295:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17272:45:15"},"returnParameters":{"id":13390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13389,"mutability":"mutable","name":"value","nameLocation":"17358:5:15","nodeType":"VariableDeclaration","scope":13391,"src":"17341:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":13387,"name":"uint256","nodeType":"ElementaryTypeName","src":"17341:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":13388,"nodeType":"ArrayTypeName","src":"17341:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"17340:24:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13400,"nodeType":"FunctionDefinition","src":"17442:77:15","nodes":[],"documentation":{"id":13392,"nodeType":"StructuredDocumentation","src":"17371:66:15","text":"Returns true if `forge` command was executed in given context."},"functionSelector":"64af255d","implemented":false,"kind":"function","modifiers":[],"name":"isContext","nameLocation":"17451:9:15","parameters":{"id":13396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13395,"mutability":"mutable","name":"context","nameLocation":"17474:7:15","nodeType":"VariableDeclaration","scope":13400,"src":"17461:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$12936","typeString":"enum VmSafe.ForgeContext"},"typeName":{"id":13394,"nodeType":"UserDefinedTypeName","pathNode":{"id":13393,"name":"ForgeContext","nameLocations":["17461:12:15"],"nodeType":"IdentifierPath","referencedDeclaration":12936,"src":"17461:12:15"},"referencedDeclaration":12936,"src":"17461:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_ForgeContext_$12936","typeString":"enum VmSafe.ForgeContext"}},"visibility":"internal"}],"src":"17460:22:15"},"returnParameters":{"id":13399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13398,"mutability":"mutable","name":"result","nameLocation":"17511:6:15","nodeType":"VariableDeclaration","scope":13400,"src":"17506:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13397,"name":"bool","nodeType":"ElementaryTypeName","src":"17506:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17505:13:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13408,"nodeType":"FunctionDefinition","src":"17561:70:15","nodes":[],"documentation":{"id":13401,"nodeType":"StructuredDocumentation","src":"17525:31:15","text":"Sets environment variables."},"functionSelector":"3d5923ee","implemented":false,"kind":"function","modifiers":[],"name":"setEnv","nameLocation":"17570:6:15","parameters":{"id":13406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13403,"mutability":"mutable","name":"name","nameLocation":"17593:4:15","nodeType":"VariableDeclaration","scope":13408,"src":"17577:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13402,"name":"string","nodeType":"ElementaryTypeName","src":"17577:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13405,"mutability":"mutable","name":"value","nameLocation":"17615:5:15","nodeType":"VariableDeclaration","scope":13408,"src":"17599:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13404,"name":"string","nodeType":"ElementaryTypeName","src":"17599:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17576:45:15"},"returnParameters":{"id":13407,"nodeType":"ParameterList","parameters":[],"src":"17630:0:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13420,"nodeType":"FunctionDefinition","src":"17763:109:15","nodes":[],"documentation":{"id":13409,"nodeType":"StructuredDocumentation","src":"17667:91:15","text":"Gets all accessed reads and write slot from a `vm.record` session, for a given address."},"functionSelector":"65bc9481","implemented":false,"kind":"function","modifiers":[],"name":"accesses","nameLocation":"17772:8:15","parameters":{"id":13412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13411,"mutability":"mutable","name":"target","nameLocation":"17789:6:15","nodeType":"VariableDeclaration","scope":13420,"src":"17781:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13410,"name":"address","nodeType":"ElementaryTypeName","src":"17781:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17780:16:15"},"returnParameters":{"id":13419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13415,"mutability":"mutable","name":"readSlots","nameLocation":"17832:9:15","nodeType":"VariableDeclaration","scope":13420,"src":"17815:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13413,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17815:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13414,"nodeType":"ArrayTypeName","src":"17815:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":13418,"mutability":"mutable","name":"writeSlots","nameLocation":"17860:10:15","nodeType":"VariableDeclaration","scope":13420,"src":"17843:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13416,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17843:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13417,"nodeType":"ArrayTypeName","src":"17843:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"17814:57:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13428,"nodeType":"FunctionDefinition","src":"17928:74:15","nodes":[],"documentation":{"id":13421,"nodeType":"StructuredDocumentation","src":"17878:45:15","text":"Gets the address for a given private key."},"functionSelector":"ffa18649","implemented":false,"kind":"function","modifiers":[],"name":"addr","nameLocation":"17937:4:15","parameters":{"id":13424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13423,"mutability":"mutable","name":"privateKey","nameLocation":"17950:10:15","nodeType":"VariableDeclaration","scope":13428,"src":"17942:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13422,"name":"uint256","nodeType":"ElementaryTypeName","src":"17942:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17941:20:15"},"returnParameters":{"id":13427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13426,"mutability":"mutable","name":"keyAddr","nameLocation":"17993:7:15","nodeType":"VariableDeclaration","scope":13428,"src":"17985:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13425,"name":"address","nodeType":"ElementaryTypeName","src":"17985:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17984:17:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13445,"nodeType":"FunctionDefinition","src":"18065:160:15","nodes":[],"documentation":{"id":13429,"nodeType":"StructuredDocumentation","src":"18008:52:15","text":"Gets all the logs according to specified filter."},"functionSelector":"35e1349b","implemented":false,"kind":"function","modifiers":[],"name":"eth_getLogs","nameLocation":"18074:11:15","parameters":{"id":13439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13431,"mutability":"mutable","name":"fromBlock","nameLocation":"18094:9:15","nodeType":"VariableDeclaration","scope":13445,"src":"18086:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13430,"name":"uint256","nodeType":"ElementaryTypeName","src":"18086:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13433,"mutability":"mutable","name":"toBlock","nameLocation":"18113:7:15","nodeType":"VariableDeclaration","scope":13445,"src":"18105:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13432,"name":"uint256","nodeType":"ElementaryTypeName","src":"18105:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13435,"mutability":"mutable","name":"target","nameLocation":"18130:6:15","nodeType":"VariableDeclaration","scope":13445,"src":"18122:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13434,"name":"address","nodeType":"ElementaryTypeName","src":"18122:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13438,"mutability":"mutable","name":"topics","nameLocation":"18157:6:15","nodeType":"VariableDeclaration","scope":13445,"src":"18138:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13436,"name":"bytes32","nodeType":"ElementaryTypeName","src":"18138:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":13437,"nodeType":"ArrayTypeName","src":"18138:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"18085:79:15"},"returnParameters":{"id":13444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13443,"mutability":"mutable","name":"logs","nameLocation":"18219:4:15","nodeType":"VariableDeclaration","scope":13445,"src":"18199:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$12972_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.EthGetLogs[]"},"typeName":{"baseType":{"id":13441,"nodeType":"UserDefinedTypeName","pathNode":{"id":13440,"name":"EthGetLogs","nameLocations":["18199:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":12972,"src":"18199:10:15"},"referencedDeclaration":12972,"src":"18199:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_EthGetLogs_$12972_storage_ptr","typeString":"struct VmSafe.EthGetLogs"}},"id":13442,"nodeType":"ArrayTypeName","src":"18199:12:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_EthGetLogs_$12972_storage_$dyn_storage_ptr","typeString":"struct VmSafe.EthGetLogs[]"}},"visibility":"internal"}],"src":"18198:26:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13451,"nodeType":"FunctionDefinition","src":"18562:70:15","nodes":[],"documentation":{"id":13446,"nodeType":"StructuredDocumentation","src":"18231:326:15","text":"Gets the current `block.blobbasefee`.\n You should use this instead of `block.blobbasefee` if you use `vm.blobBaseFee`, as `block.blobbasefee` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"1f6d6ef7","implemented":false,"kind":"function","modifiers":[],"name":"getBlobBaseFee","nameLocation":"18571:14:15","parameters":{"id":13447,"nodeType":"ParameterList","parameters":[],"src":"18585:2:15"},"returnParameters":{"id":13450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13449,"mutability":"mutable","name":"blobBaseFee","nameLocation":"18619:11:15","nodeType":"VariableDeclaration","scope":13451,"src":"18611:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13448,"name":"uint256","nodeType":"ElementaryTypeName","src":"18611:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18610:21:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13457,"nodeType":"FunctionDefinition","src":"18947:65:15","nodes":[],"documentation":{"id":13452,"nodeType":"StructuredDocumentation","src":"18638:304:15","text":"Gets the current `block.number`.\n You should use this instead of `block.number` if you use `vm.roll`, as `block.number` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"42cbb15c","implemented":false,"kind":"function","modifiers":[],"name":"getBlockNumber","nameLocation":"18956:14:15","parameters":{"id":13453,"nodeType":"ParameterList","parameters":[],"src":"18970:2:15"},"returnParameters":{"id":13456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13455,"mutability":"mutable","name":"height","nameLocation":"19004:6:15","nodeType":"VariableDeclaration","scope":13457,"src":"18996:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13454,"name":"uint256","nodeType":"ElementaryTypeName","src":"18996:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18995:16:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13463,"nodeType":"FunctionDefinition","src":"19336:71:15","nodes":[],"documentation":{"id":13458,"nodeType":"StructuredDocumentation","src":"19018:313:15","text":"Gets the current `block.timestamp`.\n You should use this instead of `block.timestamp` if you use `vm.warp`, as `block.timestamp` is assumed to be constant across a transaction,\n and as a result will get optimized out by the compiler.\n See https://github.com/foundry-rs/foundry/issues/6180"},"functionSelector":"796b89b9","implemented":false,"kind":"function","modifiers":[],"name":"getBlockTimestamp","nameLocation":"19345:17:15","parameters":{"id":13459,"nodeType":"ParameterList","parameters":[],"src":"19362:2:15"},"returnParameters":{"id":13462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13461,"mutability":"mutable","name":"timestamp","nameLocation":"19396:9:15","nodeType":"VariableDeclaration","scope":13463,"src":"19388:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13460,"name":"uint256","nodeType":"ElementaryTypeName","src":"19388:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19387:19:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13477,"nodeType":"FunctionDefinition","src":"19500:146:15","nodes":[],"documentation":{"id":13464,"nodeType":"StructuredDocumentation","src":"19413:82:15","text":"Gets the map key and parent of a mapping at a given slot, for a given address."},"functionSelector":"876e24e6","implemented":false,"kind":"function","modifiers":[],"name":"getMappingKeyAndParentOf","nameLocation":"19509:24:15","parameters":{"id":13469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13466,"mutability":"mutable","name":"target","nameLocation":"19542:6:15","nodeType":"VariableDeclaration","scope":13477,"src":"19534:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13465,"name":"address","nodeType":"ElementaryTypeName","src":"19534:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13468,"mutability":"mutable","name":"elementSlot","nameLocation":"19558:11:15","nodeType":"VariableDeclaration","scope":13477,"src":"19550:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13467,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19550:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19533:37:15"},"returnParameters":{"id":13476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13471,"mutability":"mutable","name":"found","nameLocation":"19610:5:15","nodeType":"VariableDeclaration","scope":13477,"src":"19605:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13470,"name":"bool","nodeType":"ElementaryTypeName","src":"19605:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":13473,"mutability":"mutable","name":"key","nameLocation":"19625:3:15","nodeType":"VariableDeclaration","scope":13477,"src":"19617:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19617:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13475,"mutability":"mutable","name":"parent","nameLocation":"19638:6:15","nodeType":"VariableDeclaration","scope":13477,"src":"19630:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13474,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19630:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19604:41:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13487,"nodeType":"FunctionDefinition","src":"19743:97:15","nodes":[],"documentation":{"id":13478,"nodeType":"StructuredDocumentation","src":"19652:86:15","text":"Gets the number of elements in the mapping at the given slot, for a given address."},"functionSelector":"2f2fd63f","implemented":false,"kind":"function","modifiers":[],"name":"getMappingLength","nameLocation":"19752:16:15","parameters":{"id":13483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13480,"mutability":"mutable","name":"target","nameLocation":"19777:6:15","nodeType":"VariableDeclaration","scope":13487,"src":"19769:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13479,"name":"address","nodeType":"ElementaryTypeName","src":"19769:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13482,"mutability":"mutable","name":"mappingSlot","nameLocation":"19793:11:15","nodeType":"VariableDeclaration","scope":13487,"src":"19785:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13481,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19785:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19768:37:15"},"returnParameters":{"id":13486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13485,"mutability":"mutable","name":"length","nameLocation":"19832:6:15","nodeType":"VariableDeclaration","scope":13487,"src":"19824:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13484,"name":"uint256","nodeType":"ElementaryTypeName","src":"19824:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19823:16:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13499,"nodeType":"FunctionDefinition","src":"20044:109:15","nodes":[],"documentation":{"id":13488,"nodeType":"StructuredDocumentation","src":"19846:193:15","text":"Gets the elements at index idx of the mapping at the given slot, for a given address. The\n index must be less than the length of the mapping (i.e. the number of keys in the mapping)."},"functionSelector":"ebc73ab4","implemented":false,"kind":"function","modifiers":[],"name":"getMappingSlotAt","nameLocation":"20053:16:15","parameters":{"id":13495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13490,"mutability":"mutable","name":"target","nameLocation":"20078:6:15","nodeType":"VariableDeclaration","scope":13499,"src":"20070:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13489,"name":"address","nodeType":"ElementaryTypeName","src":"20070:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13492,"mutability":"mutable","name":"mappingSlot","nameLocation":"20094:11:15","nodeType":"VariableDeclaration","scope":13499,"src":"20086:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13491,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20086:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13494,"mutability":"mutable","name":"idx","nameLocation":"20115:3:15","nodeType":"VariableDeclaration","scope":13499,"src":"20107:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13493,"name":"uint256","nodeType":"ElementaryTypeName","src":"20107:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20069:50:15"},"returnParameters":{"id":13498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13497,"mutability":"mutable","name":"value","nameLocation":"20146:5:15","nodeType":"VariableDeclaration","scope":13499,"src":"20138:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13496,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20138:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20137:15:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13507,"nodeType":"FunctionDefinition","src":"20197:72:15","nodes":[],"documentation":{"id":13500,"nodeType":"StructuredDocumentation","src":"20159:33:15","text":"Gets the nonce of an account."},"functionSelector":"2d0335ab","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"20206:8:15","parameters":{"id":13503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13502,"mutability":"mutable","name":"account","nameLocation":"20223:7:15","nodeType":"VariableDeclaration","scope":13507,"src":"20215:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13501,"name":"address","nodeType":"ElementaryTypeName","src":"20215:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20214:17:15"},"returnParameters":{"id":13506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13505,"mutability":"mutable","name":"nonce","nameLocation":"20262:5:15","nodeType":"VariableDeclaration","scope":13507,"src":"20255:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13504,"name":"uint64","nodeType":"ElementaryTypeName","src":"20255:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"20254:14:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13515,"nodeType":"FunctionDefinition","src":"20311:64:15","nodes":[],"documentation":{"id":13508,"nodeType":"StructuredDocumentation","src":"20275:31:15","text":"Gets all the recorded logs."},"functionSelector":"191553a4","implemented":false,"kind":"function","modifiers":[],"name":"getRecordedLogs","nameLocation":"20320:15:15","parameters":{"id":13509,"nodeType":"ParameterList","parameters":[],"src":"20335:2:15"},"returnParameters":{"id":13514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13513,"mutability":"mutable","name":"logs","nameLocation":"20369:4:15","nodeType":"VariableDeclaration","scope":13515,"src":"20356:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$12945_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Log[]"},"typeName":{"baseType":{"id":13511,"nodeType":"UserDefinedTypeName","pathNode":{"id":13510,"name":"Log","nameLocations":["20356:3:15"],"nodeType":"IdentifierPath","referencedDeclaration":12945,"src":"20356:3:15"},"referencedDeclaration":12945,"src":"20356:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Log_$12945_storage_ptr","typeString":"struct VmSafe.Log"}},"id":13512,"nodeType":"ArrayTypeName","src":"20356:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Log_$12945_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Log[]"}},"visibility":"internal"}],"src":"20355:19:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13522,"nodeType":"FunctionDefinition","src":"20425:62:15","nodes":[],"documentation":{"id":13516,"nodeType":"StructuredDocumentation","src":"20381:39:15","text":"Gets the gas used in the last call."},"functionSelector":"2b589b28","implemented":false,"kind":"function","modifiers":[],"name":"lastCallGas","nameLocation":"20434:11:15","parameters":{"id":13517,"nodeType":"ParameterList","parameters":[],"src":"20445:2:15"},"returnParameters":{"id":13521,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13520,"mutability":"mutable","name":"gas","nameLocation":"20482:3:15","nodeType":"VariableDeclaration","scope":13522,"src":"20471:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$13082_memory_ptr","typeString":"struct VmSafe.Gas"},"typeName":{"id":13519,"nodeType":"UserDefinedTypeName","pathNode":{"id":13518,"name":"Gas","nameLocations":["20471:3:15"],"nodeType":"IdentifierPath","referencedDeclaration":13082,"src":"20471:3:15"},"referencedDeclaration":13082,"src":"20471:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Gas_$13082_storage_ptr","typeString":"struct VmSafe.Gas"}},"visibility":"internal"}],"src":"20470:16:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13532,"nodeType":"FunctionDefinition","src":"20539:81:15","nodes":[],"documentation":{"id":13523,"nodeType":"StructuredDocumentation","src":"20493:41:15","text":"Loads a storage slot from an address."},"functionSelector":"667f9d70","implemented":false,"kind":"function","modifiers":[],"name":"load","nameLocation":"20548:4:15","parameters":{"id":13528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13525,"mutability":"mutable","name":"target","nameLocation":"20561:6:15","nodeType":"VariableDeclaration","scope":13532,"src":"20553:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13524,"name":"address","nodeType":"ElementaryTypeName","src":"20553:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13527,"mutability":"mutable","name":"slot","nameLocation":"20577:4:15","nodeType":"VariableDeclaration","scope":13532,"src":"20569:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13526,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20569:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20552:30:15"},"returnParameters":{"id":13531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13530,"mutability":"mutable","name":"data","nameLocation":"20614:4:15","nodeType":"VariableDeclaration","scope":13532,"src":"20606:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13529,"name":"bytes32","nodeType":"ElementaryTypeName","src":"20606:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"20605:14:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13536,"nodeType":"FunctionDefinition","src":"20711:37:15","nodes":[],"documentation":{"id":13533,"nodeType":"StructuredDocumentation","src":"20626:80:15","text":"Pauses gas metering (i.e. gas usage is not counted). Noop if already paused."},"functionSelector":"d1a5b36f","implemented":false,"kind":"function","modifiers":[],"name":"pauseGasMetering","nameLocation":"20720:16:15","parameters":{"id":13534,"nodeType":"ParameterList","parameters":[],"src":"20736:2:15"},"returnParameters":{"id":13535,"nodeType":"ParameterList","parameters":[],"src":"20747:0:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13540,"nodeType":"FunctionDefinition","src":"20800:27:15","nodes":[],"documentation":{"id":13537,"nodeType":"StructuredDocumentation","src":"20754:41:15","text":"Records all storage reads and writes."},"functionSelector":"266cf109","implemented":false,"kind":"function","modifiers":[],"name":"record","nameLocation":"20809:6:15","parameters":{"id":13538,"nodeType":"ParameterList","parameters":[],"src":"20815:2:15"},"returnParameters":{"id":13539,"nodeType":"ParameterList","parameters":[],"src":"20826:0:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13544,"nodeType":"FunctionDefinition","src":"20874:31:15","nodes":[],"documentation":{"id":13541,"nodeType":"StructuredDocumentation","src":"20833:36:15","text":"Record all the transaction logs."},"functionSelector":"41af2f52","implemented":false,"kind":"function","modifiers":[],"name":"recordLogs","nameLocation":"20883:10:15","parameters":{"id":13542,"nodeType":"ParameterList","parameters":[],"src":"20893:2:15"},"returnParameters":{"id":13543,"nodeType":"ParameterList","parameters":[],"src":"20904:0:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13548,"nodeType":"FunctionDefinition","src":"20995:38:15","nodes":[],"documentation":{"id":13545,"nodeType":"StructuredDocumentation","src":"20911:79:15","text":"Resumes gas metering (i.e. gas usage is counted again). Noop if already on."},"functionSelector":"2bcd50e0","implemented":false,"kind":"function","modifiers":[],"name":"resumeGasMetering","nameLocation":"21004:17:15","parameters":{"id":13546,"nodeType":"ParameterList","parameters":[],"src":"21021:2:15"},"returnParameters":{"id":13547,"nodeType":"ParameterList","parameters":[],"src":"21032:0:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13558,"nodeType":"FunctionDefinition","src":"21110:98:15","nodes":[],"documentation":{"id":13549,"nodeType":"StructuredDocumentation","src":"21039:66:15","text":"Performs an Ethereum JSON-RPC request to the current fork URL."},"functionSelector":"1206c8a8","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"21119:3:15","parameters":{"id":13554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13551,"mutability":"mutable","name":"method","nameLocation":"21139:6:15","nodeType":"VariableDeclaration","scope":13558,"src":"21123:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13550,"name":"string","nodeType":"ElementaryTypeName","src":"21123:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13553,"mutability":"mutable","name":"params","nameLocation":"21163:6:15","nodeType":"VariableDeclaration","scope":13558,"src":"21147:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13552,"name":"string","nodeType":"ElementaryTypeName","src":"21147:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21122:48:15"},"returnParameters":{"id":13557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13556,"mutability":"mutable","name":"data","nameLocation":"21202:4:15","nodeType":"VariableDeclaration","scope":13558,"src":"21189:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13555,"name":"bytes","nodeType":"ElementaryTypeName","src":"21189:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"21188:19:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13570,"nodeType":"FunctionDefinition","src":"21283:142:15","nodes":[],"documentation":{"id":13559,"nodeType":"StructuredDocumentation","src":"21214:64:15","text":"Performs an Ethereum JSON-RPC request to the given endpoint."},"functionSelector":"0199a220","implemented":false,"kind":"function","modifiers":[],"name":"rpc","nameLocation":"21292:3:15","parameters":{"id":13566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13561,"mutability":"mutable","name":"urlOrAlias","nameLocation":"21312:10:15","nodeType":"VariableDeclaration","scope":13570,"src":"21296:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13560,"name":"string","nodeType":"ElementaryTypeName","src":"21296:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13563,"mutability":"mutable","name":"method","nameLocation":"21340:6:15","nodeType":"VariableDeclaration","scope":13570,"src":"21324:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13562,"name":"string","nodeType":"ElementaryTypeName","src":"21324:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13565,"mutability":"mutable","name":"params","nameLocation":"21364:6:15","nodeType":"VariableDeclaration","scope":13570,"src":"21348:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13564,"name":"string","nodeType":"ElementaryTypeName","src":"21348:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"21295:76:15"},"returnParameters":{"id":13569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13568,"mutability":"mutable","name":"data","nameLocation":"21419:4:15","nodeType":"VariableDeclaration","scope":13570,"src":"21406:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13567,"name":"bytes","nodeType":"ElementaryTypeName","src":"21406:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"21405:19:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13582,"nodeType":"FunctionDefinition","src":"21499:99:15","nodes":[],"documentation":{"id":13571,"nodeType":"StructuredDocumentation","src":"21431:63:15","text":"Signs `digest` with `privateKey` using the secp256r1 curve."},"functionSelector":"83211b40","implemented":false,"kind":"function","modifiers":[],"name":"signP256","nameLocation":"21508:8:15","parameters":{"id":13576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13573,"mutability":"mutable","name":"privateKey","nameLocation":"21525:10:15","nodeType":"VariableDeclaration","scope":13582,"src":"21517:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13572,"name":"uint256","nodeType":"ElementaryTypeName","src":"21517:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13575,"mutability":"mutable","name":"digest","nameLocation":"21545:6:15","nodeType":"VariableDeclaration","scope":13582,"src":"21537:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13574,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21537:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21516:36:15"},"returnParameters":{"id":13581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13578,"mutability":"mutable","name":"r","nameLocation":"21584:1:15","nodeType":"VariableDeclaration","scope":13582,"src":"21576:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13577,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21576:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13580,"mutability":"mutable","name":"s","nameLocation":"21595:1:15","nodeType":"VariableDeclaration","scope":13582,"src":"21587:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13579,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21587:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21575:22:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13596,"nodeType":"FunctionDefinition","src":"21672:104:15","nodes":[],"documentation":{"id":13583,"nodeType":"StructuredDocumentation","src":"21604:63:15","text":"Signs `digest` with `privateKey` using the secp256k1 curve."},"functionSelector":"e341eaa4","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"21681:4:15","parameters":{"id":13588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13585,"mutability":"mutable","name":"privateKey","nameLocation":"21694:10:15","nodeType":"VariableDeclaration","scope":13596,"src":"21686:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13584,"name":"uint256","nodeType":"ElementaryTypeName","src":"21686:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":13587,"mutability":"mutable","name":"digest","nameLocation":"21714:6:15","nodeType":"VariableDeclaration","scope":13596,"src":"21706:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13586,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21706:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21685:36:15"},"returnParameters":{"id":13595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13590,"mutability":"mutable","name":"v","nameLocation":"21751:1:15","nodeType":"VariableDeclaration","scope":13596,"src":"21745:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":13589,"name":"uint8","nodeType":"ElementaryTypeName","src":"21745:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":13592,"mutability":"mutable","name":"r","nameLocation":"21762:1:15","nodeType":"VariableDeclaration","scope":13596,"src":"21754:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13591,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21754:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13594,"mutability":"mutable","name":"s","nameLocation":"21773:1:15","nodeType":"VariableDeclaration","scope":13596,"src":"21765:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13593,"name":"bytes32","nodeType":"ElementaryTypeName","src":"21765:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"21744:31:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13608,"nodeType":"FunctionDefinition","src":"22215:84:15","nodes":[],"documentation":{"id":13597,"nodeType":"StructuredDocumentation","src":"21782:428:15","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n If `--sender` is provided, the signer with provided address is used, otherwise,\n if exactly one signer is provided to the script, that signer is used.\n Raises error if signer passed through `--sender` does not match any unlocked signers or\n if `--sender` is not provided and not exactly one signer is passed to the script."},"functionSelector":"799cd333","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"22224:4:15","parameters":{"id":13600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13599,"mutability":"mutable","name":"digest","nameLocation":"22237:6:15","nodeType":"VariableDeclaration","scope":13608,"src":"22229:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13598,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22229:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22228:16:15"},"returnParameters":{"id":13607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13602,"mutability":"mutable","name":"v","nameLocation":"22274:1:15","nodeType":"VariableDeclaration","scope":13608,"src":"22268:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":13601,"name":"uint8","nodeType":"ElementaryTypeName","src":"22268:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":13604,"mutability":"mutable","name":"r","nameLocation":"22285:1:15","nodeType":"VariableDeclaration","scope":13608,"src":"22277:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13603,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22277:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13606,"mutability":"mutable","name":"s","nameLocation":"22296:1:15","nodeType":"VariableDeclaration","scope":13608,"src":"22288:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13605,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22288:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22267:31:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13622,"nodeType":"FunctionDefinition","src":"22476:100:15","nodes":[],"documentation":{"id":13609,"nodeType":"StructuredDocumentation","src":"22305:166:15","text":"Signs `digest` with signer provided to script using the secp256k1 curve.\n Raises error if none of the signers passed into the script have provided address."},"functionSelector":"8c1aa205","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"22485:4:15","parameters":{"id":13614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13611,"mutability":"mutable","name":"signer","nameLocation":"22498:6:15","nodeType":"VariableDeclaration","scope":13622,"src":"22490:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13610,"name":"address","nodeType":"ElementaryTypeName","src":"22490:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13613,"mutability":"mutable","name":"digest","nameLocation":"22514:6:15","nodeType":"VariableDeclaration","scope":13622,"src":"22506:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13612,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22506:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22489:32:15"},"returnParameters":{"id":13621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13616,"mutability":"mutable","name":"v","nameLocation":"22551:1:15","nodeType":"VariableDeclaration","scope":13622,"src":"22545:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":13615,"name":"uint8","nodeType":"ElementaryTypeName","src":"22545:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":13618,"mutability":"mutable","name":"r","nameLocation":"22562:1:15","nodeType":"VariableDeclaration","scope":13622,"src":"22554:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13617,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22554:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":13620,"mutability":"mutable","name":"s","nameLocation":"22573:1:15","nodeType":"VariableDeclaration","scope":13622,"src":"22565:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13619,"name":"bytes32","nodeType":"ElementaryTypeName","src":"22565:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"22544:31:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13626,"nodeType":"FunctionDefinition","src":"22644:42:15","nodes":[],"documentation":{"id":13623,"nodeType":"StructuredDocumentation","src":"22582:57:15","text":"Starts recording all map SSTOREs for later retrieval."},"functionSelector":"3e9705c0","implemented":false,"kind":"function","modifiers":[],"name":"startMappingRecording","nameLocation":"22653:21:15","parameters":{"id":13624,"nodeType":"ParameterList","parameters":[],"src":"22674:2:15"},"returnParameters":{"id":13625,"nodeType":"ParameterList","parameters":[],"src":"22685:0:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13630,"nodeType":"FunctionDefinition","src":"22830:44:15","nodes":[],"documentation":{"id":13627,"nodeType":"StructuredDocumentation","src":"22692:133:15","text":"Record all account accesses as part of CREATE, CALL or SELFDESTRUCT opcodes in order,\n along with the context of the calls"},"functionSelector":"cf22e3c9","implemented":false,"kind":"function","modifiers":[],"name":"startStateDiffRecording","nameLocation":"22839:23:15","parameters":{"id":13628,"nodeType":"ParameterList","parameters":[],"src":"22862:2:15"},"returnParameters":{"id":13629,"nodeType":"ParameterList","parameters":[],"src":"22873:0:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13638,"nodeType":"FunctionDefinition","src":"22982:92:15","nodes":[],"documentation":{"id":13631,"nodeType":"StructuredDocumentation","src":"22880:97:15","text":"Returns an ordered array of all account accesses from a `vm.startStateDiffRecording` session."},"functionSelector":"aa5cf90e","implemented":false,"kind":"function","modifiers":[],"name":"stopAndReturnStateDiff","nameLocation":"22991:22:15","parameters":{"id":13632,"nodeType":"ParameterList","parameters":[],"src":"23013:2:15"},"returnParameters":{"id":13637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13636,"mutability":"mutable","name":"accountAccesses","nameLocation":"23057:15:15","nodeType":"VariableDeclaration","scope":13638,"src":"23034:38:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$13056_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.AccountAccess[]"},"typeName":{"baseType":{"id":13634,"nodeType":"UserDefinedTypeName","pathNode":{"id":13633,"name":"AccountAccess","nameLocations":["23034:13:15"],"nodeType":"IdentifierPath","referencedDeclaration":13056,"src":"23034:13:15"},"referencedDeclaration":13056,"src":"23034:13:15","typeDescriptions":{"typeIdentifier":"t_struct$_AccountAccess_$13056_storage_ptr","typeString":"struct VmSafe.AccountAccess"}},"id":13635,"nodeType":"ArrayTypeName","src":"23034:15:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_AccountAccess_$13056_storage_$dyn_storage_ptr","typeString":"struct VmSafe.AccountAccess[]"}},"visibility":"internal"}],"src":"23033:40:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13642,"nodeType":"FunctionDefinition","src":"23170:41:15","nodes":[],"documentation":{"id":13639,"nodeType":"StructuredDocumentation","src":"23080:85:15","text":"Stops recording all map SSTOREs for later retrieval and clears the recorded data."},"functionSelector":"0d4aae9b","implemented":false,"kind":"function","modifiers":[],"name":"stopMappingRecording","nameLocation":"23179:20:15","parameters":{"id":13640,"nodeType":"ParameterList","parameters":[],"src":"23199:2:15"},"returnParameters":{"id":13641,"nodeType":"ParameterList","parameters":[],"src":"23210:0:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13648,"nodeType":"FunctionDefinition","src":"23410:50:15","nodes":[],"documentation":{"id":13643,"nodeType":"StructuredDocumentation","src":"23254:151:15","text":"Closes file for reading, resetting the offset and allowing to read it from beginning with readLine.\n `path` is relative to the project root."},"functionSelector":"48c3241f","implemented":false,"kind":"function","modifiers":[],"name":"closeFile","nameLocation":"23419:9:15","parameters":{"id":13646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13645,"mutability":"mutable","name":"path","nameLocation":"23445:4:15","nodeType":"VariableDeclaration","scope":13648,"src":"23429:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13644,"name":"string","nodeType":"ElementaryTypeName","src":"23429:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23428:22:15"},"returnParameters":{"id":13647,"nodeType":"ParameterList","parameters":[],"src":"23459:0:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13658,"nodeType":"FunctionDefinition","src":"23775:93:15","nodes":[],"documentation":{"id":13649,"nodeType":"StructuredDocumentation","src":"23466:304:15","text":"Copies the contents of one file to another. This function will **overwrite** the contents of `to`.\n On success, the total number of bytes copied is returned and it is equal to the length of the `to` file as reported by `metadata`.\n Both `from` and `to` are relative to the project root."},"functionSelector":"a54a87d8","implemented":false,"kind":"function","modifiers":[],"name":"copyFile","nameLocation":"23784:8:15","parameters":{"id":13654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13651,"mutability":"mutable","name":"from","nameLocation":"23809:4:15","nodeType":"VariableDeclaration","scope":13658,"src":"23793:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13650,"name":"string","nodeType":"ElementaryTypeName","src":"23793:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13653,"mutability":"mutable","name":"to","nameLocation":"23831:2:15","nodeType":"VariableDeclaration","scope":13658,"src":"23815:18:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13652,"name":"string","nodeType":"ElementaryTypeName","src":"23815:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"23792:42:15"},"returnParameters":{"id":13657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13656,"mutability":"mutable","name":"copied","nameLocation":"23860:6:15","nodeType":"VariableDeclaration","scope":13658,"src":"23853:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13655,"name":"uint64","nodeType":"ElementaryTypeName","src":"23853:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"23852:15:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13666,"nodeType":"FunctionDefinition","src":"24273:66:15","nodes":[],"documentation":{"id":13659,"nodeType":"StructuredDocumentation","src":"23874:394:15","text":"Creates a new, empty directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - User lacks permissions to modify `path`.\n - A parent of the given path doesn't exist and `recursive` is false.\n - `path` already exists and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"168b64d3","implemented":false,"kind":"function","modifiers":[],"name":"createDir","nameLocation":"24282:9:15","parameters":{"id":13664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13661,"mutability":"mutable","name":"path","nameLocation":"24308:4:15","nodeType":"VariableDeclaration","scope":13666,"src":"24292:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13660,"name":"string","nodeType":"ElementaryTypeName","src":"24292:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13663,"mutability":"mutable","name":"recursive","nameLocation":"24319:9:15","nodeType":"VariableDeclaration","scope":13666,"src":"24314:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13662,"name":"bool","nodeType":"ElementaryTypeName","src":"24314:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"24291:38:15"},"returnParameters":{"id":13665,"nodeType":"ParameterList","parameters":[],"src":"24338:0:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13674,"nodeType":"FunctionDefinition","src":"24569:93:15","nodes":[],"documentation":{"id":13667,"nodeType":"StructuredDocumentation","src":"24345:219:15","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"9a8325a0","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"24578:10:15","parameters":{"id":13670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13669,"mutability":"mutable","name":"artifactPath","nameLocation":"24605:12:15","nodeType":"VariableDeclaration","scope":13674,"src":"24589:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13668,"name":"string","nodeType":"ElementaryTypeName","src":"24589:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"24588:30:15"},"returnParameters":{"id":13673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13672,"mutability":"mutable","name":"deployedAddress","nameLocation":"24645:15:15","nodeType":"VariableDeclaration","scope":13674,"src":"24637:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13671,"name":"address","nodeType":"ElementaryTypeName","src":"24637:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"24636:25:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13684,"nodeType":"FunctionDefinition","src":"24955:141:15","nodes":[],"documentation":{"id":13675,"nodeType":"StructuredDocumentation","src":"24668:282:15","text":"Deploys a contract from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional.\n Additionaly accepts abi-encoded constructor arguments."},"functionSelector":"29ce9dde","implemented":false,"kind":"function","modifiers":[],"name":"deployCode","nameLocation":"24964:10:15","parameters":{"id":13680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13677,"mutability":"mutable","name":"artifactPath","nameLocation":"24991:12:15","nodeType":"VariableDeclaration","scope":13684,"src":"24975:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13676,"name":"string","nodeType":"ElementaryTypeName","src":"24975:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13679,"mutability":"mutable","name":"constructorArgs","nameLocation":"25020:15:15","nodeType":"VariableDeclaration","scope":13684,"src":"25005:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13678,"name":"bytes","nodeType":"ElementaryTypeName","src":"25005:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"24974:62:15"},"returnParameters":{"id":13683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13682,"mutability":"mutable","name":"deployedAddress","nameLocation":"25079:15:15","nodeType":"VariableDeclaration","scope":13684,"src":"25071:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13681,"name":"address","nodeType":"ElementaryTypeName","src":"25071:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"25070:25:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13692,"nodeType":"FunctionDefinition","src":"25191:69:15","nodes":[],"documentation":{"id":13685,"nodeType":"StructuredDocumentation","src":"25102:84:15","text":"Returns true if the given path points to an existing entity, else returns false."},"functionSelector":"261a323e","implemented":false,"kind":"function","modifiers":[],"name":"exists","nameLocation":"25200:6:15","parameters":{"id":13688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13687,"mutability":"mutable","name":"path","nameLocation":"25223:4:15","nodeType":"VariableDeclaration","scope":13692,"src":"25207:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13686,"name":"string","nodeType":"ElementaryTypeName","src":"25207:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25206:22:15"},"returnParameters":{"id":13691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13690,"mutability":"mutable","name":"result","nameLocation":"25252:6:15","nodeType":"VariableDeclaration","scope":13692,"src":"25247:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13689,"name":"bool","nodeType":"ElementaryTypeName","src":"25247:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"25246:13:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13701,"nodeType":"FunctionDefinition","src":"25325:84:15","nodes":[],"documentation":{"id":13693,"nodeType":"StructuredDocumentation","src":"25266:54:15","text":"Performs a foreign function call via the terminal."},"functionSelector":"89160467","implemented":false,"kind":"function","modifiers":[],"name":"ffi","nameLocation":"25334:3:15","parameters":{"id":13697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13696,"mutability":"mutable","name":"commandInput","nameLocation":"25356:12:15","nodeType":"VariableDeclaration","scope":13701,"src":"25338:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13694,"name":"string","nodeType":"ElementaryTypeName","src":"25338:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13695,"nodeType":"ArrayTypeName","src":"25338:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"25337:32:15"},"returnParameters":{"id":13700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13699,"mutability":"mutable","name":"result","nameLocation":"25401:6:15","nodeType":"VariableDeclaration","scope":13701,"src":"25388:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13698,"name":"bytes","nodeType":"ElementaryTypeName","src":"25388:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"25387:21:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13710,"nodeType":"FunctionDefinition","src":"25508:93:15","nodes":[],"documentation":{"id":13702,"nodeType":"StructuredDocumentation","src":"25415:88:15","text":"Given a path, query the file system to get information about a file, directory, etc."},"functionSelector":"af368a08","implemented":false,"kind":"function","modifiers":[],"name":"fsMetadata","nameLocation":"25517:10:15","parameters":{"id":13705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13704,"mutability":"mutable","name":"path","nameLocation":"25544:4:15","nodeType":"VariableDeclaration","scope":13710,"src":"25528:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13703,"name":"string","nodeType":"ElementaryTypeName","src":"25528:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25527:22:15"},"returnParameters":{"id":13709,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13708,"mutability":"mutable","name":"metadata","nameLocation":"25591:8:15","nodeType":"VariableDeclaration","scope":13710,"src":"25573:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$13000_memory_ptr","typeString":"struct VmSafe.FsMetadata"},"typeName":{"id":13707,"nodeType":"UserDefinedTypeName","pathNode":{"id":13706,"name":"FsMetadata","nameLocations":["25573:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":13000,"src":"25573:10:15"},"referencedDeclaration":13000,"src":"25573:10:15","typeDescriptions":{"typeIdentifier":"t_struct$_FsMetadata_$13000_storage_ptr","typeString":"struct VmSafe.FsMetadata"}},"visibility":"internal"}],"src":"25572:28:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13718,"nodeType":"FunctionDefinition","src":"25839:101:15","nodes":[],"documentation":{"id":13711,"nodeType":"StructuredDocumentation","src":"25607:227:15","text":"Gets the creation bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"8d1cc925","implemented":false,"kind":"function","modifiers":[],"name":"getCode","nameLocation":"25848:7:15","parameters":{"id":13714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13713,"mutability":"mutable","name":"artifactPath","nameLocation":"25872:12:15","nodeType":"VariableDeclaration","scope":13718,"src":"25856:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13712,"name":"string","nodeType":"ElementaryTypeName","src":"25856:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"25855:30:15"},"returnParameters":{"id":13717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13716,"mutability":"mutable","name":"creationBytecode","nameLocation":"25922:16:15","nodeType":"VariableDeclaration","scope":13718,"src":"25909:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13715,"name":"bytes","nodeType":"ElementaryTypeName","src":"25909:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"25908:31:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13726,"nodeType":"FunctionDefinition","src":"26178:108:15","nodes":[],"documentation":{"id":13719,"nodeType":"StructuredDocumentation","src":"25946:227:15","text":"Gets the deployed bytecode from an artifact file. Takes in the relative path to the json file or the path to the\n artifact in the form of <path>:<contract>:<version> where <contract> and <version> parts are optional."},"functionSelector":"3ebf73b4","implemented":false,"kind":"function","modifiers":[],"name":"getDeployedCode","nameLocation":"26187:15:15","parameters":{"id":13722,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13721,"mutability":"mutable","name":"artifactPath","nameLocation":"26219:12:15","nodeType":"VariableDeclaration","scope":13726,"src":"26203:28:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13720,"name":"string","nodeType":"ElementaryTypeName","src":"26203:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26202:30:15"},"returnParameters":{"id":13725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13724,"mutability":"mutable","name":"runtimeBytecode","nameLocation":"26269:15:15","nodeType":"VariableDeclaration","scope":13726,"src":"26256:28:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13723,"name":"bytes","nodeType":"ElementaryTypeName","src":"26256:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"26255:30:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13734,"nodeType":"FunctionDefinition","src":"26392:68:15","nodes":[],"documentation":{"id":13727,"nodeType":"StructuredDocumentation","src":"26292:95:15","text":"Returns true if the path exists on disk and is pointing at a directory, else returns false."},"functionSelector":"7d15d019","implemented":false,"kind":"function","modifiers":[],"name":"isDir","nameLocation":"26401:5:15","parameters":{"id":13730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13729,"mutability":"mutable","name":"path","nameLocation":"26423:4:15","nodeType":"VariableDeclaration","scope":13734,"src":"26407:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13728,"name":"string","nodeType":"ElementaryTypeName","src":"26407:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26406:22:15"},"returnParameters":{"id":13733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13732,"mutability":"mutable","name":"result","nameLocation":"26452:6:15","nodeType":"VariableDeclaration","scope":13734,"src":"26447:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13731,"name":"bool","nodeType":"ElementaryTypeName","src":"26447:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"26446:13:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13742,"nodeType":"FunctionDefinition","src":"26569:69:15","nodes":[],"documentation":{"id":13735,"nodeType":"StructuredDocumentation","src":"26466:98:15","text":"Returns true if the path exists on disk and is pointing at a regular file, else returns false."},"functionSelector":"e0eb04d4","implemented":false,"kind":"function","modifiers":[],"name":"isFile","nameLocation":"26578:6:15","parameters":{"id":13738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13737,"mutability":"mutable","name":"path","nameLocation":"26601:4:15","nodeType":"VariableDeclaration","scope":13742,"src":"26585:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13736,"name":"string","nodeType":"ElementaryTypeName","src":"26585:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26584:22:15"},"returnParameters":{"id":13741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13740,"mutability":"mutable","name":"result","nameLocation":"26630:6:15","nodeType":"VariableDeclaration","scope":13742,"src":"26625:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13739,"name":"bool","nodeType":"ElementaryTypeName","src":"26625:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"26624:13:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13748,"nodeType":"FunctionDefinition","src":"26694:66:15","nodes":[],"documentation":{"id":13743,"nodeType":"StructuredDocumentation","src":"26644:45:15","text":"Get the path of the current project root."},"functionSelector":"d930a0e6","implemented":false,"kind":"function","modifiers":[],"name":"projectRoot","nameLocation":"26703:11:15","parameters":{"id":13744,"nodeType":"ParameterList","parameters":[],"src":"26714:2:15"},"returnParameters":{"id":13747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13746,"mutability":"mutable","name":"path","nameLocation":"26754:4:15","nodeType":"VariableDeclaration","scope":13748,"src":"26740:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13745,"name":"string","nodeType":"ElementaryTypeName","src":"26740:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26739:20:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13756,"nodeType":"FunctionDefinition","src":"26827:83:15","nodes":[],"documentation":{"id":13749,"nodeType":"StructuredDocumentation","src":"26766:56:15","text":"Prompts the user for a string value in the terminal."},"functionSelector":"47eaf474","implemented":false,"kind":"function","modifiers":[],"name":"prompt","nameLocation":"26836:6:15","parameters":{"id":13752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13751,"mutability":"mutable","name":"promptText","nameLocation":"26859:10:15","nodeType":"VariableDeclaration","scope":13756,"src":"26843:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13750,"name":"string","nodeType":"ElementaryTypeName","src":"26843:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26842:28:15"},"returnParameters":{"id":13755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13754,"mutability":"mutable","name":"input","nameLocation":"26903:5:15","nodeType":"VariableDeclaration","scope":13756,"src":"26889:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13753,"name":"string","nodeType":"ElementaryTypeName","src":"26889:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26888:21:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13764,"nodeType":"FunctionDefinition","src":"26973:78:15","nodes":[],"documentation":{"id":13757,"nodeType":"StructuredDocumentation","src":"26916:52:15","text":"Prompts the user for an address in the terminal."},"functionSelector":"62ee05f4","implemented":false,"kind":"function","modifiers":[],"name":"promptAddress","nameLocation":"26982:13:15","parameters":{"id":13760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13759,"mutability":"mutable","name":"promptText","nameLocation":"27012:10:15","nodeType":"VariableDeclaration","scope":13764,"src":"26996:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13758,"name":"string","nodeType":"ElementaryTypeName","src":"26996:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"26995:28:15"},"returnParameters":{"id":13763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13764,"src":"27042:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13761,"name":"address","nodeType":"ElementaryTypeName","src":"27042:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"27041:9:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13772,"nodeType":"FunctionDefinition","src":"27125:89:15","nodes":[],"documentation":{"id":13765,"nodeType":"StructuredDocumentation","src":"27057:63:15","text":"Prompts the user for a hidden string value in the terminal."},"functionSelector":"1e279d41","implemented":false,"kind":"function","modifiers":[],"name":"promptSecret","nameLocation":"27134:12:15","parameters":{"id":13768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13767,"mutability":"mutable","name":"promptText","nameLocation":"27163:10:15","nodeType":"VariableDeclaration","scope":13772,"src":"27147:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13766,"name":"string","nodeType":"ElementaryTypeName","src":"27147:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27146:28:15"},"returnParameters":{"id":13771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13770,"mutability":"mutable","name":"input","nameLocation":"27207:5:15","nodeType":"VariableDeclaration","scope":13772,"src":"27193:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13769,"name":"string","nodeType":"ElementaryTypeName","src":"27193:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27192:21:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13780,"nodeType":"FunctionDefinition","src":"27294:81:15","nodes":[],"documentation":{"id":13773,"nodeType":"StructuredDocumentation","src":"27220:69:15","text":"Prompts the user for hidden uint256 in the terminal (usually pk)."},"functionSelector":"69ca02b7","implemented":false,"kind":"function","modifiers":[],"name":"promptSecretUint","nameLocation":"27303:16:15","parameters":{"id":13776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13775,"mutability":"mutable","name":"promptText","nameLocation":"27336:10:15","nodeType":"VariableDeclaration","scope":13780,"src":"27320:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13774,"name":"string","nodeType":"ElementaryTypeName","src":"27320:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27319:28:15"},"returnParameters":{"id":13779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13780,"src":"27366:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13777,"name":"uint256","nodeType":"ElementaryTypeName","src":"27366:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27365:9:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13788,"nodeType":"FunctionDefinition","src":"27435:75:15","nodes":[],"documentation":{"id":13781,"nodeType":"StructuredDocumentation","src":"27381:49:15","text":"Prompts the user for uint256 in the terminal."},"functionSelector":"652fd489","implemented":false,"kind":"function","modifiers":[],"name":"promptUint","nameLocation":"27444:10:15","parameters":{"id":13784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13783,"mutability":"mutable","name":"promptText","nameLocation":"27471:10:15","nodeType":"VariableDeclaration","scope":13788,"src":"27455:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13782,"name":"string","nodeType":"ElementaryTypeName","src":"27455:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27454:28:15"},"returnParameters":{"id":13787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13786,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13788,"src":"27501:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13785,"name":"uint256","nodeType":"ElementaryTypeName","src":"27501:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27500:9:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13798,"nodeType":"FunctionDefinition","src":"27758:89:15","nodes":[],"documentation":{"id":13789,"nodeType":"StructuredDocumentation","src":"27516:237:15","text":"Reads the directory at the given path recursively, up to `maxDepth`.\n `maxDepth` defaults to 1, meaning only the direct children of the given directory will be returned.\n Follows symbolic links if `followLinks` is true."},"functionSelector":"c4bc59e0","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"27767:7:15","parameters":{"id":13792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13791,"mutability":"mutable","name":"path","nameLocation":"27791:4:15","nodeType":"VariableDeclaration","scope":13798,"src":"27775:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13790,"name":"string","nodeType":"ElementaryTypeName","src":"27775:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"27774:22:15"},"returnParameters":{"id":13797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13796,"mutability":"mutable","name":"entries","nameLocation":"27838:7:15","nodeType":"VariableDeclaration","scope":13798,"src":"27820:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12984_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":13794,"nodeType":"UserDefinedTypeName","pathNode":{"id":13793,"name":"DirEntry","nameLocations":["27820:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":12984,"src":"27820:8:15"},"referencedDeclaration":12984,"src":"27820:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$12984_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":13795,"nodeType":"ArrayTypeName","src":"27820:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12984_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"27819:27:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13810,"nodeType":"FunctionDefinition","src":"27884:106:15","nodes":[],"documentation":{"id":13799,"nodeType":"StructuredDocumentation","src":"27853:26:15","text":"See `readDir(string)`."},"functionSelector":"1497876c","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"27893:7:15","parameters":{"id":13804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13801,"mutability":"mutable","name":"path","nameLocation":"27917:4:15","nodeType":"VariableDeclaration","scope":13810,"src":"27901:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13800,"name":"string","nodeType":"ElementaryTypeName","src":"27901:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13803,"mutability":"mutable","name":"maxDepth","nameLocation":"27930:8:15","nodeType":"VariableDeclaration","scope":13810,"src":"27923:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13802,"name":"uint64","nodeType":"ElementaryTypeName","src":"27923:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"27900:39:15"},"returnParameters":{"id":13809,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13808,"mutability":"mutable","name":"entries","nameLocation":"27981:7:15","nodeType":"VariableDeclaration","scope":13810,"src":"27963:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12984_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":13806,"nodeType":"UserDefinedTypeName","pathNode":{"id":13805,"name":"DirEntry","nameLocations":["27963:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":12984,"src":"27963:8:15"},"referencedDeclaration":12984,"src":"27963:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$12984_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":13807,"nodeType":"ArrayTypeName","src":"27963:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12984_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"27962:27:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13824,"nodeType":"FunctionDefinition","src":"28027:148:15","nodes":[],"documentation":{"id":13811,"nodeType":"StructuredDocumentation","src":"27996:26:15","text":"See `readDir(string)`."},"functionSelector":"8102d70d","implemented":false,"kind":"function","modifiers":[],"name":"readDir","nameLocation":"28036:7:15","parameters":{"id":13818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13813,"mutability":"mutable","name":"path","nameLocation":"28060:4:15","nodeType":"VariableDeclaration","scope":13824,"src":"28044:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13812,"name":"string","nodeType":"ElementaryTypeName","src":"28044:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13815,"mutability":"mutable","name":"maxDepth","nameLocation":"28073:8:15","nodeType":"VariableDeclaration","scope":13824,"src":"28066:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":13814,"name":"uint64","nodeType":"ElementaryTypeName","src":"28066:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":13817,"mutability":"mutable","name":"followLinks","nameLocation":"28088:11:15","nodeType":"VariableDeclaration","scope":13824,"src":"28083:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13816,"name":"bool","nodeType":"ElementaryTypeName","src":"28083:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28043:57:15"},"returnParameters":{"id":13823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13822,"mutability":"mutable","name":"entries","nameLocation":"28166:7:15","nodeType":"VariableDeclaration","scope":13824,"src":"28148:25:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12984_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.DirEntry[]"},"typeName":{"baseType":{"id":13820,"nodeType":"UserDefinedTypeName","pathNode":{"id":13819,"name":"DirEntry","nameLocations":["28148:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":12984,"src":"28148:8:15"},"referencedDeclaration":12984,"src":"28148:8:15","typeDescriptions":{"typeIdentifier":"t_struct$_DirEntry_$12984_storage_ptr","typeString":"struct VmSafe.DirEntry"}},"id":13821,"nodeType":"ArrayTypeName","src":"28148:10:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_DirEntry_$12984_storage_$dyn_storage_ptr","typeString":"struct VmSafe.DirEntry[]"}},"visibility":"internal"}],"src":"28147:27:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13832,"nodeType":"FunctionDefinition","src":"28273:83:15","nodes":[],"documentation":{"id":13825,"nodeType":"StructuredDocumentation","src":"28181:87:15","text":"Reads the entire content of file to string. `path` is relative to the project root."},"functionSelector":"60f9bb11","implemented":false,"kind":"function","modifiers":[],"name":"readFile","nameLocation":"28282:8:15","parameters":{"id":13828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13827,"mutability":"mutable","name":"path","nameLocation":"28307:4:15","nodeType":"VariableDeclaration","scope":13832,"src":"28291:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13826,"name":"string","nodeType":"ElementaryTypeName","src":"28291:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28290:22:15"},"returnParameters":{"id":13831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13830,"mutability":"mutable","name":"data","nameLocation":"28350:4:15","nodeType":"VariableDeclaration","scope":13832,"src":"28336:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13829,"name":"string","nodeType":"ElementaryTypeName","src":"28336:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28335:20:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13840,"nodeType":"FunctionDefinition","src":"28454:88:15","nodes":[],"documentation":{"id":13833,"nodeType":"StructuredDocumentation","src":"28362:87:15","text":"Reads the entire content of file as binary. `path` is relative to the project root."},"functionSelector":"16ed7bc4","implemented":false,"kind":"function","modifiers":[],"name":"readFileBinary","nameLocation":"28463:14:15","parameters":{"id":13836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13835,"mutability":"mutable","name":"path","nameLocation":"28494:4:15","nodeType":"VariableDeclaration","scope":13840,"src":"28478:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13834,"name":"string","nodeType":"ElementaryTypeName","src":"28478:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28477:22:15"},"returnParameters":{"id":13839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13838,"mutability":"mutable","name":"data","nameLocation":"28536:4:15","nodeType":"VariableDeclaration","scope":13840,"src":"28523:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13837,"name":"bytes","nodeType":"ElementaryTypeName","src":"28523:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"28522:19:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13848,"nodeType":"FunctionDefinition","src":"28591:83:15","nodes":[],"documentation":{"id":13841,"nodeType":"StructuredDocumentation","src":"28548:38:15","text":"Reads next line of file to string."},"functionSelector":"70f55728","implemented":false,"kind":"function","modifiers":[],"name":"readLine","nameLocation":"28600:8:15","parameters":{"id":13844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13843,"mutability":"mutable","name":"path","nameLocation":"28625:4:15","nodeType":"VariableDeclaration","scope":13848,"src":"28609:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13842,"name":"string","nodeType":"ElementaryTypeName","src":"28609:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28608:22:15"},"returnParameters":{"id":13847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13846,"mutability":"mutable","name":"line","nameLocation":"28668:4:15","nodeType":"VariableDeclaration","scope":13848,"src":"28654:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13845,"name":"string","nodeType":"ElementaryTypeName","src":"28654:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28653:20:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13856,"nodeType":"FunctionDefinition","src":"28933:93:15","nodes":[],"documentation":{"id":13849,"nodeType":"StructuredDocumentation","src":"28680:248:15","text":"Reads a symbolic link, returning the path that the link points to.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` is not a symbolic link.\n - `path` does not exist."},"functionSelector":"9f5684a2","implemented":false,"kind":"function","modifiers":[],"name":"readLink","nameLocation":"28942:8:15","parameters":{"id":13852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13851,"mutability":"mutable","name":"linkPath","nameLocation":"28967:8:15","nodeType":"VariableDeclaration","scope":13856,"src":"28951:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13850,"name":"string","nodeType":"ElementaryTypeName","src":"28951:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28950:26:15"},"returnParameters":{"id":13855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13854,"mutability":"mutable","name":"targetPath","nameLocation":"29014:10:15","nodeType":"VariableDeclaration","scope":13856,"src":"29000:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":13853,"name":"string","nodeType":"ElementaryTypeName","src":"29000:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"28999:26:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13864,"nodeType":"FunctionDefinition","src":"29416:66:15","nodes":[],"documentation":{"id":13857,"nodeType":"StructuredDocumentation","src":"29032:379:15","text":"Removes a directory at the provided path.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` doesn't exist.\n - `path` isn't a directory.\n - User lacks permissions to modify `path`.\n - The directory is not empty and `recursive` is false.\n `path` is relative to the project root."},"functionSelector":"45c62011","implemented":false,"kind":"function","modifiers":[],"name":"removeDir","nameLocation":"29425:9:15","parameters":{"id":13862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13859,"mutability":"mutable","name":"path","nameLocation":"29451:4:15","nodeType":"VariableDeclaration","scope":13864,"src":"29435:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13858,"name":"string","nodeType":"ElementaryTypeName","src":"29435:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13861,"mutability":"mutable","name":"recursive","nameLocation":"29462:9:15","nodeType":"VariableDeclaration","scope":13864,"src":"29457:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13860,"name":"bool","nodeType":"ElementaryTypeName","src":"29457:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"29434:38:15"},"returnParameters":{"id":13863,"nodeType":"ParameterList","parameters":[],"src":"29481:0:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13870,"nodeType":"FunctionDefinition","src":"29815:51:15","nodes":[],"documentation":{"id":13865,"nodeType":"StructuredDocumentation","src":"29488:322:15","text":"Removes a file from the filesystem.\n This cheatcode will revert in the following situations, but is not limited to just these cases:\n - `path` points to a directory.\n - The file doesn't exist.\n - The user lacks permissions to remove the file.\n `path` is relative to the project root."},"functionSelector":"f1afe04d","implemented":false,"kind":"function","modifiers":[],"name":"removeFile","nameLocation":"29824:10:15","parameters":{"id":13868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13867,"mutability":"mutable","name":"path","nameLocation":"29851:4:15","nodeType":"VariableDeclaration","scope":13870,"src":"29835:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13866,"name":"string","nodeType":"ElementaryTypeName","src":"29835:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"29834:22:15"},"returnParameters":{"id":13869,"nodeType":"ParameterList","parameters":[],"src":"29865:0:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13880,"nodeType":"FunctionDefinition","src":"29973:91:15","nodes":[],"documentation":{"id":13871,"nodeType":"StructuredDocumentation","src":"29872:96:15","text":"Performs a foreign function call via terminal and returns the exit code, stdout, and stderr."},"functionSelector":"f45c1ce7","implemented":false,"kind":"function","modifiers":[],"name":"tryFfi","nameLocation":"29982:6:15","parameters":{"id":13875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13874,"mutability":"mutable","name":"commandInput","nameLocation":"30007:12:15","nodeType":"VariableDeclaration","scope":13880,"src":"29989:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":13872,"name":"string","nodeType":"ElementaryTypeName","src":"29989:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":13873,"nodeType":"ArrayTypeName","src":"29989:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"29988:32:15"},"returnParameters":{"id":13879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13878,"mutability":"mutable","name":"result","nameLocation":"30056:6:15","nodeType":"VariableDeclaration","scope":13880,"src":"30039:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$13018_memory_ptr","typeString":"struct VmSafe.FfiResult"},"typeName":{"id":13877,"nodeType":"UserDefinedTypeName","pathNode":{"id":13876,"name":"FfiResult","nameLocations":["30039:9:15"],"nodeType":"IdentifierPath","referencedDeclaration":13018,"src":"30039:9:15"},"referencedDeclaration":13018,"src":"30039:9:15","typeDescriptions":{"typeIdentifier":"t_struct$_FfiResult_$13018_storage_ptr","typeString":"struct VmSafe.FfiResult"}},"visibility":"internal"}],"src":"30038:25:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13886,"nodeType":"FunctionDefinition","src":"30129:60:15","nodes":[],"documentation":{"id":13881,"nodeType":"StructuredDocumentation","src":"30070:54:15","text":"Returns the time since unix epoch in milliseconds."},"functionSelector":"625387dc","implemented":false,"kind":"function","modifiers":[],"name":"unixTime","nameLocation":"30138:8:15","parameters":{"id":13882,"nodeType":"ParameterList","parameters":[],"src":"30146:2:15"},"returnParameters":{"id":13885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13884,"mutability":"mutable","name":"milliseconds","nameLocation":"30175:12:15","nodeType":"VariableDeclaration","scope":13886,"src":"30167:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13883,"name":"uint256","nodeType":"ElementaryTypeName","src":"30167:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30166:22:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13894,"nodeType":"FunctionDefinition","src":"30358:72:15","nodes":[],"documentation":{"id":13887,"nodeType":"StructuredDocumentation","src":"30195:158:15","text":"Writes data to file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"897e0a97","implemented":false,"kind":"function","modifiers":[],"name":"writeFile","nameLocation":"30367:9:15","parameters":{"id":13892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13889,"mutability":"mutable","name":"path","nameLocation":"30393:4:15","nodeType":"VariableDeclaration","scope":13894,"src":"30377:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13888,"name":"string","nodeType":"ElementaryTypeName","src":"30377:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13891,"mutability":"mutable","name":"data","nameLocation":"30415:4:15","nodeType":"VariableDeclaration","scope":13894,"src":"30399:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13890,"name":"string","nodeType":"ElementaryTypeName","src":"30399:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30376:44:15"},"returnParameters":{"id":13893,"nodeType":"ParameterList","parameters":[],"src":"30429:0:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13902,"nodeType":"FunctionDefinition","src":"30608:77:15","nodes":[],"documentation":{"id":13895,"nodeType":"StructuredDocumentation","src":"30436:167:15","text":"Writes binary data to a file, creating a file if it does not exist, and entirely replacing its contents if it does.\n `path` is relative to the project root."},"functionSelector":"1f21fc80","implemented":false,"kind":"function","modifiers":[],"name":"writeFileBinary","nameLocation":"30617:15:15","parameters":{"id":13900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13897,"mutability":"mutable","name":"path","nameLocation":"30649:4:15","nodeType":"VariableDeclaration","scope":13902,"src":"30633:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13896,"name":"string","nodeType":"ElementaryTypeName","src":"30633:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13899,"mutability":"mutable","name":"data","nameLocation":"30670:4:15","nodeType":"VariableDeclaration","scope":13902,"src":"30655:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":13898,"name":"bytes","nodeType":"ElementaryTypeName","src":"30655:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"30632:43:15"},"returnParameters":{"id":13901,"nodeType":"ParameterList","parameters":[],"src":"30684:0:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13910,"nodeType":"FunctionDefinition","src":"30806:72:15","nodes":[],"documentation":{"id":13903,"nodeType":"StructuredDocumentation","src":"30691:110:15","text":"Writes line to file, creating a file if it does not exist.\n `path` is relative to the project root."},"functionSelector":"619d897f","implemented":false,"kind":"function","modifiers":[],"name":"writeLine","nameLocation":"30815:9:15","parameters":{"id":13908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13905,"mutability":"mutable","name":"path","nameLocation":"30841:4:15","nodeType":"VariableDeclaration","scope":13910,"src":"30825:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13904,"name":"string","nodeType":"ElementaryTypeName","src":"30825:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13907,"mutability":"mutable","name":"data","nameLocation":"30863:4:15","nodeType":"VariableDeclaration","scope":13910,"src":"30847:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13906,"name":"string","nodeType":"ElementaryTypeName","src":"30847:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"30824:44:15"},"returnParameters":{"id":13909,"nodeType":"ParameterList","parameters":[],"src":"30877:0:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":13920,"nodeType":"FunctionDefinition","src":"31071:91:15","nodes":[],"documentation":{"id":13911,"nodeType":"StructuredDocumentation","src":"30915:151:15","text":"Checks if `key` exists in a JSON object\n `keyExists` is being deprecated in favor of `keyExistsJson`. It will be removed in future versions."},"functionSelector":"528a683c","implemented":false,"kind":"function","modifiers":[],"name":"keyExists","nameLocation":"31080:9:15","parameters":{"id":13916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13913,"mutability":"mutable","name":"json","nameLocation":"31106:4:15","nodeType":"VariableDeclaration","scope":13920,"src":"31090:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13912,"name":"string","nodeType":"ElementaryTypeName","src":"31090:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13915,"mutability":"mutable","name":"key","nameLocation":"31128:3:15","nodeType":"VariableDeclaration","scope":13920,"src":"31112:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13914,"name":"string","nodeType":"ElementaryTypeName","src":"31112:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31089:43:15"},"returnParameters":{"id":13919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13918,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13920,"src":"31156:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13917,"name":"bool","nodeType":"ElementaryTypeName","src":"31156:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"31155:6:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13930,"nodeType":"FunctionDefinition","src":"31217:95:15","nodes":[],"documentation":{"id":13921,"nodeType":"StructuredDocumentation","src":"31168:44:15","text":"Checks if `key` exists in a JSON object."},"functionSelector":"db4235f6","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsJson","nameLocation":"31226:13:15","parameters":{"id":13926,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13923,"mutability":"mutable","name":"json","nameLocation":"31256:4:15","nodeType":"VariableDeclaration","scope":13930,"src":"31240:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13922,"name":"string","nodeType":"ElementaryTypeName","src":"31240:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13925,"mutability":"mutable","name":"key","nameLocation":"31278:3:15","nodeType":"VariableDeclaration","scope":13930,"src":"31262:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13924,"name":"string","nodeType":"ElementaryTypeName","src":"31262:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31239:43:15"},"returnParameters":{"id":13929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13928,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13930,"src":"31306:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13927,"name":"bool","nodeType":"ElementaryTypeName","src":"31306:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"31305:6:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":13940,"nodeType":"FunctionDefinition","src":"31393:101:15","nodes":[],"documentation":{"id":13931,"nodeType":"StructuredDocumentation","src":"31318:70:15","text":"Parses a string of JSON data at `key` and coerces it to `address`."},"functionSelector":"1e19e657","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddress","nameLocation":"31402:16:15","parameters":{"id":13936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13933,"mutability":"mutable","name":"json","nameLocation":"31435:4:15","nodeType":"VariableDeclaration","scope":13940,"src":"31419:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13932,"name":"string","nodeType":"ElementaryTypeName","src":"31419:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13935,"mutability":"mutable","name":"key","nameLocation":"31457:3:15","nodeType":"VariableDeclaration","scope":13940,"src":"31441:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13934,"name":"string","nodeType":"ElementaryTypeName","src":"31441:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31418:43:15"},"returnParameters":{"id":13939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13938,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13940,"src":"31485:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":13937,"name":"address","nodeType":"ElementaryTypeName","src":"31485:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"31484:9:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13951,"nodeType":"FunctionDefinition","src":"31577:139:15","nodes":[],"documentation":{"id":13941,"nodeType":"StructuredDocumentation","src":"31500:72:15","text":"Parses a string of JSON data at `key` and coerces it to `address[]`."},"functionSelector":"2fce7883","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonAddressArray","nameLocation":"31586:21:15","parameters":{"id":13946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13943,"mutability":"mutable","name":"json","nameLocation":"31624:4:15","nodeType":"VariableDeclaration","scope":13951,"src":"31608:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13942,"name":"string","nodeType":"ElementaryTypeName","src":"31608:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13945,"mutability":"mutable","name":"key","nameLocation":"31646:3:15","nodeType":"VariableDeclaration","scope":13951,"src":"31630:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13944,"name":"string","nodeType":"ElementaryTypeName","src":"31630:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31607:43:15"},"returnParameters":{"id":13950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13949,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13951,"src":"31698:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":13947,"name":"address","nodeType":"ElementaryTypeName","src":"31698:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":13948,"nodeType":"ArrayTypeName","src":"31698:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"31697:18:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13961,"nodeType":"FunctionDefinition","src":"31794:95:15","nodes":[],"documentation":{"id":13952,"nodeType":"StructuredDocumentation","src":"31722:67:15","text":"Parses a string of JSON data at `key` and coerces it to `bool`."},"functionSelector":"9f86dc91","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBool","nameLocation":"31803:13:15","parameters":{"id":13957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13954,"mutability":"mutable","name":"json","nameLocation":"31833:4:15","nodeType":"VariableDeclaration","scope":13961,"src":"31817:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13953,"name":"string","nodeType":"ElementaryTypeName","src":"31817:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13956,"mutability":"mutable","name":"key","nameLocation":"31855:3:15","nodeType":"VariableDeclaration","scope":13961,"src":"31839:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13955,"name":"string","nodeType":"ElementaryTypeName","src":"31839:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31816:43:15"},"returnParameters":{"id":13960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13961,"src":"31883:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":13958,"name":"bool","nodeType":"ElementaryTypeName","src":"31883:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"31882:6:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13972,"nodeType":"FunctionDefinition","src":"31969:109:15","nodes":[],"documentation":{"id":13962,"nodeType":"StructuredDocumentation","src":"31895:69:15","text":"Parses a string of JSON data at `key` and coerces it to `bool[]`."},"functionSelector":"91f3b94f","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBoolArray","nameLocation":"31978:18:15","parameters":{"id":13967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13964,"mutability":"mutable","name":"json","nameLocation":"32013:4:15","nodeType":"VariableDeclaration","scope":13972,"src":"31997:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13963,"name":"string","nodeType":"ElementaryTypeName","src":"31997:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13966,"mutability":"mutable","name":"key","nameLocation":"32035:3:15","nodeType":"VariableDeclaration","scope":13972,"src":"32019:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13965,"name":"string","nodeType":"ElementaryTypeName","src":"32019:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"31996:43:15"},"returnParameters":{"id":13971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13972,"src":"32063:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":13968,"name":"bool","nodeType":"ElementaryTypeName","src":"32063:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":13969,"nodeType":"ArrayTypeName","src":"32063:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"32062:15:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13982,"nodeType":"FunctionDefinition","src":"32157:104:15","nodes":[],"documentation":{"id":13973,"nodeType":"StructuredDocumentation","src":"32084:68:15","text":"Parses a string of JSON data at `key` and coerces it to `bytes`."},"functionSelector":"fd921be8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes","nameLocation":"32166:14:15","parameters":{"id":13978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13975,"mutability":"mutable","name":"json","nameLocation":"32197:4:15","nodeType":"VariableDeclaration","scope":13982,"src":"32181:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13974,"name":"string","nodeType":"ElementaryTypeName","src":"32181:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13977,"mutability":"mutable","name":"key","nameLocation":"32219:3:15","nodeType":"VariableDeclaration","scope":13982,"src":"32203:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13976,"name":"string","nodeType":"ElementaryTypeName","src":"32203:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32180:43:15"},"returnParameters":{"id":13981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13980,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13982,"src":"32247:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":13979,"name":"bytes","nodeType":"ElementaryTypeName","src":"32247:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"32246:14:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":13992,"nodeType":"FunctionDefinition","src":"32342:101:15","nodes":[],"documentation":{"id":13983,"nodeType":"StructuredDocumentation","src":"32267:70:15","text":"Parses a string of JSON data at `key` and coerces it to `bytes32`."},"functionSelector":"1777e59d","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32","nameLocation":"32351:16:15","parameters":{"id":13988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13985,"mutability":"mutable","name":"json","nameLocation":"32384:4:15","nodeType":"VariableDeclaration","scope":13992,"src":"32368:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13984,"name":"string","nodeType":"ElementaryTypeName","src":"32368:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13987,"mutability":"mutable","name":"key","nameLocation":"32406:3:15","nodeType":"VariableDeclaration","scope":13992,"src":"32390:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13986,"name":"string","nodeType":"ElementaryTypeName","src":"32390:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32367:43:15"},"returnParameters":{"id":13991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":13992,"src":"32434:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":13989,"name":"bytes32","nodeType":"ElementaryTypeName","src":"32434:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"32433:9:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14003,"nodeType":"FunctionDefinition","src":"32526:139:15","nodes":[],"documentation":{"id":13993,"nodeType":"StructuredDocumentation","src":"32449:72:15","text":"Parses a string of JSON data at `key` and coerces it to `bytes32[]`."},"functionSelector":"91c75bc3","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytes32Array","nameLocation":"32535:21:15","parameters":{"id":13998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13995,"mutability":"mutable","name":"json","nameLocation":"32573:4:15","nodeType":"VariableDeclaration","scope":14003,"src":"32557:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13994,"name":"string","nodeType":"ElementaryTypeName","src":"32557:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":13997,"mutability":"mutable","name":"key","nameLocation":"32595:3:15","nodeType":"VariableDeclaration","scope":14003,"src":"32579:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":13996,"name":"string","nodeType":"ElementaryTypeName","src":"32579:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32556:43:15"},"returnParameters":{"id":14002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14001,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14003,"src":"32647:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":13999,"name":"bytes32","nodeType":"ElementaryTypeName","src":"32647:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14000,"nodeType":"ArrayTypeName","src":"32647:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"32646:18:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14014,"nodeType":"FunctionDefinition","src":"32746:111:15","nodes":[],"documentation":{"id":14004,"nodeType":"StructuredDocumentation","src":"32671:70:15","text":"Parses a string of JSON data at `key` and coerces it to `bytes[]`."},"functionSelector":"6631aa99","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonBytesArray","nameLocation":"32755:19:15","parameters":{"id":14009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14006,"mutability":"mutable","name":"json","nameLocation":"32791:4:15","nodeType":"VariableDeclaration","scope":14014,"src":"32775:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14005,"name":"string","nodeType":"ElementaryTypeName","src":"32775:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14008,"mutability":"mutable","name":"key","nameLocation":"32813:3:15","nodeType":"VariableDeclaration","scope":14014,"src":"32797:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14007,"name":"string","nodeType":"ElementaryTypeName","src":"32797:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32774:43:15"},"returnParameters":{"id":14013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14012,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14014,"src":"32841:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14010,"name":"bytes","nodeType":"ElementaryTypeName","src":"32841:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14011,"nodeType":"ArrayTypeName","src":"32841:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"32840:16:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14024,"nodeType":"FunctionDefinition","src":"32937:96:15","nodes":[],"documentation":{"id":14015,"nodeType":"StructuredDocumentation","src":"32863:69:15","text":"Parses a string of JSON data at `key` and coerces it to `int256`."},"functionSelector":"7b048ccd","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonInt","nameLocation":"32946:12:15","parameters":{"id":14020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14017,"mutability":"mutable","name":"json","nameLocation":"32975:4:15","nodeType":"VariableDeclaration","scope":14024,"src":"32959:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14016,"name":"string","nodeType":"ElementaryTypeName","src":"32959:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14019,"mutability":"mutable","name":"key","nameLocation":"32997:3:15","nodeType":"VariableDeclaration","scope":14024,"src":"32981:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14018,"name":"string","nodeType":"ElementaryTypeName","src":"32981:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"32958:43:15"},"returnParameters":{"id":14023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14024,"src":"33025:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14021,"name":"int256","nodeType":"ElementaryTypeName","src":"33025:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33024:8:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14035,"nodeType":"FunctionDefinition","src":"33115:110:15","nodes":[],"documentation":{"id":14025,"nodeType":"StructuredDocumentation","src":"33039:71:15","text":"Parses a string of JSON data at `key` and coerces it to `int256[]`."},"functionSelector":"9983c28a","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonIntArray","nameLocation":"33124:17:15","parameters":{"id":14030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14027,"mutability":"mutable","name":"json","nameLocation":"33158:4:15","nodeType":"VariableDeclaration","scope":14035,"src":"33142:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14026,"name":"string","nodeType":"ElementaryTypeName","src":"33142:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14029,"mutability":"mutable","name":"key","nameLocation":"33180:3:15","nodeType":"VariableDeclaration","scope":14035,"src":"33164:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14028,"name":"string","nodeType":"ElementaryTypeName","src":"33164:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33141:43:15"},"returnParameters":{"id":14034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14033,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14035,"src":"33208:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14031,"name":"int256","nodeType":"ElementaryTypeName","src":"33208:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14032,"nodeType":"ArrayTypeName","src":"33208:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"33207:17:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14046,"nodeType":"FunctionDefinition","src":"33290:111:15","nodes":[],"documentation":{"id":14036,"nodeType":"StructuredDocumentation","src":"33231:54:15","text":"Returns an array of all the keys in a JSON object."},"functionSelector":"213e4198","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonKeys","nameLocation":"33299:13:15","parameters":{"id":14041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14038,"mutability":"mutable","name":"json","nameLocation":"33329:4:15","nodeType":"VariableDeclaration","scope":14046,"src":"33313:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14037,"name":"string","nodeType":"ElementaryTypeName","src":"33313:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14040,"mutability":"mutable","name":"key","nameLocation":"33351:3:15","nodeType":"VariableDeclaration","scope":14046,"src":"33335:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14039,"name":"string","nodeType":"ElementaryTypeName","src":"33335:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33312:43:15"},"returnParameters":{"id":14045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14044,"mutability":"mutable","name":"keys","nameLocation":"33395:4:15","nodeType":"VariableDeclaration","scope":14046,"src":"33379:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14042,"name":"string","nodeType":"ElementaryTypeName","src":"33379:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14043,"nodeType":"ArrayTypeName","src":"33379:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"33378:22:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14056,"nodeType":"FunctionDefinition","src":"33481:106:15","nodes":[],"documentation":{"id":14047,"nodeType":"StructuredDocumentation","src":"33407:69:15","text":"Parses a string of JSON data at `key` and coerces it to `string`."},"functionSelector":"49c4fac8","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonString","nameLocation":"33490:15:15","parameters":{"id":14052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14049,"mutability":"mutable","name":"json","nameLocation":"33522:4:15","nodeType":"VariableDeclaration","scope":14056,"src":"33506:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14048,"name":"string","nodeType":"ElementaryTypeName","src":"33506:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14051,"mutability":"mutable","name":"key","nameLocation":"33544:3:15","nodeType":"VariableDeclaration","scope":14056,"src":"33528:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14050,"name":"string","nodeType":"ElementaryTypeName","src":"33528:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33505:43:15"},"returnParameters":{"id":14055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14056,"src":"33572:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14053,"name":"string","nodeType":"ElementaryTypeName","src":"33572:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33571:15:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14067,"nodeType":"FunctionDefinition","src":"33669:113:15","nodes":[],"documentation":{"id":14057,"nodeType":"StructuredDocumentation","src":"33593:71:15","text":"Parses a string of JSON data at `key` and coerces it to `string[]`."},"functionSelector":"498fdcf4","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonStringArray","nameLocation":"33678:20:15","parameters":{"id":14062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14059,"mutability":"mutable","name":"json","nameLocation":"33715:4:15","nodeType":"VariableDeclaration","scope":14067,"src":"33699:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14058,"name":"string","nodeType":"ElementaryTypeName","src":"33699:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14061,"mutability":"mutable","name":"key","nameLocation":"33737:3:15","nodeType":"VariableDeclaration","scope":14067,"src":"33721:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14060,"name":"string","nodeType":"ElementaryTypeName","src":"33721:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33698:43:15"},"returnParameters":{"id":14066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14067,"src":"33765:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14063,"name":"string","nodeType":"ElementaryTypeName","src":"33765:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14064,"nodeType":"ArrayTypeName","src":"33765:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"33764:17:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14079,"nodeType":"FunctionDefinition","src":"33899:165:15","nodes":[],"documentation":{"id":14068,"nodeType":"StructuredDocumentation","src":"33788:106:15","text":"Parses a string of JSON data at `key` and coerces it to type array corresponding to `typeDescription`."},"functionSelector":"0175d535","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonTypeArray","nameLocation":"33908:18:15","parameters":{"id":14075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14070,"mutability":"mutable","name":"json","nameLocation":"33943:4:15","nodeType":"VariableDeclaration","scope":14079,"src":"33927:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14069,"name":"string","nodeType":"ElementaryTypeName","src":"33927:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14072,"mutability":"mutable","name":"key","nameLocation":"33965:3:15","nodeType":"VariableDeclaration","scope":14079,"src":"33949:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14071,"name":"string","nodeType":"ElementaryTypeName","src":"33949:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14074,"mutability":"mutable","name":"typeDescription","nameLocation":"33986:15:15","nodeType":"VariableDeclaration","scope":14079,"src":"33970:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14073,"name":"string","nodeType":"ElementaryTypeName","src":"33970:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"33926:76:15"},"returnParameters":{"id":14078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14077,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14079,"src":"34050:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14076,"name":"bytes","nodeType":"ElementaryTypeName","src":"34050:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"34049:14:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14089,"nodeType":"FunctionDefinition","src":"34166:139:15","nodes":[],"documentation":{"id":14080,"nodeType":"StructuredDocumentation","src":"34070:91:15","text":"Parses a string of JSON data and coerces it to type corresponding to `typeDescription`."},"functionSelector":"a9da313b","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonType","nameLocation":"34175:13:15","parameters":{"id":14085,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14082,"mutability":"mutable","name":"json","nameLocation":"34205:4:15","nodeType":"VariableDeclaration","scope":14089,"src":"34189:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14081,"name":"string","nodeType":"ElementaryTypeName","src":"34189:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14084,"mutability":"mutable","name":"typeDescription","nameLocation":"34227:15:15","nodeType":"VariableDeclaration","scope":14089,"src":"34211:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14083,"name":"string","nodeType":"ElementaryTypeName","src":"34211:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34188:55:15"},"returnParameters":{"id":14088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14087,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14089,"src":"34291:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14086,"name":"bytes","nodeType":"ElementaryTypeName","src":"34291:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"34290:14:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14101,"nodeType":"FunctionDefinition","src":"34416:160:15","nodes":[],"documentation":{"id":14090,"nodeType":"StructuredDocumentation","src":"34311:100:15","text":"Parses a string of JSON data at `key` and coerces it to type corresponding to `typeDescription`."},"functionSelector":"e3f5ae33","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonType","nameLocation":"34425:13:15","parameters":{"id":14097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14092,"mutability":"mutable","name":"json","nameLocation":"34455:4:15","nodeType":"VariableDeclaration","scope":14101,"src":"34439:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14091,"name":"string","nodeType":"ElementaryTypeName","src":"34439:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14094,"mutability":"mutable","name":"key","nameLocation":"34477:3:15","nodeType":"VariableDeclaration","scope":14101,"src":"34461:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14093,"name":"string","nodeType":"ElementaryTypeName","src":"34461:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14096,"mutability":"mutable","name":"typeDescription","nameLocation":"34498:15:15","nodeType":"VariableDeclaration","scope":14101,"src":"34482:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14095,"name":"string","nodeType":"ElementaryTypeName","src":"34482:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34438:76:15"},"returnParameters":{"id":14100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14101,"src":"34562:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14098,"name":"bytes","nodeType":"ElementaryTypeName","src":"34562:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"34561:14:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14111,"nodeType":"FunctionDefinition","src":"34657:98:15","nodes":[],"documentation":{"id":14102,"nodeType":"StructuredDocumentation","src":"34582:70:15","text":"Parses a string of JSON data at `key` and coerces it to `uint256`."},"functionSelector":"addde2b6","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUint","nameLocation":"34666:13:15","parameters":{"id":14107,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14104,"mutability":"mutable","name":"json","nameLocation":"34696:4:15","nodeType":"VariableDeclaration","scope":14111,"src":"34680:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14103,"name":"string","nodeType":"ElementaryTypeName","src":"34680:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14106,"mutability":"mutable","name":"key","nameLocation":"34718:3:15","nodeType":"VariableDeclaration","scope":14111,"src":"34702:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14105,"name":"string","nodeType":"ElementaryTypeName","src":"34702:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34679:43:15"},"returnParameters":{"id":14110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14109,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14111,"src":"34746:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14108,"name":"uint256","nodeType":"ElementaryTypeName","src":"34746:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34745:9:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14122,"nodeType":"FunctionDefinition","src":"34838:112:15","nodes":[],"documentation":{"id":14112,"nodeType":"StructuredDocumentation","src":"34761:72:15","text":"Parses a string of JSON data at `key` and coerces it to `uint256[]`."},"functionSelector":"522074ab","implemented":false,"kind":"function","modifiers":[],"name":"parseJsonUintArray","nameLocation":"34847:18:15","parameters":{"id":14117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14114,"mutability":"mutable","name":"json","nameLocation":"34882:4:15","nodeType":"VariableDeclaration","scope":14122,"src":"34866:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14113,"name":"string","nodeType":"ElementaryTypeName","src":"34866:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14116,"mutability":"mutable","name":"key","nameLocation":"34904:3:15","nodeType":"VariableDeclaration","scope":14122,"src":"34888:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14115,"name":"string","nodeType":"ElementaryTypeName","src":"34888:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"34865:43:15"},"returnParameters":{"id":14121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14120,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14122,"src":"34932:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14118,"name":"uint256","nodeType":"ElementaryTypeName","src":"34932:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14119,"nodeType":"ArrayTypeName","src":"34932:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"34931:18:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14130,"nodeType":"FunctionDefinition","src":"34991:93:15","nodes":[],"documentation":{"id":14123,"nodeType":"StructuredDocumentation","src":"34956:30:15","text":"ABI-encodes a JSON object."},"functionSelector":"6a82600a","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"35000:9:15","parameters":{"id":14126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14125,"mutability":"mutable","name":"json","nameLocation":"35026:4:15","nodeType":"VariableDeclaration","scope":14130,"src":"35010:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14124,"name":"string","nodeType":"ElementaryTypeName","src":"35010:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35009:22:15"},"returnParameters":{"id":14129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14128,"mutability":"mutable","name":"abiEncodedData","nameLocation":"35068:14:15","nodeType":"VariableDeclaration","scope":14130,"src":"35055:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14127,"name":"bytes","nodeType":"ElementaryTypeName","src":"35055:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"35054:29:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14140,"nodeType":"FunctionDefinition","src":"35134:114:15","nodes":[],"documentation":{"id":14131,"nodeType":"StructuredDocumentation","src":"35090:39:15","text":"ABI-encodes a JSON object at `key`."},"functionSelector":"85940ef1","implemented":false,"kind":"function","modifiers":[],"name":"parseJson","nameLocation":"35143:9:15","parameters":{"id":14136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14133,"mutability":"mutable","name":"json","nameLocation":"35169:4:15","nodeType":"VariableDeclaration","scope":14140,"src":"35153:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14132,"name":"string","nodeType":"ElementaryTypeName","src":"35153:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14135,"mutability":"mutable","name":"key","nameLocation":"35191:3:15","nodeType":"VariableDeclaration","scope":14140,"src":"35175:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14134,"name":"string","nodeType":"ElementaryTypeName","src":"35175:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35152:43:15"},"returnParameters":{"id":14139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14138,"mutability":"mutable","name":"abiEncodedData","nameLocation":"35232:14:15","nodeType":"VariableDeclaration","scope":14140,"src":"35219:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14137,"name":"bytes","nodeType":"ElementaryTypeName","src":"35219:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"35218:29:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14152,"nodeType":"FunctionDefinition","src":"35283:148:15","nodes":[],"documentation":{"id":14141,"nodeType":"StructuredDocumentation","src":"35254:24:15","text":"See `serializeJson`."},"functionSelector":"972c6062","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"35292:16:15","parameters":{"id":14148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14143,"mutability":"mutable","name":"objectKey","nameLocation":"35325:9:15","nodeType":"VariableDeclaration","scope":14152,"src":"35309:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14142,"name":"string","nodeType":"ElementaryTypeName","src":"35309:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14145,"mutability":"mutable","name":"valueKey","nameLocation":"35352:8:15","nodeType":"VariableDeclaration","scope":14152,"src":"35336:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14144,"name":"string","nodeType":"ElementaryTypeName","src":"35336:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14147,"mutability":"mutable","name":"value","nameLocation":"35370:5:15","nodeType":"VariableDeclaration","scope":14152,"src":"35362:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14146,"name":"address","nodeType":"ElementaryTypeName","src":"35362:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"35308:68:15"},"returnParameters":{"id":14151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14150,"mutability":"mutable","name":"json","nameLocation":"35425:4:15","nodeType":"VariableDeclaration","scope":14152,"src":"35411:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14149,"name":"string","nodeType":"ElementaryTypeName","src":"35411:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35410:20:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14165,"nodeType":"FunctionDefinition","src":"35466:160:15","nodes":[],"documentation":{"id":14153,"nodeType":"StructuredDocumentation","src":"35437:24:15","text":"See `serializeJson`."},"functionSelector":"1e356e1a","implemented":false,"kind":"function","modifiers":[],"name":"serializeAddress","nameLocation":"35475:16:15","parameters":{"id":14161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14155,"mutability":"mutable","name":"objectKey","nameLocation":"35508:9:15","nodeType":"VariableDeclaration","scope":14165,"src":"35492:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14154,"name":"string","nodeType":"ElementaryTypeName","src":"35492:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14157,"mutability":"mutable","name":"valueKey","nameLocation":"35535:8:15","nodeType":"VariableDeclaration","scope":14165,"src":"35519:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14156,"name":"string","nodeType":"ElementaryTypeName","src":"35519:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14160,"mutability":"mutable","name":"values","nameLocation":"35564:6:15","nodeType":"VariableDeclaration","scope":14165,"src":"35545:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14158,"name":"address","nodeType":"ElementaryTypeName","src":"35545:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14159,"nodeType":"ArrayTypeName","src":"35545:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"35491:80:15"},"returnParameters":{"id":14164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14163,"mutability":"mutable","name":"json","nameLocation":"35620:4:15","nodeType":"VariableDeclaration","scope":14165,"src":"35606:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14162,"name":"string","nodeType":"ElementaryTypeName","src":"35606:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35605:20:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14177,"nodeType":"FunctionDefinition","src":"35661:142:15","nodes":[],"documentation":{"id":14166,"nodeType":"StructuredDocumentation","src":"35632:24:15","text":"See `serializeJson`."},"functionSelector":"ac22e971","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"35670:13:15","parameters":{"id":14173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14168,"mutability":"mutable","name":"objectKey","nameLocation":"35700:9:15","nodeType":"VariableDeclaration","scope":14177,"src":"35684:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14167,"name":"string","nodeType":"ElementaryTypeName","src":"35684:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14170,"mutability":"mutable","name":"valueKey","nameLocation":"35727:8:15","nodeType":"VariableDeclaration","scope":14177,"src":"35711:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14169,"name":"string","nodeType":"ElementaryTypeName","src":"35711:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14172,"mutability":"mutable","name":"value","nameLocation":"35742:5:15","nodeType":"VariableDeclaration","scope":14177,"src":"35737:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14171,"name":"bool","nodeType":"ElementaryTypeName","src":"35737:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"35683:65:15"},"returnParameters":{"id":14176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14175,"mutability":"mutable","name":"json","nameLocation":"35797:4:15","nodeType":"VariableDeclaration","scope":14177,"src":"35783:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14174,"name":"string","nodeType":"ElementaryTypeName","src":"35783:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35782:20:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14190,"nodeType":"FunctionDefinition","src":"35838:154:15","nodes":[],"documentation":{"id":14178,"nodeType":"StructuredDocumentation","src":"35809:24:15","text":"See `serializeJson`."},"functionSelector":"92925aa1","implemented":false,"kind":"function","modifiers":[],"name":"serializeBool","nameLocation":"35847:13:15","parameters":{"id":14186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14180,"mutability":"mutable","name":"objectKey","nameLocation":"35877:9:15","nodeType":"VariableDeclaration","scope":14190,"src":"35861:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14179,"name":"string","nodeType":"ElementaryTypeName","src":"35861:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14182,"mutability":"mutable","name":"valueKey","nameLocation":"35904:8:15","nodeType":"VariableDeclaration","scope":14190,"src":"35888:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14181,"name":"string","nodeType":"ElementaryTypeName","src":"35888:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14185,"mutability":"mutable","name":"values","nameLocation":"35930:6:15","nodeType":"VariableDeclaration","scope":14190,"src":"35914:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14183,"name":"bool","nodeType":"ElementaryTypeName","src":"35914:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14184,"nodeType":"ArrayTypeName","src":"35914:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"35860:77:15"},"returnParameters":{"id":14189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14188,"mutability":"mutable","name":"json","nameLocation":"35986:4:15","nodeType":"VariableDeclaration","scope":14190,"src":"35972:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14187,"name":"string","nodeType":"ElementaryTypeName","src":"35972:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"35971:20:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14202,"nodeType":"FunctionDefinition","src":"36027:148:15","nodes":[],"documentation":{"id":14191,"nodeType":"StructuredDocumentation","src":"35998:24:15","text":"See `serializeJson`."},"functionSelector":"2d812b44","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"36036:16:15","parameters":{"id":14198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14193,"mutability":"mutable","name":"objectKey","nameLocation":"36069:9:15","nodeType":"VariableDeclaration","scope":14202,"src":"36053:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14192,"name":"string","nodeType":"ElementaryTypeName","src":"36053:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14195,"mutability":"mutable","name":"valueKey","nameLocation":"36096:8:15","nodeType":"VariableDeclaration","scope":14202,"src":"36080:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14194,"name":"string","nodeType":"ElementaryTypeName","src":"36080:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14197,"mutability":"mutable","name":"value","nameLocation":"36114:5:15","nodeType":"VariableDeclaration","scope":14202,"src":"36106:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14196,"name":"bytes32","nodeType":"ElementaryTypeName","src":"36106:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"36052:68:15"},"returnParameters":{"id":14201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14200,"mutability":"mutable","name":"json","nameLocation":"36169:4:15","nodeType":"VariableDeclaration","scope":14202,"src":"36155:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14199,"name":"string","nodeType":"ElementaryTypeName","src":"36155:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36154:20:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14215,"nodeType":"FunctionDefinition","src":"36210:160:15","nodes":[],"documentation":{"id":14203,"nodeType":"StructuredDocumentation","src":"36181:24:15","text":"See `serializeJson`."},"functionSelector":"201e43e2","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes32","nameLocation":"36219:16:15","parameters":{"id":14211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14205,"mutability":"mutable","name":"objectKey","nameLocation":"36252:9:15","nodeType":"VariableDeclaration","scope":14215,"src":"36236:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14204,"name":"string","nodeType":"ElementaryTypeName","src":"36236:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14207,"mutability":"mutable","name":"valueKey","nameLocation":"36279:8:15","nodeType":"VariableDeclaration","scope":14215,"src":"36263:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14206,"name":"string","nodeType":"ElementaryTypeName","src":"36263:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14210,"mutability":"mutable","name":"values","nameLocation":"36308:6:15","nodeType":"VariableDeclaration","scope":14215,"src":"36289:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14208,"name":"bytes32","nodeType":"ElementaryTypeName","src":"36289:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14209,"nodeType":"ArrayTypeName","src":"36289:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"36235:80:15"},"returnParameters":{"id":14214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14213,"mutability":"mutable","name":"json","nameLocation":"36364:4:15","nodeType":"VariableDeclaration","scope":14215,"src":"36350:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14212,"name":"string","nodeType":"ElementaryTypeName","src":"36350:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36349:20:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14227,"nodeType":"FunctionDefinition","src":"36405:153:15","nodes":[],"documentation":{"id":14216,"nodeType":"StructuredDocumentation","src":"36376:24:15","text":"See `serializeJson`."},"functionSelector":"f21d52c7","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"36414:14:15","parameters":{"id":14223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14218,"mutability":"mutable","name":"objectKey","nameLocation":"36445:9:15","nodeType":"VariableDeclaration","scope":14227,"src":"36429:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14217,"name":"string","nodeType":"ElementaryTypeName","src":"36429:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14220,"mutability":"mutable","name":"valueKey","nameLocation":"36472:8:15","nodeType":"VariableDeclaration","scope":14227,"src":"36456:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14219,"name":"string","nodeType":"ElementaryTypeName","src":"36456:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14222,"mutability":"mutable","name":"value","nameLocation":"36497:5:15","nodeType":"VariableDeclaration","scope":14227,"src":"36482:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14221,"name":"bytes","nodeType":"ElementaryTypeName","src":"36482:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"36428:75:15"},"returnParameters":{"id":14226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14225,"mutability":"mutable","name":"json","nameLocation":"36552:4:15","nodeType":"VariableDeclaration","scope":14227,"src":"36538:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14224,"name":"string","nodeType":"ElementaryTypeName","src":"36538:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36537:20:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14240,"nodeType":"FunctionDefinition","src":"36593:156:15","nodes":[],"documentation":{"id":14228,"nodeType":"StructuredDocumentation","src":"36564:24:15","text":"See `serializeJson`."},"functionSelector":"9884b232","implemented":false,"kind":"function","modifiers":[],"name":"serializeBytes","nameLocation":"36602:14:15","parameters":{"id":14236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14230,"mutability":"mutable","name":"objectKey","nameLocation":"36633:9:15","nodeType":"VariableDeclaration","scope":14240,"src":"36617:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14229,"name":"string","nodeType":"ElementaryTypeName","src":"36617:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14232,"mutability":"mutable","name":"valueKey","nameLocation":"36660:8:15","nodeType":"VariableDeclaration","scope":14240,"src":"36644:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14231,"name":"string","nodeType":"ElementaryTypeName","src":"36644:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14235,"mutability":"mutable","name":"values","nameLocation":"36687:6:15","nodeType":"VariableDeclaration","scope":14240,"src":"36670:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":14233,"name":"bytes","nodeType":"ElementaryTypeName","src":"36670:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":14234,"nodeType":"ArrayTypeName","src":"36670:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"36616:78:15"},"returnParameters":{"id":14239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14238,"mutability":"mutable","name":"json","nameLocation":"36743:4:15","nodeType":"VariableDeclaration","scope":14240,"src":"36729:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14237,"name":"string","nodeType":"ElementaryTypeName","src":"36729:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36728:20:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14252,"nodeType":"FunctionDefinition","src":"36784:143:15","nodes":[],"documentation":{"id":14241,"nodeType":"StructuredDocumentation","src":"36755:24:15","text":"See `serializeJson`."},"functionSelector":"3f33db60","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"36793:12:15","parameters":{"id":14248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14243,"mutability":"mutable","name":"objectKey","nameLocation":"36822:9:15","nodeType":"VariableDeclaration","scope":14252,"src":"36806:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14242,"name":"string","nodeType":"ElementaryTypeName","src":"36806:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14245,"mutability":"mutable","name":"valueKey","nameLocation":"36849:8:15","nodeType":"VariableDeclaration","scope":14252,"src":"36833:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14244,"name":"string","nodeType":"ElementaryTypeName","src":"36833:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14247,"mutability":"mutable","name":"value","nameLocation":"36866:5:15","nodeType":"VariableDeclaration","scope":14252,"src":"36859:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14246,"name":"int256","nodeType":"ElementaryTypeName","src":"36859:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"36805:67:15"},"returnParameters":{"id":14251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14250,"mutability":"mutable","name":"json","nameLocation":"36921:4:15","nodeType":"VariableDeclaration","scope":14252,"src":"36907:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14249,"name":"string","nodeType":"ElementaryTypeName","src":"36907:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"36906:20:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14265,"nodeType":"FunctionDefinition","src":"36962:155:15","nodes":[],"documentation":{"id":14253,"nodeType":"StructuredDocumentation","src":"36933:24:15","text":"See `serializeJson`."},"functionSelector":"7676e127","implemented":false,"kind":"function","modifiers":[],"name":"serializeInt","nameLocation":"36971:12:15","parameters":{"id":14261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14255,"mutability":"mutable","name":"objectKey","nameLocation":"37000:9:15","nodeType":"VariableDeclaration","scope":14265,"src":"36984:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14254,"name":"string","nodeType":"ElementaryTypeName","src":"36984:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14257,"mutability":"mutable","name":"valueKey","nameLocation":"37027:8:15","nodeType":"VariableDeclaration","scope":14265,"src":"37011:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14256,"name":"string","nodeType":"ElementaryTypeName","src":"37011:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14260,"mutability":"mutable","name":"values","nameLocation":"37055:6:15","nodeType":"VariableDeclaration","scope":14265,"src":"37037:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14258,"name":"int256","nodeType":"ElementaryTypeName","src":"37037:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14259,"nodeType":"ArrayTypeName","src":"37037:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"36983:79:15"},"returnParameters":{"id":14264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14263,"mutability":"mutable","name":"json","nameLocation":"37111:4:15","nodeType":"VariableDeclaration","scope":14265,"src":"37097:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14262,"name":"string","nodeType":"ElementaryTypeName","src":"37097:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37096:20:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14275,"nodeType":"FunctionDefinition","src":"37314:111:15","nodes":[],"documentation":{"id":14266,"nodeType":"StructuredDocumentation","src":"37123:186:15","text":"Serializes a key and value to a JSON object stored in-memory that can be later written to a file.\n Returns the stringified version of the specific JSON file up to that moment."},"functionSelector":"9b3358b0","implemented":false,"kind":"function","modifiers":[],"name":"serializeJson","nameLocation":"37323:13:15","parameters":{"id":14271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14268,"mutability":"mutable","name":"objectKey","nameLocation":"37353:9:15","nodeType":"VariableDeclaration","scope":14275,"src":"37337:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14267,"name":"string","nodeType":"ElementaryTypeName","src":"37337:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14270,"mutability":"mutable","name":"value","nameLocation":"37380:5:15","nodeType":"VariableDeclaration","scope":14275,"src":"37364:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14269,"name":"string","nodeType":"ElementaryTypeName","src":"37364:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37336:50:15"},"returnParameters":{"id":14274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14273,"mutability":"mutable","name":"json","nameLocation":"37419:4:15","nodeType":"VariableDeclaration","scope":14275,"src":"37405:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14272,"name":"string","nodeType":"ElementaryTypeName","src":"37405:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37404:20:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14285,"nodeType":"FunctionDefinition","src":"37460:149:15","nodes":[],"documentation":{"id":14276,"nodeType":"StructuredDocumentation","src":"37431:24:15","text":"See `serializeJson`."},"functionSelector":"6d4f96a6","implemented":false,"kind":"function","modifiers":[],"name":"serializeJsonType","nameLocation":"37469:17:15","parameters":{"id":14281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14278,"mutability":"mutable","name":"typeDescription","nameLocation":"37503:15:15","nodeType":"VariableDeclaration","scope":14285,"src":"37487:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14277,"name":"string","nodeType":"ElementaryTypeName","src":"37487:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14280,"mutability":"mutable","name":"value","nameLocation":"37535:5:15","nodeType":"VariableDeclaration","scope":14285,"src":"37520:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14279,"name":"bytes","nodeType":"ElementaryTypeName","src":"37520:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"37486:55:15"},"returnParameters":{"id":14284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14283,"mutability":"mutable","name":"json","nameLocation":"37603:4:15","nodeType":"VariableDeclaration","scope":14285,"src":"37589:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14282,"name":"string","nodeType":"ElementaryTypeName","src":"37589:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37588:20:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14299,"nodeType":"FunctionDefinition","src":"37644:211:15","nodes":[],"documentation":{"id":14286,"nodeType":"StructuredDocumentation","src":"37615:24:15","text":"See `serializeJson`."},"functionSelector":"6f93bccb","implemented":false,"kind":"function","modifiers":[],"name":"serializeJsonType","nameLocation":"37653:17:15","parameters":{"id":14295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14288,"mutability":"mutable","name":"objectKey","nameLocation":"37696:9:15","nodeType":"VariableDeclaration","scope":14299,"src":"37680:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14287,"name":"string","nodeType":"ElementaryTypeName","src":"37680:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14290,"mutability":"mutable","name":"valueKey","nameLocation":"37731:8:15","nodeType":"VariableDeclaration","scope":14299,"src":"37715:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14289,"name":"string","nodeType":"ElementaryTypeName","src":"37715:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14292,"mutability":"mutable","name":"typeDescription","nameLocation":"37765:15:15","nodeType":"VariableDeclaration","scope":14299,"src":"37749:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14291,"name":"string","nodeType":"ElementaryTypeName","src":"37749:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14294,"mutability":"mutable","name":"value","nameLocation":"37805:5:15","nodeType":"VariableDeclaration","scope":14299,"src":"37790:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14293,"name":"bytes","nodeType":"ElementaryTypeName","src":"37790:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"37670:146:15"},"returnParameters":{"id":14298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14297,"mutability":"mutable","name":"json","nameLocation":"37849:4:15","nodeType":"VariableDeclaration","scope":14299,"src":"37835:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14296,"name":"string","nodeType":"ElementaryTypeName","src":"37835:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37834:20:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14311,"nodeType":"FunctionDefinition","src":"37890:155:15","nodes":[],"documentation":{"id":14300,"nodeType":"StructuredDocumentation","src":"37861:24:15","text":"See `serializeJson`."},"functionSelector":"88da6d35","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"37899:15:15","parameters":{"id":14307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14302,"mutability":"mutable","name":"objectKey","nameLocation":"37931:9:15","nodeType":"VariableDeclaration","scope":14311,"src":"37915:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14301,"name":"string","nodeType":"ElementaryTypeName","src":"37915:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14304,"mutability":"mutable","name":"valueKey","nameLocation":"37958:8:15","nodeType":"VariableDeclaration","scope":14311,"src":"37942:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14303,"name":"string","nodeType":"ElementaryTypeName","src":"37942:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14306,"mutability":"mutable","name":"value","nameLocation":"37984:5:15","nodeType":"VariableDeclaration","scope":14311,"src":"37968:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14305,"name":"string","nodeType":"ElementaryTypeName","src":"37968:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"37914:76:15"},"returnParameters":{"id":14310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14309,"mutability":"mutable","name":"json","nameLocation":"38039:4:15","nodeType":"VariableDeclaration","scope":14311,"src":"38025:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14308,"name":"string","nodeType":"ElementaryTypeName","src":"38025:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38024:20:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14324,"nodeType":"FunctionDefinition","src":"38080:158:15","nodes":[],"documentation":{"id":14312,"nodeType":"StructuredDocumentation","src":"38051:24:15","text":"See `serializeJson`."},"functionSelector":"561cd6f3","implemented":false,"kind":"function","modifiers":[],"name":"serializeString","nameLocation":"38089:15:15","parameters":{"id":14320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14314,"mutability":"mutable","name":"objectKey","nameLocation":"38121:9:15","nodeType":"VariableDeclaration","scope":14324,"src":"38105:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14313,"name":"string","nodeType":"ElementaryTypeName","src":"38105:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14316,"mutability":"mutable","name":"valueKey","nameLocation":"38148:8:15","nodeType":"VariableDeclaration","scope":14324,"src":"38132:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14315,"name":"string","nodeType":"ElementaryTypeName","src":"38132:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14319,"mutability":"mutable","name":"values","nameLocation":"38176:6:15","nodeType":"VariableDeclaration","scope":14324,"src":"38158:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14317,"name":"string","nodeType":"ElementaryTypeName","src":"38158:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14318,"nodeType":"ArrayTypeName","src":"38158:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"38104:79:15"},"returnParameters":{"id":14323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14322,"mutability":"mutable","name":"json","nameLocation":"38232:4:15","nodeType":"VariableDeclaration","scope":14324,"src":"38218:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14321,"name":"string","nodeType":"ElementaryTypeName","src":"38218:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38217:20:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14336,"nodeType":"FunctionDefinition","src":"38273:150:15","nodes":[],"documentation":{"id":14325,"nodeType":"StructuredDocumentation","src":"38244:24:15","text":"See `serializeJson`."},"functionSelector":"ae5a2ae8","implemented":false,"kind":"function","modifiers":[],"name":"serializeUintToHex","nameLocation":"38282:18:15","parameters":{"id":14332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14327,"mutability":"mutable","name":"objectKey","nameLocation":"38317:9:15","nodeType":"VariableDeclaration","scope":14336,"src":"38301:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14326,"name":"string","nodeType":"ElementaryTypeName","src":"38301:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14329,"mutability":"mutable","name":"valueKey","nameLocation":"38344:8:15","nodeType":"VariableDeclaration","scope":14336,"src":"38328:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14328,"name":"string","nodeType":"ElementaryTypeName","src":"38328:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14331,"mutability":"mutable","name":"value","nameLocation":"38362:5:15","nodeType":"VariableDeclaration","scope":14336,"src":"38354:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14330,"name":"uint256","nodeType":"ElementaryTypeName","src":"38354:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"38300:68:15"},"returnParameters":{"id":14335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14334,"mutability":"mutable","name":"json","nameLocation":"38417:4:15","nodeType":"VariableDeclaration","scope":14336,"src":"38403:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14333,"name":"string","nodeType":"ElementaryTypeName","src":"38403:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38402:20:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14348,"nodeType":"FunctionDefinition","src":"38458:145:15","nodes":[],"documentation":{"id":14337,"nodeType":"StructuredDocumentation","src":"38429:24:15","text":"See `serializeJson`."},"functionSelector":"129e9002","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"38467:13:15","parameters":{"id":14344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14339,"mutability":"mutable","name":"objectKey","nameLocation":"38497:9:15","nodeType":"VariableDeclaration","scope":14348,"src":"38481:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14338,"name":"string","nodeType":"ElementaryTypeName","src":"38481:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14341,"mutability":"mutable","name":"valueKey","nameLocation":"38524:8:15","nodeType":"VariableDeclaration","scope":14348,"src":"38508:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14340,"name":"string","nodeType":"ElementaryTypeName","src":"38508:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14343,"mutability":"mutable","name":"value","nameLocation":"38542:5:15","nodeType":"VariableDeclaration","scope":14348,"src":"38534:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14342,"name":"uint256","nodeType":"ElementaryTypeName","src":"38534:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"38480:68:15"},"returnParameters":{"id":14347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14346,"mutability":"mutable","name":"json","nameLocation":"38597:4:15","nodeType":"VariableDeclaration","scope":14348,"src":"38583:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14345,"name":"string","nodeType":"ElementaryTypeName","src":"38583:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38582:20:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14361,"nodeType":"FunctionDefinition","src":"38638:157:15","nodes":[],"documentation":{"id":14349,"nodeType":"StructuredDocumentation","src":"38609:24:15","text":"See `serializeJson`."},"functionSelector":"fee9a469","implemented":false,"kind":"function","modifiers":[],"name":"serializeUint","nameLocation":"38647:13:15","parameters":{"id":14357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14351,"mutability":"mutable","name":"objectKey","nameLocation":"38677:9:15","nodeType":"VariableDeclaration","scope":14361,"src":"38661:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14350,"name":"string","nodeType":"ElementaryTypeName","src":"38661:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14353,"mutability":"mutable","name":"valueKey","nameLocation":"38704:8:15","nodeType":"VariableDeclaration","scope":14361,"src":"38688:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14352,"name":"string","nodeType":"ElementaryTypeName","src":"38688:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14356,"mutability":"mutable","name":"values","nameLocation":"38733:6:15","nodeType":"VariableDeclaration","scope":14361,"src":"38714:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14354,"name":"uint256","nodeType":"ElementaryTypeName","src":"38714:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14355,"nodeType":"ArrayTypeName","src":"38714:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"38660:80:15"},"returnParameters":{"id":14360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14359,"mutability":"mutable","name":"json","nameLocation":"38789:4:15","nodeType":"VariableDeclaration","scope":14361,"src":"38775:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14358,"name":"string","nodeType":"ElementaryTypeName","src":"38775:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38774:20:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14369,"nodeType":"FunctionDefinition","src":"38895:72:15","nodes":[],"documentation":{"id":14362,"nodeType":"StructuredDocumentation","src":"38801:89:15","text":"Write a serialized JSON object to a file. If the file exists, it will be overwritten."},"functionSelector":"e23cd19f","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"38904:9:15","parameters":{"id":14367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14364,"mutability":"mutable","name":"json","nameLocation":"38930:4:15","nodeType":"VariableDeclaration","scope":14369,"src":"38914:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14363,"name":"string","nodeType":"ElementaryTypeName","src":"38914:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14366,"mutability":"mutable","name":"path","nameLocation":"38952:4:15","nodeType":"VariableDeclaration","scope":14369,"src":"38936:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14365,"name":"string","nodeType":"ElementaryTypeName","src":"38936:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"38913:44:15"},"returnParameters":{"id":14368,"nodeType":"ParameterList","parameters":[],"src":"38966:0:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14379,"nodeType":"FunctionDefinition","src":"39193:98:15","nodes":[],"documentation":{"id":14370,"nodeType":"StructuredDocumentation","src":"38973:215:15","text":"Write a serialized JSON object to an **existing** JSON file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a JSON file, without having to parse the entire thing."},"functionSelector":"35d6ad46","implemented":false,"kind":"function","modifiers":[],"name":"writeJson","nameLocation":"39202:9:15","parameters":{"id":14377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14372,"mutability":"mutable","name":"json","nameLocation":"39228:4:15","nodeType":"VariableDeclaration","scope":14379,"src":"39212:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14371,"name":"string","nodeType":"ElementaryTypeName","src":"39212:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14374,"mutability":"mutable","name":"path","nameLocation":"39250:4:15","nodeType":"VariableDeclaration","scope":14379,"src":"39234:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14373,"name":"string","nodeType":"ElementaryTypeName","src":"39234:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14376,"mutability":"mutable","name":"valueKey","nameLocation":"39272:8:15","nodeType":"VariableDeclaration","scope":14379,"src":"39256:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14375,"name":"string","nodeType":"ElementaryTypeName","src":"39256:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"39211:70:15"},"returnParameters":{"id":14378,"nodeType":"ParameterList","parameters":[],"src":"39290:0:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14385,"nodeType":"FunctionDefinition","src":"39402:63:15","nodes":[],"documentation":{"id":14380,"nodeType":"StructuredDocumentation","src":"39333:64:15","text":"Takes a signed transaction and broadcasts it to the network."},"functionSelector":"8c0c72e0","implemented":false,"kind":"function","modifiers":[],"name":"broadcastRawTransaction","nameLocation":"39411:23:15","parameters":{"id":14383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14382,"mutability":"mutable","name":"data","nameLocation":"39450:4:15","nodeType":"VariableDeclaration","scope":14385,"src":"39435:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14381,"name":"bytes","nodeType":"ElementaryTypeName","src":"39435:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"39434:21:15"},"returnParameters":{"id":14384,"nodeType":"ParameterList","parameters":[],"src":"39464:0:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14389,"nodeType":"FunctionDefinition","src":"39968:30:15","nodes":[],"documentation":{"id":14386,"nodeType":"StructuredDocumentation","src":"39471:492:15","text":"Has the next call (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"afc98040","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"39977:9:15","parameters":{"id":14387,"nodeType":"ParameterList","parameters":[],"src":"39986:2:15"},"returnParameters":{"id":14388,"nodeType":"ParameterList","parameters":[],"src":"39997:0:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14395,"nodeType":"FunctionDefinition","src":"40168:44:15","nodes":[],"documentation":{"id":14390,"nodeType":"StructuredDocumentation","src":"40004:159:15","text":"Has the next call (at this call depth only) create a transaction with the address provided\n as the sender that can later be signed and sent onchain."},"functionSelector":"e6962cdb","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"40177:9:15","parameters":{"id":14393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14392,"mutability":"mutable","name":"signer","nameLocation":"40195:6:15","nodeType":"VariableDeclaration","scope":14395,"src":"40187:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14391,"name":"address","nodeType":"ElementaryTypeName","src":"40187:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"40186:16:15"},"returnParameters":{"id":14394,"nodeType":"ParameterList","parameters":[],"src":"40211:0:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14401,"nodeType":"FunctionDefinition","src":"40386:48:15","nodes":[],"documentation":{"id":14396,"nodeType":"StructuredDocumentation","src":"40218:163:15","text":"Has the next call (at this call depth only) create a transaction with the private key\n provided as the sender that can later be signed and sent onchain."},"functionSelector":"f67a965b","implemented":false,"kind":"function","modifiers":[],"name":"broadcast","nameLocation":"40395:9:15","parameters":{"id":14399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14398,"mutability":"mutable","name":"privateKey","nameLocation":"40413:10:15","nodeType":"VariableDeclaration","scope":14401,"src":"40405:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14397,"name":"uint256","nodeType":"ElementaryTypeName","src":"40405:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"40404:20:15"},"returnParameters":{"id":14400,"nodeType":"ParameterList","parameters":[],"src":"40433:0:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14405,"nodeType":"FunctionDefinition","src":"40944:35:15","nodes":[],"documentation":{"id":14402,"nodeType":"StructuredDocumentation","src":"40440:499:15","text":"Has all subsequent calls (at this call depth only) create transactions that can later be signed and sent onchain.\n Broadcasting address is determined by checking the following in order:\n 1. If `--sender` argument was provided, that address is used.\n 2. If exactly one signer (e.g. private key, hw wallet, keystore) is set when `forge broadcast` is invoked, that signer is used.\n 3. Otherwise, default foundry sender (1804c8AB1F12E6bbf3894d4083f33e07309d1f38) is used."},"functionSelector":"7fb5297f","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"40953:14:15","parameters":{"id":14403,"nodeType":"ParameterList","parameters":[],"src":"40967:2:15"},"returnParameters":{"id":14404,"nodeType":"ParameterList","parameters":[],"src":"40978:0:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14411,"nodeType":"FunctionDefinition","src":"41141:49:15","nodes":[],"documentation":{"id":14406,"nodeType":"StructuredDocumentation","src":"40985:151:15","text":"Has all subsequent calls (at this call depth only) create transactions with the address\n provided that can later be signed and sent onchain."},"functionSelector":"7fec2a8d","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"41150:14:15","parameters":{"id":14409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14408,"mutability":"mutable","name":"signer","nameLocation":"41173:6:15","nodeType":"VariableDeclaration","scope":14411,"src":"41165:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14407,"name":"address","nodeType":"ElementaryTypeName","src":"41165:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"41164:16:15"},"returnParameters":{"id":14410,"nodeType":"ParameterList","parameters":[],"src":"41189:0:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14417,"nodeType":"FunctionDefinition","src":"41356:53:15","nodes":[],"documentation":{"id":14412,"nodeType":"StructuredDocumentation","src":"41196:155:15","text":"Has all subsequent calls (at this call depth only) create transactions with the private key\n provided that can later be signed and sent onchain."},"functionSelector":"ce817d47","implemented":false,"kind":"function","modifiers":[],"name":"startBroadcast","nameLocation":"41365:14:15","parameters":{"id":14415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14414,"mutability":"mutable","name":"privateKey","nameLocation":"41388:10:15","nodeType":"VariableDeclaration","scope":14417,"src":"41380:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14413,"name":"uint256","nodeType":"ElementaryTypeName","src":"41380:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"41379:20:15"},"returnParameters":{"id":14416,"nodeType":"ParameterList","parameters":[],"src":"41408:0:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14421,"nodeType":"FunctionDefinition","src":"41462:34:15","nodes":[],"documentation":{"id":14418,"nodeType":"StructuredDocumentation","src":"41415:42:15","text":"Stops collecting onchain transactions."},"functionSelector":"76eadd36","implemented":false,"kind":"function","modifiers":[],"name":"stopBroadcast","nameLocation":"41471:13:15","parameters":{"id":14419,"nodeType":"ParameterList","parameters":[],"src":"41484:2:15"},"returnParameters":{"id":14420,"nodeType":"ParameterList","parameters":[],"src":"41495:0:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":14431,"nodeType":"FunctionDefinition","src":"41745:93:15","nodes":[],"documentation":{"id":14422,"nodeType":"StructuredDocumentation","src":"41535:205:15","text":"Returns the index of the first occurrence of a `key` in an `input` string.\n Returns `NOT_FOUND` (i.e. `type(uint256).max`) if the `key` is not found.\n Returns 0 in case of an empty `key`."},"functionSelector":"8a0807b7","implemented":false,"kind":"function","modifiers":[],"name":"indexOf","nameLocation":"41754:7:15","parameters":{"id":14427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14424,"mutability":"mutable","name":"input","nameLocation":"41778:5:15","nodeType":"VariableDeclaration","scope":14431,"src":"41762:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14423,"name":"string","nodeType":"ElementaryTypeName","src":"41762:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14426,"mutability":"mutable","name":"key","nameLocation":"41801:3:15","nodeType":"VariableDeclaration","scope":14431,"src":"41785:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14425,"name":"string","nodeType":"ElementaryTypeName","src":"41785:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41761:44:15"},"returnParameters":{"id":14430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":14431,"src":"41829:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14428,"name":"uint256","nodeType":"ElementaryTypeName","src":"41829:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"41828:9:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14439,"nodeType":"FunctionDefinition","src":"41897:100:15","nodes":[],"documentation":{"id":14432,"nodeType":"StructuredDocumentation","src":"41844:48:15","text":"Parses the given `string` into an `address`."},"functionSelector":"c6ce059d","implemented":false,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"41906:12:15","parameters":{"id":14435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14434,"mutability":"mutable","name":"stringifiedValue","nameLocation":"41935:16:15","nodeType":"VariableDeclaration","scope":14439,"src":"41919:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14433,"name":"string","nodeType":"ElementaryTypeName","src":"41919:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"41918:34:15"},"returnParameters":{"id":14438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14437,"mutability":"mutable","name":"parsedValue","nameLocation":"41984:11:15","nodeType":"VariableDeclaration","scope":14439,"src":"41976:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14436,"name":"address","nodeType":"ElementaryTypeName","src":"41976:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"41975:21:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14447,"nodeType":"FunctionDefinition","src":"42052:94:15","nodes":[],"documentation":{"id":14440,"nodeType":"StructuredDocumentation","src":"42003:44:15","text":"Parses the given `string` into a `bool`."},"functionSelector":"974ef924","implemented":false,"kind":"function","modifiers":[],"name":"parseBool","nameLocation":"42061:9:15","parameters":{"id":14443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14442,"mutability":"mutable","name":"stringifiedValue","nameLocation":"42087:16:15","nodeType":"VariableDeclaration","scope":14447,"src":"42071:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14441,"name":"string","nodeType":"ElementaryTypeName","src":"42071:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42070:34:15"},"returnParameters":{"id":14446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14445,"mutability":"mutable","name":"parsedValue","nameLocation":"42133:11:15","nodeType":"VariableDeclaration","scope":14447,"src":"42128:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14444,"name":"bool","nodeType":"ElementaryTypeName","src":"42128:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"42127:18:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14455,"nodeType":"FunctionDefinition","src":"42200:103:15","nodes":[],"documentation":{"id":14448,"nodeType":"StructuredDocumentation","src":"42152:43:15","text":"Parses the given `string` into `bytes`."},"functionSelector":"8f5d232d","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes","nameLocation":"42209:10:15","parameters":{"id":14451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14450,"mutability":"mutable","name":"stringifiedValue","nameLocation":"42236:16:15","nodeType":"VariableDeclaration","scope":14455,"src":"42220:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14449,"name":"string","nodeType":"ElementaryTypeName","src":"42220:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42219:34:15"},"returnParameters":{"id":14454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14453,"mutability":"mutable","name":"parsedValue","nameLocation":"42290:11:15","nodeType":"VariableDeclaration","scope":14455,"src":"42277:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":14452,"name":"bytes","nodeType":"ElementaryTypeName","src":"42277:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"42276:26:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14463,"nodeType":"FunctionDefinition","src":"42361:100:15","nodes":[],"documentation":{"id":14456,"nodeType":"StructuredDocumentation","src":"42309:47:15","text":"Parses the given `string` into a `bytes32`."},"functionSelector":"087e6e81","implemented":false,"kind":"function","modifiers":[],"name":"parseBytes32","nameLocation":"42370:12:15","parameters":{"id":14459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14458,"mutability":"mutable","name":"stringifiedValue","nameLocation":"42399:16:15","nodeType":"VariableDeclaration","scope":14463,"src":"42383:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14457,"name":"string","nodeType":"ElementaryTypeName","src":"42383:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42382:34:15"},"returnParameters":{"id":14462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14461,"mutability":"mutable","name":"parsedValue","nameLocation":"42448:11:15","nodeType":"VariableDeclaration","scope":14463,"src":"42440:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14460,"name":"bytes32","nodeType":"ElementaryTypeName","src":"42440:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"42439:21:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14471,"nodeType":"FunctionDefinition","src":"42518:95:15","nodes":[],"documentation":{"id":14464,"nodeType":"StructuredDocumentation","src":"42467:46:15","text":"Parses the given `string` into a `int256`."},"functionSelector":"42346c5e","implemented":false,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"42527:8:15","parameters":{"id":14467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14466,"mutability":"mutable","name":"stringifiedValue","nameLocation":"42552:16:15","nodeType":"VariableDeclaration","scope":14471,"src":"42536:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14465,"name":"string","nodeType":"ElementaryTypeName","src":"42536:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42535:34:15"},"returnParameters":{"id":14470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14469,"mutability":"mutable","name":"parsedValue","nameLocation":"42600:11:15","nodeType":"VariableDeclaration","scope":14471,"src":"42593:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14468,"name":"int256","nodeType":"ElementaryTypeName","src":"42593:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"42592:20:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14479,"nodeType":"FunctionDefinition","src":"42671:97:15","nodes":[],"documentation":{"id":14472,"nodeType":"StructuredDocumentation","src":"42619:47:15","text":"Parses the given `string` into a `uint256`."},"functionSelector":"fa91454d","implemented":false,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"42680:9:15","parameters":{"id":14475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14474,"mutability":"mutable","name":"stringifiedValue","nameLocation":"42706:16:15","nodeType":"VariableDeclaration","scope":14479,"src":"42690:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14473,"name":"string","nodeType":"ElementaryTypeName","src":"42690:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42689:34:15"},"returnParameters":{"id":14478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14477,"mutability":"mutable","name":"parsedValue","nameLocation":"42755:11:15","nodeType":"VariableDeclaration","scope":14479,"src":"42747:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14476,"name":"uint256","nodeType":"ElementaryTypeName","src":"42747:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"42746:21:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14491,"nodeType":"FunctionDefinition","src":"42846:151:15","nodes":[],"documentation":{"id":14480,"nodeType":"StructuredDocumentation","src":"42774:67:15","text":"Replaces occurrences of `from` in the given `string` with `to`."},"functionSelector":"e00ad03e","implemented":false,"kind":"function","modifiers":[],"name":"replace","nameLocation":"42855:7:15","parameters":{"id":14487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14482,"mutability":"mutable","name":"input","nameLocation":"42879:5:15","nodeType":"VariableDeclaration","scope":14491,"src":"42863:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14481,"name":"string","nodeType":"ElementaryTypeName","src":"42863:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14484,"mutability":"mutable","name":"from","nameLocation":"42902:4:15","nodeType":"VariableDeclaration","scope":14491,"src":"42886:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14483,"name":"string","nodeType":"ElementaryTypeName","src":"42886:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14486,"mutability":"mutable","name":"to","nameLocation":"42924:2:15","nodeType":"VariableDeclaration","scope":14491,"src":"42908:18:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14485,"name":"string","nodeType":"ElementaryTypeName","src":"42908:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42862:65:15"},"returnParameters":{"id":14490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14489,"mutability":"mutable","name":"output","nameLocation":"42989:6:15","nodeType":"VariableDeclaration","scope":14491,"src":"42975:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14488,"name":"string","nodeType":"ElementaryTypeName","src":"42975:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"42974:22:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14502,"nodeType":"FunctionDefinition","src":"43090:113:15","nodes":[],"documentation":{"id":14492,"nodeType":"StructuredDocumentation","src":"43003:82:15","text":"Splits the given `string` into an array of strings divided by the `delimiter`."},"functionSelector":"8bb75533","implemented":false,"kind":"function","modifiers":[],"name":"split","nameLocation":"43099:5:15","parameters":{"id":14497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14494,"mutability":"mutable","name":"input","nameLocation":"43121:5:15","nodeType":"VariableDeclaration","scope":14502,"src":"43105:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14493,"name":"string","nodeType":"ElementaryTypeName","src":"43105:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14496,"mutability":"mutable","name":"delimiter","nameLocation":"43144:9:15","nodeType":"VariableDeclaration","scope":14502,"src":"43128:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14495,"name":"string","nodeType":"ElementaryTypeName","src":"43128:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43104:50:15"},"returnParameters":{"id":14501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14500,"mutability":"mutable","name":"outputs","nameLocation":"43194:7:15","nodeType":"VariableDeclaration","scope":14502,"src":"43178:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14498,"name":"string","nodeType":"ElementaryTypeName","src":"43178:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14499,"nodeType":"ArrayTypeName","src":"43178:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"43177:25:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14510,"nodeType":"FunctionDefinition","src":"43265:89:15","nodes":[],"documentation":{"id":14503,"nodeType":"StructuredDocumentation","src":"43209:51:15","text":"Converts the given `string` value to Lowercase."},"functionSelector":"50bb0884","implemented":false,"kind":"function","modifiers":[],"name":"toLowercase","nameLocation":"43274:11:15","parameters":{"id":14506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14505,"mutability":"mutable","name":"input","nameLocation":"43302:5:15","nodeType":"VariableDeclaration","scope":14510,"src":"43286:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14504,"name":"string","nodeType":"ElementaryTypeName","src":"43286:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43285:23:15"},"returnParameters":{"id":14509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14508,"mutability":"mutable","name":"output","nameLocation":"43346:6:15","nodeType":"VariableDeclaration","scope":14510,"src":"43332:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14507,"name":"string","nodeType":"ElementaryTypeName","src":"43332:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43331:22:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14518,"nodeType":"FunctionDefinition","src":"43408:88:15","nodes":[],"documentation":{"id":14511,"nodeType":"StructuredDocumentation","src":"43360:43:15","text":"Converts the given value to a `string`."},"functionSelector":"56ca623e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"43417:8:15","parameters":{"id":14514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14513,"mutability":"mutable","name":"value","nameLocation":"43434:5:15","nodeType":"VariableDeclaration","scope":14518,"src":"43426:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":14512,"name":"address","nodeType":"ElementaryTypeName","src":"43426:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"43425:15:15"},"returnParameters":{"id":14517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14516,"mutability":"mutable","name":"stringifiedValue","nameLocation":"43478:16:15","nodeType":"VariableDeclaration","scope":14518,"src":"43464:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14515,"name":"string","nodeType":"ElementaryTypeName","src":"43464:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43463:32:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14526,"nodeType":"FunctionDefinition","src":"43550:95:15","nodes":[],"documentation":{"id":14519,"nodeType":"StructuredDocumentation","src":"43502:43:15","text":"Converts the given value to a `string`."},"functionSelector":"71aad10d","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"43559:8:15","parameters":{"id":14522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14521,"mutability":"mutable","name":"value","nameLocation":"43583:5:15","nodeType":"VariableDeclaration","scope":14526,"src":"43568:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14520,"name":"bytes","nodeType":"ElementaryTypeName","src":"43568:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"43567:22:15"},"returnParameters":{"id":14525,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14524,"mutability":"mutable","name":"stringifiedValue","nameLocation":"43627:16:15","nodeType":"VariableDeclaration","scope":14526,"src":"43613:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14523,"name":"string","nodeType":"ElementaryTypeName","src":"43613:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43612:32:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14534,"nodeType":"FunctionDefinition","src":"43699:88:15","nodes":[],"documentation":{"id":14527,"nodeType":"StructuredDocumentation","src":"43651:43:15","text":"Converts the given value to a `string`."},"functionSelector":"b11a19e8","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"43708:8:15","parameters":{"id":14530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14529,"mutability":"mutable","name":"value","nameLocation":"43725:5:15","nodeType":"VariableDeclaration","scope":14534,"src":"43717:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":14528,"name":"bytes32","nodeType":"ElementaryTypeName","src":"43717:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"43716:15:15"},"returnParameters":{"id":14533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14532,"mutability":"mutable","name":"stringifiedValue","nameLocation":"43769:16:15","nodeType":"VariableDeclaration","scope":14534,"src":"43755:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14531,"name":"string","nodeType":"ElementaryTypeName","src":"43755:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43754:32:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14542,"nodeType":"FunctionDefinition","src":"43841:85:15","nodes":[],"documentation":{"id":14535,"nodeType":"StructuredDocumentation","src":"43793:43:15","text":"Converts the given value to a `string`."},"functionSelector":"71dce7da","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"43850:8:15","parameters":{"id":14538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14537,"mutability":"mutable","name":"value","nameLocation":"43864:5:15","nodeType":"VariableDeclaration","scope":14542,"src":"43859:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14536,"name":"bool","nodeType":"ElementaryTypeName","src":"43859:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"43858:12:15"},"returnParameters":{"id":14541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14540,"mutability":"mutable","name":"stringifiedValue","nameLocation":"43908:16:15","nodeType":"VariableDeclaration","scope":14542,"src":"43894:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14539,"name":"string","nodeType":"ElementaryTypeName","src":"43894:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"43893:32:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14550,"nodeType":"FunctionDefinition","src":"43980:88:15","nodes":[],"documentation":{"id":14543,"nodeType":"StructuredDocumentation","src":"43932:43:15","text":"Converts the given value to a `string`."},"functionSelector":"6900a3ae","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"43989:8:15","parameters":{"id":14546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14545,"mutability":"mutable","name":"value","nameLocation":"44006:5:15","nodeType":"VariableDeclaration","scope":14550,"src":"43998:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14544,"name":"uint256","nodeType":"ElementaryTypeName","src":"43998:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"43997:15:15"},"returnParameters":{"id":14549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14548,"mutability":"mutable","name":"stringifiedValue","nameLocation":"44050:16:15","nodeType":"VariableDeclaration","scope":14550,"src":"44036:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14547,"name":"string","nodeType":"ElementaryTypeName","src":"44036:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44035:32:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14558,"nodeType":"FunctionDefinition","src":"44122:87:15","nodes":[],"documentation":{"id":14551,"nodeType":"StructuredDocumentation","src":"44074:43:15","text":"Converts the given value to a `string`."},"functionSelector":"a322c40e","implemented":false,"kind":"function","modifiers":[],"name":"toString","nameLocation":"44131:8:15","parameters":{"id":14554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14553,"mutability":"mutable","name":"value","nameLocation":"44147:5:15","nodeType":"VariableDeclaration","scope":14558,"src":"44140:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14552,"name":"int256","nodeType":"ElementaryTypeName","src":"44140:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"44139:14:15"},"returnParameters":{"id":14557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14556,"mutability":"mutable","name":"stringifiedValue","nameLocation":"44191:16:15","nodeType":"VariableDeclaration","scope":14558,"src":"44177:30:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14555,"name":"string","nodeType":"ElementaryTypeName","src":"44177:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44176:32:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14566,"nodeType":"FunctionDefinition","src":"44271:89:15","nodes":[],"documentation":{"id":14559,"nodeType":"StructuredDocumentation","src":"44215:51:15","text":"Converts the given `string` value to Uppercase."},"functionSelector":"074ae3d7","implemented":false,"kind":"function","modifiers":[],"name":"toUppercase","nameLocation":"44280:11:15","parameters":{"id":14562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14561,"mutability":"mutable","name":"input","nameLocation":"44308:5:15","nodeType":"VariableDeclaration","scope":14566,"src":"44292:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14560,"name":"string","nodeType":"ElementaryTypeName","src":"44292:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44291:23:15"},"returnParameters":{"id":14565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14564,"mutability":"mutable","name":"output","nameLocation":"44352:6:15","nodeType":"VariableDeclaration","scope":14566,"src":"44338:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14563,"name":"string","nodeType":"ElementaryTypeName","src":"44338:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44337:22:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14574,"nodeType":"FunctionDefinition","src":"44443:82:15","nodes":[],"documentation":{"id":14567,"nodeType":"StructuredDocumentation","src":"44366:72:15","text":"Trims leading and trailing whitespace from the given `string` value."},"functionSelector":"b2dad155","implemented":false,"kind":"function","modifiers":[],"name":"trim","nameLocation":"44452:4:15","parameters":{"id":14570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14569,"mutability":"mutable","name":"input","nameLocation":"44473:5:15","nodeType":"VariableDeclaration","scope":14574,"src":"44457:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14568,"name":"string","nodeType":"ElementaryTypeName","src":"44457:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44456:23:15"},"returnParameters":{"id":14573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14572,"mutability":"mutable","name":"output","nameLocation":"44517:6:15","nodeType":"VariableDeclaration","scope":14574,"src":"44503:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":14571,"name":"string","nodeType":"ElementaryTypeName","src":"44503:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"44502:22:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14586,"nodeType":"FunctionDefinition","src":"44720:113:15","nodes":[],"documentation":{"id":14575,"nodeType":"StructuredDocumentation","src":"44565:150:15","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"045c55ce","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"44729:24:15","parameters":{"id":14584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14577,"mutability":"mutable","name":"left","nameLocation":"44762:4:15","nodeType":"VariableDeclaration","scope":14586,"src":"44754:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14576,"name":"uint256","nodeType":"ElementaryTypeName","src":"44754:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14579,"mutability":"mutable","name":"right","nameLocation":"44776:5:15","nodeType":"VariableDeclaration","scope":14586,"src":"44768:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14578,"name":"uint256","nodeType":"ElementaryTypeName","src":"44768:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14581,"mutability":"mutable","name":"maxDelta","nameLocation":"44791:8:15","nodeType":"VariableDeclaration","scope":14586,"src":"44783:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14580,"name":"uint256","nodeType":"ElementaryTypeName","src":"44783:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14583,"mutability":"mutable","name":"decimals","nameLocation":"44809:8:15","nodeType":"VariableDeclaration","scope":14586,"src":"44801:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14582,"name":"uint256","nodeType":"ElementaryTypeName","src":"44801:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"44753:65:15"},"returnParameters":{"id":14585,"nodeType":"ParameterList","parameters":[],"src":"44832:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14600,"nodeType":"FunctionDefinition","src":"45048:182:15","nodes":[],"documentation":{"id":14587,"nodeType":"StructuredDocumentation","src":"44839:204:15","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"60429eb2","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"45057:24:15","parameters":{"id":14598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14589,"mutability":"mutable","name":"left","nameLocation":"45099:4:15","nodeType":"VariableDeclaration","scope":14600,"src":"45091:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14588,"name":"uint256","nodeType":"ElementaryTypeName","src":"45091:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14591,"mutability":"mutable","name":"right","nameLocation":"45121:5:15","nodeType":"VariableDeclaration","scope":14600,"src":"45113:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14590,"name":"uint256","nodeType":"ElementaryTypeName","src":"45113:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14593,"mutability":"mutable","name":"maxDelta","nameLocation":"45144:8:15","nodeType":"VariableDeclaration","scope":14600,"src":"45136:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14592,"name":"uint256","nodeType":"ElementaryTypeName","src":"45136:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14595,"mutability":"mutable","name":"decimals","nameLocation":"45170:8:15","nodeType":"VariableDeclaration","scope":14600,"src":"45162:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14594,"name":"uint256","nodeType":"ElementaryTypeName","src":"45162:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14597,"mutability":"mutable","name":"error","nameLocation":"45204:5:15","nodeType":"VariableDeclaration","scope":14600,"src":"45188:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14596,"name":"string","nodeType":"ElementaryTypeName","src":"45188:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45081:134:15"},"returnParameters":{"id":14599,"nodeType":"ParameterList","parameters":[],"src":"45229:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14612,"nodeType":"FunctionDefinition","src":"45390:111:15","nodes":[],"documentation":{"id":14601,"nodeType":"StructuredDocumentation","src":"45236:149:15","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message."},"functionSelector":"3d5bc8bc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"45399:24:15","parameters":{"id":14610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14603,"mutability":"mutable","name":"left","nameLocation":"45431:4:15","nodeType":"VariableDeclaration","scope":14612,"src":"45424:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14602,"name":"int256","nodeType":"ElementaryTypeName","src":"45424:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14605,"mutability":"mutable","name":"right","nameLocation":"45444:5:15","nodeType":"VariableDeclaration","scope":14612,"src":"45437:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14604,"name":"int256","nodeType":"ElementaryTypeName","src":"45437:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14607,"mutability":"mutable","name":"maxDelta","nameLocation":"45459:8:15","nodeType":"VariableDeclaration","scope":14612,"src":"45451:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14606,"name":"uint256","nodeType":"ElementaryTypeName","src":"45451:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14609,"mutability":"mutable","name":"decimals","nameLocation":"45477:8:15","nodeType":"VariableDeclaration","scope":14612,"src":"45469:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14608,"name":"uint256","nodeType":"ElementaryTypeName","src":"45469:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"45423:63:15"},"returnParameters":{"id":14611,"nodeType":"ParameterList","parameters":[],"src":"45500:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14626,"nodeType":"FunctionDefinition","src":"45715:180:15","nodes":[],"documentation":{"id":14613,"nodeType":"StructuredDocumentation","src":"45507:203:15","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"6a5066d4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbsDecimal","nameLocation":"45724:24:15","parameters":{"id":14624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14615,"mutability":"mutable","name":"left","nameLocation":"45765:4:15","nodeType":"VariableDeclaration","scope":14626,"src":"45758:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14614,"name":"int256","nodeType":"ElementaryTypeName","src":"45758:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14617,"mutability":"mutable","name":"right","nameLocation":"45786:5:15","nodeType":"VariableDeclaration","scope":14626,"src":"45779:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14616,"name":"int256","nodeType":"ElementaryTypeName","src":"45779:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14619,"mutability":"mutable","name":"maxDelta","nameLocation":"45809:8:15","nodeType":"VariableDeclaration","scope":14626,"src":"45801:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14618,"name":"uint256","nodeType":"ElementaryTypeName","src":"45801:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14621,"mutability":"mutable","name":"decimals","nameLocation":"45835:8:15","nodeType":"VariableDeclaration","scope":14626,"src":"45827:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14620,"name":"uint256","nodeType":"ElementaryTypeName","src":"45827:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14623,"mutability":"mutable","name":"error","nameLocation":"45869:5:15","nodeType":"VariableDeclaration","scope":14626,"src":"45853:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14622,"name":"string","nodeType":"ElementaryTypeName","src":"45853:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"45748:132:15"},"returnParameters":{"id":14625,"nodeType":"ParameterList","parameters":[],"src":"45894:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14636,"nodeType":"FunctionDefinition","src":"45999:88:15","nodes":[],"documentation":{"id":14627,"nodeType":"StructuredDocumentation","src":"45901:93:15","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"16d207c6","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"46008:17:15","parameters":{"id":14634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14629,"mutability":"mutable","name":"left","nameLocation":"46034:4:15","nodeType":"VariableDeclaration","scope":14636,"src":"46026:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14628,"name":"uint256","nodeType":"ElementaryTypeName","src":"46026:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14631,"mutability":"mutable","name":"right","nameLocation":"46048:5:15","nodeType":"VariableDeclaration","scope":14636,"src":"46040:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14630,"name":"uint256","nodeType":"ElementaryTypeName","src":"46040:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14633,"mutability":"mutable","name":"maxDelta","nameLocation":"46063:8:15","nodeType":"VariableDeclaration","scope":14636,"src":"46055:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14632,"name":"uint256","nodeType":"ElementaryTypeName","src":"46055:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"46025:47:15"},"returnParameters":{"id":14635,"nodeType":"ParameterList","parameters":[],"src":"46086:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14648,"nodeType":"FunctionDefinition","src":"46253:111:15","nodes":[],"documentation":{"id":14637,"nodeType":"StructuredDocumentation","src":"46093:155:15","text":"Compares two `uint256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"f710b062","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"46262:17:15","parameters":{"id":14646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14639,"mutability":"mutable","name":"left","nameLocation":"46288:4:15","nodeType":"VariableDeclaration","scope":14648,"src":"46280:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14638,"name":"uint256","nodeType":"ElementaryTypeName","src":"46280:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14641,"mutability":"mutable","name":"right","nameLocation":"46302:5:15","nodeType":"VariableDeclaration","scope":14648,"src":"46294:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14640,"name":"uint256","nodeType":"ElementaryTypeName","src":"46294:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14643,"mutability":"mutable","name":"maxDelta","nameLocation":"46317:8:15","nodeType":"VariableDeclaration","scope":14648,"src":"46309:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14642,"name":"uint256","nodeType":"ElementaryTypeName","src":"46309:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14645,"mutability":"mutable","name":"error","nameLocation":"46343:5:15","nodeType":"VariableDeclaration","scope":14648,"src":"46327:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14644,"name":"string","nodeType":"ElementaryTypeName","src":"46327:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46279:70:15"},"returnParameters":{"id":14647,"nodeType":"ParameterList","parameters":[],"src":"46363:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14658,"nodeType":"FunctionDefinition","src":"46467:86:15","nodes":[],"documentation":{"id":14649,"nodeType":"StructuredDocumentation","src":"46370:92:15","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`."},"functionSelector":"240f839d","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"46476:17:15","parameters":{"id":14656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14651,"mutability":"mutable","name":"left","nameLocation":"46501:4:15","nodeType":"VariableDeclaration","scope":14658,"src":"46494:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14650,"name":"int256","nodeType":"ElementaryTypeName","src":"46494:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14653,"mutability":"mutable","name":"right","nameLocation":"46514:5:15","nodeType":"VariableDeclaration","scope":14658,"src":"46507:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14652,"name":"int256","nodeType":"ElementaryTypeName","src":"46507:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14655,"mutability":"mutable","name":"maxDelta","nameLocation":"46529:8:15","nodeType":"VariableDeclaration","scope":14658,"src":"46521:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14654,"name":"uint256","nodeType":"ElementaryTypeName","src":"46521:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"46493:45:15"},"returnParameters":{"id":14657,"nodeType":"ParameterList","parameters":[],"src":"46552:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14670,"nodeType":"FunctionDefinition","src":"46718:109:15","nodes":[],"documentation":{"id":14659,"nodeType":"StructuredDocumentation","src":"46559:154:15","text":"Compares two `int256` values. Expects difference to be less than or equal to `maxDelta`.\n Includes error message into revert string on failure."},"functionSelector":"8289e621","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqAbs","nameLocation":"46727:17:15","parameters":{"id":14668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14661,"mutability":"mutable","name":"left","nameLocation":"46752:4:15","nodeType":"VariableDeclaration","scope":14670,"src":"46745:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14660,"name":"int256","nodeType":"ElementaryTypeName","src":"46745:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14663,"mutability":"mutable","name":"right","nameLocation":"46765:5:15","nodeType":"VariableDeclaration","scope":14670,"src":"46758:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14662,"name":"int256","nodeType":"ElementaryTypeName","src":"46758:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14665,"mutability":"mutable","name":"maxDelta","nameLocation":"46780:8:15","nodeType":"VariableDeclaration","scope":14670,"src":"46772:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14664,"name":"uint256","nodeType":"ElementaryTypeName","src":"46772:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14667,"mutability":"mutable","name":"error","nameLocation":"46806:5:15","nodeType":"VariableDeclaration","scope":14670,"src":"46790:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14666,"name":"string","nodeType":"ElementaryTypeName","src":"46790:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"46744:68:15"},"returnParameters":{"id":14669,"nodeType":"ParameterList","parameters":[],"src":"46826:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14682,"nodeType":"FunctionDefinition","src":"47098:136:15","nodes":[],"documentation":{"id":14671,"nodeType":"StructuredDocumentation","src":"46833:260:15","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"21ed2977","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"47107:24:15","parameters":{"id":14680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14673,"mutability":"mutable","name":"left","nameLocation":"47140:4:15","nodeType":"VariableDeclaration","scope":14682,"src":"47132:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14672,"name":"uint256","nodeType":"ElementaryTypeName","src":"47132:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14675,"mutability":"mutable","name":"right","nameLocation":"47154:5:15","nodeType":"VariableDeclaration","scope":14682,"src":"47146:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14674,"name":"uint256","nodeType":"ElementaryTypeName","src":"47146:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14677,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"47169:15:15","nodeType":"VariableDeclaration","scope":14682,"src":"47161:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14676,"name":"uint256","nodeType":"ElementaryTypeName","src":"47161:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14679,"mutability":"mutable","name":"decimals","nameLocation":"47194:8:15","nodeType":"VariableDeclaration","scope":14682,"src":"47186:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14678,"name":"uint256","nodeType":"ElementaryTypeName","src":"47186:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"47131:72:15"},"returnParameters":{"id":14681,"nodeType":"ParameterList","parameters":[],"src":"47233:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14696,"nodeType":"FunctionDefinition","src":"47559:189:15","nodes":[],"documentation":{"id":14683,"nodeType":"StructuredDocumentation","src":"47240:314:15","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"82d6c8fd","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"47568:24:15","parameters":{"id":14694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14685,"mutability":"mutable","name":"left","nameLocation":"47610:4:15","nodeType":"VariableDeclaration","scope":14696,"src":"47602:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14684,"name":"uint256","nodeType":"ElementaryTypeName","src":"47602:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14687,"mutability":"mutable","name":"right","nameLocation":"47632:5:15","nodeType":"VariableDeclaration","scope":14696,"src":"47624:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14686,"name":"uint256","nodeType":"ElementaryTypeName","src":"47624:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14689,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"47655:15:15","nodeType":"VariableDeclaration","scope":14696,"src":"47647:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14688,"name":"uint256","nodeType":"ElementaryTypeName","src":"47647:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14691,"mutability":"mutable","name":"decimals","nameLocation":"47688:8:15","nodeType":"VariableDeclaration","scope":14696,"src":"47680:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14690,"name":"uint256","nodeType":"ElementaryTypeName","src":"47680:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14693,"mutability":"mutable","name":"error","nameLocation":"47722:5:15","nodeType":"VariableDeclaration","scope":14696,"src":"47706:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14692,"name":"string","nodeType":"ElementaryTypeName","src":"47706:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"47592:141:15"},"returnParameters":{"id":14695,"nodeType":"ParameterList","parameters":[],"src":"47747:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14708,"nodeType":"FunctionDefinition","src":"48018:134:15","nodes":[],"documentation":{"id":14697,"nodeType":"StructuredDocumentation","src":"47754:259:15","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message."},"functionSelector":"abbf21cc","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"48027:24:15","parameters":{"id":14706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14699,"mutability":"mutable","name":"left","nameLocation":"48059:4:15","nodeType":"VariableDeclaration","scope":14708,"src":"48052:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14698,"name":"int256","nodeType":"ElementaryTypeName","src":"48052:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14701,"mutability":"mutable","name":"right","nameLocation":"48072:5:15","nodeType":"VariableDeclaration","scope":14708,"src":"48065:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14700,"name":"int256","nodeType":"ElementaryTypeName","src":"48065:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14703,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"48087:15:15","nodeType":"VariableDeclaration","scope":14708,"src":"48079:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14702,"name":"uint256","nodeType":"ElementaryTypeName","src":"48079:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14705,"mutability":"mutable","name":"decimals","nameLocation":"48112:8:15","nodeType":"VariableDeclaration","scope":14708,"src":"48104:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14704,"name":"uint256","nodeType":"ElementaryTypeName","src":"48104:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"48051:70:15"},"returnParameters":{"id":14707,"nodeType":"ParameterList","parameters":[],"src":"48151:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14722,"nodeType":"FunctionDefinition","src":"48476:187:15","nodes":[],"documentation":{"id":14709,"nodeType":"StructuredDocumentation","src":"48158:313:15","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"fccc11c4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRelDecimal","nameLocation":"48485:24:15","parameters":{"id":14720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14711,"mutability":"mutable","name":"left","nameLocation":"48526:4:15","nodeType":"VariableDeclaration","scope":14722,"src":"48519:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14710,"name":"int256","nodeType":"ElementaryTypeName","src":"48519:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14713,"mutability":"mutable","name":"right","nameLocation":"48547:5:15","nodeType":"VariableDeclaration","scope":14722,"src":"48540:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14712,"name":"int256","nodeType":"ElementaryTypeName","src":"48540:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14715,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"48570:15:15","nodeType":"VariableDeclaration","scope":14722,"src":"48562:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14714,"name":"uint256","nodeType":"ElementaryTypeName","src":"48562:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14717,"mutability":"mutable","name":"decimals","nameLocation":"48603:8:15","nodeType":"VariableDeclaration","scope":14722,"src":"48595:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14716,"name":"uint256","nodeType":"ElementaryTypeName","src":"48595:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14719,"mutability":"mutable","name":"error","nameLocation":"48637:5:15","nodeType":"VariableDeclaration","scope":14722,"src":"48621:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14718,"name":"string","nodeType":"ElementaryTypeName","src":"48621:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"48509:139:15"},"returnParameters":{"id":14721,"nodeType":"ParameterList","parameters":[],"src":"48662:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14732,"nodeType":"FunctionDefinition","src":"48877:95:15","nodes":[],"documentation":{"id":14723,"nodeType":"StructuredDocumentation","src":"48669:203:15","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"8cf25ef4","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"48886:17:15","parameters":{"id":14730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14725,"mutability":"mutable","name":"left","nameLocation":"48912:4:15","nodeType":"VariableDeclaration","scope":14732,"src":"48904:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14724,"name":"uint256","nodeType":"ElementaryTypeName","src":"48904:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14727,"mutability":"mutable","name":"right","nameLocation":"48926:5:15","nodeType":"VariableDeclaration","scope":14732,"src":"48918:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14726,"name":"uint256","nodeType":"ElementaryTypeName","src":"48918:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14729,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"48941:15:15","nodeType":"VariableDeclaration","scope":14732,"src":"48933:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14728,"name":"uint256","nodeType":"ElementaryTypeName","src":"48933:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"48903:54:15"},"returnParameters":{"id":14731,"nodeType":"ParameterList","parameters":[],"src":"48971:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14744,"nodeType":"FunctionDefinition","src":"49248:134:15","nodes":[],"documentation":{"id":14733,"nodeType":"StructuredDocumentation","src":"48978:265:15","text":"Compares two `uint256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"1ecb7d33","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"49257:17:15","parameters":{"id":14742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14735,"mutability":"mutable","name":"left","nameLocation":"49283:4:15","nodeType":"VariableDeclaration","scope":14744,"src":"49275:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14734,"name":"uint256","nodeType":"ElementaryTypeName","src":"49275:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14737,"mutability":"mutable","name":"right","nameLocation":"49297:5:15","nodeType":"VariableDeclaration","scope":14744,"src":"49289:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14736,"name":"uint256","nodeType":"ElementaryTypeName","src":"49289:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14739,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"49312:15:15","nodeType":"VariableDeclaration","scope":14744,"src":"49304:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14738,"name":"uint256","nodeType":"ElementaryTypeName","src":"49304:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14741,"mutability":"mutable","name":"error","nameLocation":"49345:5:15","nodeType":"VariableDeclaration","scope":14744,"src":"49329:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14740,"name":"string","nodeType":"ElementaryTypeName","src":"49329:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49274:77:15"},"returnParameters":{"id":14743,"nodeType":"ParameterList","parameters":[],"src":"49381:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14754,"nodeType":"FunctionDefinition","src":"49595:93:15","nodes":[],"documentation":{"id":14745,"nodeType":"StructuredDocumentation","src":"49388:202:15","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%"},"functionSelector":"fea2d14f","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"49604:17:15","parameters":{"id":14752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14747,"mutability":"mutable","name":"left","nameLocation":"49629:4:15","nodeType":"VariableDeclaration","scope":14754,"src":"49622:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14746,"name":"int256","nodeType":"ElementaryTypeName","src":"49622:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14749,"mutability":"mutable","name":"right","nameLocation":"49642:5:15","nodeType":"VariableDeclaration","scope":14754,"src":"49635:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14748,"name":"int256","nodeType":"ElementaryTypeName","src":"49635:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14751,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"49657:15:15","nodeType":"VariableDeclaration","scope":14754,"src":"49649:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14750,"name":"uint256","nodeType":"ElementaryTypeName","src":"49649:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"49621:52:15"},"returnParameters":{"id":14753,"nodeType":"ParameterList","parameters":[],"src":"49687:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14766,"nodeType":"FunctionDefinition","src":"49963:132:15","nodes":[],"documentation":{"id":14755,"nodeType":"StructuredDocumentation","src":"49694:264:15","text":"Compares two `int256` values. Expects relative difference in percents to be less than or equal to `maxPercentDelta`.\n `maxPercentDelta` is an 18 decimal fixed point number, where 1e18 == 100%\n Includes error message into revert string on failure."},"functionSelector":"ef277d72","implemented":false,"kind":"function","modifiers":[],"name":"assertApproxEqRel","nameLocation":"49972:17:15","parameters":{"id":14764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14757,"mutability":"mutable","name":"left","nameLocation":"49997:4:15","nodeType":"VariableDeclaration","scope":14766,"src":"49990:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14756,"name":"int256","nodeType":"ElementaryTypeName","src":"49990:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14759,"mutability":"mutable","name":"right","nameLocation":"50010:5:15","nodeType":"VariableDeclaration","scope":14766,"src":"50003:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14758,"name":"int256","nodeType":"ElementaryTypeName","src":"50003:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14761,"mutability":"mutable","name":"maxPercentDelta","nameLocation":"50025:15:15","nodeType":"VariableDeclaration","scope":14766,"src":"50017:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14760,"name":"uint256","nodeType":"ElementaryTypeName","src":"50017:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14763,"mutability":"mutable","name":"error","nameLocation":"50058:5:15","nodeType":"VariableDeclaration","scope":14766,"src":"50042:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14762,"name":"string","nodeType":"ElementaryTypeName","src":"50042:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"49989:75:15"},"returnParameters":{"id":14765,"nodeType":"ParameterList","parameters":[],"src":"50094:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14776,"nodeType":"FunctionDefinition","src":"50204:86:15","nodes":[],"documentation":{"id":14767,"nodeType":"StructuredDocumentation","src":"50101:98:15","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message."},"functionSelector":"27af7d9c","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"50213:15:15","parameters":{"id":14774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14769,"mutability":"mutable","name":"left","nameLocation":"50237:4:15","nodeType":"VariableDeclaration","scope":14776,"src":"50229:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14768,"name":"uint256","nodeType":"ElementaryTypeName","src":"50229:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14771,"mutability":"mutable","name":"right","nameLocation":"50251:5:15","nodeType":"VariableDeclaration","scope":14776,"src":"50243:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14770,"name":"uint256","nodeType":"ElementaryTypeName","src":"50243:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14773,"mutability":"mutable","name":"decimals","nameLocation":"50266:8:15","nodeType":"VariableDeclaration","scope":14776,"src":"50258:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14772,"name":"uint256","nodeType":"ElementaryTypeName","src":"50258:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"50228:47:15"},"returnParameters":{"id":14775,"nodeType":"ParameterList","parameters":[],"src":"50289:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14788,"nodeType":"FunctionDefinition","src":"50461:109:15","nodes":[],"documentation":{"id":14777,"nodeType":"StructuredDocumentation","src":"50296:160:15","text":"Asserts that two `uint256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"d0cbbdef","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"50470:15:15","parameters":{"id":14786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14779,"mutability":"mutable","name":"left","nameLocation":"50494:4:15","nodeType":"VariableDeclaration","scope":14788,"src":"50486:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14778,"name":"uint256","nodeType":"ElementaryTypeName","src":"50486:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14781,"mutability":"mutable","name":"right","nameLocation":"50508:5:15","nodeType":"VariableDeclaration","scope":14788,"src":"50500:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14780,"name":"uint256","nodeType":"ElementaryTypeName","src":"50500:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14783,"mutability":"mutable","name":"decimals","nameLocation":"50523:8:15","nodeType":"VariableDeclaration","scope":14788,"src":"50515:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14782,"name":"uint256","nodeType":"ElementaryTypeName","src":"50515:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14785,"mutability":"mutable","name":"error","nameLocation":"50549:5:15","nodeType":"VariableDeclaration","scope":14788,"src":"50533:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14784,"name":"string","nodeType":"ElementaryTypeName","src":"50533:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50485:70:15"},"returnParameters":{"id":14787,"nodeType":"ParameterList","parameters":[],"src":"50569:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14798,"nodeType":"FunctionDefinition","src":"50678:84:15","nodes":[],"documentation":{"id":14789,"nodeType":"StructuredDocumentation","src":"50576:97:15","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message."},"functionSelector":"48016c04","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"50687:15:15","parameters":{"id":14796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14791,"mutability":"mutable","name":"left","nameLocation":"50710:4:15","nodeType":"VariableDeclaration","scope":14798,"src":"50703:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14790,"name":"int256","nodeType":"ElementaryTypeName","src":"50703:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14793,"mutability":"mutable","name":"right","nameLocation":"50723:5:15","nodeType":"VariableDeclaration","scope":14798,"src":"50716:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14792,"name":"int256","nodeType":"ElementaryTypeName","src":"50716:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14795,"mutability":"mutable","name":"decimals","nameLocation":"50738:8:15","nodeType":"VariableDeclaration","scope":14798,"src":"50730:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14794,"name":"uint256","nodeType":"ElementaryTypeName","src":"50730:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"50702:45:15"},"returnParameters":{"id":14797,"nodeType":"ParameterList","parameters":[],"src":"50761:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14810,"nodeType":"FunctionDefinition","src":"50932:107:15","nodes":[],"documentation":{"id":14799,"nodeType":"StructuredDocumentation","src":"50768:159:15","text":"Asserts that two `int256` values are equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"7e77b0c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEqDecimal","nameLocation":"50941:15:15","parameters":{"id":14808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14801,"mutability":"mutable","name":"left","nameLocation":"50964:4:15","nodeType":"VariableDeclaration","scope":14810,"src":"50957:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14800,"name":"int256","nodeType":"ElementaryTypeName","src":"50957:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14803,"mutability":"mutable","name":"right","nameLocation":"50977:5:15","nodeType":"VariableDeclaration","scope":14810,"src":"50970:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":14802,"name":"int256","nodeType":"ElementaryTypeName","src":"50970:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":14805,"mutability":"mutable","name":"decimals","nameLocation":"50992:8:15","nodeType":"VariableDeclaration","scope":14810,"src":"50984:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14804,"name":"uint256","nodeType":"ElementaryTypeName","src":"50984:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14807,"mutability":"mutable","name":"error","nameLocation":"51018:5:15","nodeType":"VariableDeclaration","scope":14810,"src":"51002:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14806,"name":"string","nodeType":"ElementaryTypeName","src":"51002:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"50956:68:15"},"returnParameters":{"id":14809,"nodeType":"ParameterList","parameters":[],"src":"51038:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14818,"nodeType":"FunctionDefinition","src":"51095:55:15","nodes":[],"documentation":{"id":14811,"nodeType":"StructuredDocumentation","src":"51045:45:15","text":"Asserts that two `bool` values are equal."},"functionSelector":"f7fe3477","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51104:8:15","parameters":{"id":14816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14813,"mutability":"mutable","name":"left","nameLocation":"51118:4:15","nodeType":"VariableDeclaration","scope":14818,"src":"51113:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14812,"name":"bool","nodeType":"ElementaryTypeName","src":"51113:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14815,"mutability":"mutable","name":"right","nameLocation":"51129:5:15","nodeType":"VariableDeclaration","scope":14818,"src":"51124:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14814,"name":"bool","nodeType":"ElementaryTypeName","src":"51124:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"51112:23:15"},"returnParameters":{"id":14817,"nodeType":"ParameterList","parameters":[],"src":"51149:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14828,"nodeType":"FunctionDefinition","src":"51263:78:15","nodes":[],"documentation":{"id":14819,"nodeType":"StructuredDocumentation","src":"51156:102:15","text":"Asserts that two `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"4db19e7e","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51272:8:15","parameters":{"id":14826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14821,"mutability":"mutable","name":"left","nameLocation":"51286:4:15","nodeType":"VariableDeclaration","scope":14828,"src":"51281:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14820,"name":"bool","nodeType":"ElementaryTypeName","src":"51281:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14823,"mutability":"mutable","name":"right","nameLocation":"51297:5:15","nodeType":"VariableDeclaration","scope":14828,"src":"51292:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":14822,"name":"bool","nodeType":"ElementaryTypeName","src":"51292:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":14825,"mutability":"mutable","name":"error","nameLocation":"51320:5:15","nodeType":"VariableDeclaration","scope":14828,"src":"51304:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14824,"name":"string","nodeType":"ElementaryTypeName","src":"51304:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51280:46:15"},"returnParameters":{"id":14827,"nodeType":"ParameterList","parameters":[],"src":"51340:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14836,"nodeType":"FunctionDefinition","src":"51399:77:15","nodes":[],"documentation":{"id":14829,"nodeType":"StructuredDocumentation","src":"51347:47:15","text":"Asserts that two `string` values are equal."},"functionSelector":"f320d963","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51408:8:15","parameters":{"id":14834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14831,"mutability":"mutable","name":"left","nameLocation":"51433:4:15","nodeType":"VariableDeclaration","scope":14836,"src":"51417:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14830,"name":"string","nodeType":"ElementaryTypeName","src":"51417:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14833,"mutability":"mutable","name":"right","nameLocation":"51455:5:15","nodeType":"VariableDeclaration","scope":14836,"src":"51439:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14832,"name":"string","nodeType":"ElementaryTypeName","src":"51439:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51416:45:15"},"returnParameters":{"id":14835,"nodeType":"ParameterList","parameters":[],"src":"51475:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14846,"nodeType":"FunctionDefinition","src":"51591:100:15","nodes":[],"documentation":{"id":14837,"nodeType":"StructuredDocumentation","src":"51482:104:15","text":"Asserts that two `string` values are equal and includes error message into revert string on failure."},"functionSelector":"36f656d8","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51600:8:15","parameters":{"id":14844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14839,"mutability":"mutable","name":"left","nameLocation":"51625:4:15","nodeType":"VariableDeclaration","scope":14846,"src":"51609:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14838,"name":"string","nodeType":"ElementaryTypeName","src":"51609:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14841,"mutability":"mutable","name":"right","nameLocation":"51647:5:15","nodeType":"VariableDeclaration","scope":14846,"src":"51631:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14840,"name":"string","nodeType":"ElementaryTypeName","src":"51631:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":14843,"mutability":"mutable","name":"error","nameLocation":"51670:5:15","nodeType":"VariableDeclaration","scope":14846,"src":"51654:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14842,"name":"string","nodeType":"ElementaryTypeName","src":"51654:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51608:68:15"},"returnParameters":{"id":14845,"nodeType":"ParameterList","parameters":[],"src":"51690:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14854,"nodeType":"FunctionDefinition","src":"51748:75:15","nodes":[],"documentation":{"id":14847,"nodeType":"StructuredDocumentation","src":"51697:46:15","text":"Asserts that two `bytes` values are equal."},"functionSelector":"97624631","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51757:8:15","parameters":{"id":14852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14849,"mutability":"mutable","name":"left","nameLocation":"51781:4:15","nodeType":"VariableDeclaration","scope":14854,"src":"51766:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14848,"name":"bytes","nodeType":"ElementaryTypeName","src":"51766:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14851,"mutability":"mutable","name":"right","nameLocation":"51802:5:15","nodeType":"VariableDeclaration","scope":14854,"src":"51787:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14850,"name":"bytes","nodeType":"ElementaryTypeName","src":"51787:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"51765:43:15"},"returnParameters":{"id":14853,"nodeType":"ParameterList","parameters":[],"src":"51822:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14864,"nodeType":"FunctionDefinition","src":"51937:98:15","nodes":[],"documentation":{"id":14855,"nodeType":"StructuredDocumentation","src":"51829:103:15","text":"Asserts that two `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"e24fed00","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"51946:8:15","parameters":{"id":14862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14857,"mutability":"mutable","name":"left","nameLocation":"51970:4:15","nodeType":"VariableDeclaration","scope":14864,"src":"51955:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14856,"name":"bytes","nodeType":"ElementaryTypeName","src":"51955:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14859,"mutability":"mutable","name":"right","nameLocation":"51991:5:15","nodeType":"VariableDeclaration","scope":14864,"src":"51976:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":14858,"name":"bytes","nodeType":"ElementaryTypeName","src":"51976:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":14861,"mutability":"mutable","name":"error","nameLocation":"52014:5:15","nodeType":"VariableDeclaration","scope":14864,"src":"51998:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14860,"name":"string","nodeType":"ElementaryTypeName","src":"51998:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"51954:66:15"},"returnParameters":{"id":14863,"nodeType":"ParameterList","parameters":[],"src":"52034:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14874,"nodeType":"FunctionDefinition","src":"52101:77:15","nodes":[],"documentation":{"id":14865,"nodeType":"StructuredDocumentation","src":"52041:55:15","text":"Asserts that two arrays of `bool` values are equal."},"functionSelector":"707df785","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52110:8:15","parameters":{"id":14872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14868,"mutability":"mutable","name":"left","nameLocation":"52135:4:15","nodeType":"VariableDeclaration","scope":14874,"src":"52119:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14866,"name":"bool","nodeType":"ElementaryTypeName","src":"52119:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14867,"nodeType":"ArrayTypeName","src":"52119:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":14871,"mutability":"mutable","name":"right","nameLocation":"52157:5:15","nodeType":"VariableDeclaration","scope":14874,"src":"52141:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14869,"name":"bool","nodeType":"ElementaryTypeName","src":"52141:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14870,"nodeType":"ArrayTypeName","src":"52141:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"52118:45:15"},"returnParameters":{"id":14873,"nodeType":"ParameterList","parameters":[],"src":"52177:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14886,"nodeType":"FunctionDefinition","src":"52301:100:15","nodes":[],"documentation":{"id":14875,"nodeType":"StructuredDocumentation","src":"52184:112:15","text":"Asserts that two arrays of `bool` values are equal and includes error message into revert string on failure."},"functionSelector":"e48a8f8d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52310:8:15","parameters":{"id":14884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14878,"mutability":"mutable","name":"left","nameLocation":"52335:4:15","nodeType":"VariableDeclaration","scope":14886,"src":"52319:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14876,"name":"bool","nodeType":"ElementaryTypeName","src":"52319:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14877,"nodeType":"ArrayTypeName","src":"52319:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":14881,"mutability":"mutable","name":"right","nameLocation":"52357:5:15","nodeType":"VariableDeclaration","scope":14886,"src":"52341:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":14879,"name":"bool","nodeType":"ElementaryTypeName","src":"52341:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":14880,"nodeType":"ArrayTypeName","src":"52341:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":14883,"mutability":"mutable","name":"error","nameLocation":"52380:5:15","nodeType":"VariableDeclaration","scope":14886,"src":"52364:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14882,"name":"string","nodeType":"ElementaryTypeName","src":"52364:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52318:68:15"},"returnParameters":{"id":14885,"nodeType":"ParameterList","parameters":[],"src":"52400:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14896,"nodeType":"FunctionDefinition","src":"52469:83:15","nodes":[],"documentation":{"id":14887,"nodeType":"StructuredDocumentation","src":"52407:57:15","text":"Asserts that two arrays of `uint256 values are equal."},"functionSelector":"975d5a12","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52478:8:15","parameters":{"id":14894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14890,"mutability":"mutable","name":"left","nameLocation":"52506:4:15","nodeType":"VariableDeclaration","scope":14896,"src":"52487:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14888,"name":"uint256","nodeType":"ElementaryTypeName","src":"52487:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14889,"nodeType":"ArrayTypeName","src":"52487:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":14893,"mutability":"mutable","name":"right","nameLocation":"52531:5:15","nodeType":"VariableDeclaration","scope":14896,"src":"52512:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14891,"name":"uint256","nodeType":"ElementaryTypeName","src":"52512:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14892,"nodeType":"ArrayTypeName","src":"52512:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"52486:51:15"},"returnParameters":{"id":14895,"nodeType":"ParameterList","parameters":[],"src":"52551:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14908,"nodeType":"FunctionDefinition","src":"52678:106:15","nodes":[],"documentation":{"id":14897,"nodeType":"StructuredDocumentation","src":"52558:115:15","text":"Asserts that two arrays of `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"5d18c73a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52687:8:15","parameters":{"id":14906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14900,"mutability":"mutable","name":"left","nameLocation":"52715:4:15","nodeType":"VariableDeclaration","scope":14908,"src":"52696:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14898,"name":"uint256","nodeType":"ElementaryTypeName","src":"52696:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14899,"nodeType":"ArrayTypeName","src":"52696:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":14903,"mutability":"mutable","name":"right","nameLocation":"52740:5:15","nodeType":"VariableDeclaration","scope":14908,"src":"52721:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":14901,"name":"uint256","nodeType":"ElementaryTypeName","src":"52721:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":14902,"nodeType":"ArrayTypeName","src":"52721:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":14905,"mutability":"mutable","name":"error","nameLocation":"52763:5:15","nodeType":"VariableDeclaration","scope":14908,"src":"52747:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14904,"name":"string","nodeType":"ElementaryTypeName","src":"52747:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"52695:74:15"},"returnParameters":{"id":14907,"nodeType":"ParameterList","parameters":[],"src":"52783:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14918,"nodeType":"FunctionDefinition","src":"52852:81:15","nodes":[],"documentation":{"id":14909,"nodeType":"StructuredDocumentation","src":"52790:57:15","text":"Asserts that two arrays of `int256` values are equal."},"functionSelector":"711043ac","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"52861:8:15","parameters":{"id":14916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14912,"mutability":"mutable","name":"left","nameLocation":"52888:4:15","nodeType":"VariableDeclaration","scope":14918,"src":"52870:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14910,"name":"int256","nodeType":"ElementaryTypeName","src":"52870:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14911,"nodeType":"ArrayTypeName","src":"52870:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":14915,"mutability":"mutable","name":"right","nameLocation":"52912:5:15","nodeType":"VariableDeclaration","scope":14918,"src":"52894:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14913,"name":"int256","nodeType":"ElementaryTypeName","src":"52894:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14914,"nodeType":"ArrayTypeName","src":"52894:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"52869:49:15"},"returnParameters":{"id":14917,"nodeType":"ParameterList","parameters":[],"src":"52932:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14930,"nodeType":"FunctionDefinition","src":"53058:104:15","nodes":[],"documentation":{"id":14919,"nodeType":"StructuredDocumentation","src":"52939:114:15","text":"Asserts that two arrays of `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"191f1b30","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"53067:8:15","parameters":{"id":14928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14922,"mutability":"mutable","name":"left","nameLocation":"53094:4:15","nodeType":"VariableDeclaration","scope":14930,"src":"53076:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14920,"name":"int256","nodeType":"ElementaryTypeName","src":"53076:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14921,"nodeType":"ArrayTypeName","src":"53076:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":14925,"mutability":"mutable","name":"right","nameLocation":"53118:5:15","nodeType":"VariableDeclaration","scope":14930,"src":"53100:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":14923,"name":"int256","nodeType":"ElementaryTypeName","src":"53100:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":14924,"nodeType":"ArrayTypeName","src":"53100:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":14927,"mutability":"mutable","name":"error","nameLocation":"53141:5:15","nodeType":"VariableDeclaration","scope":14930,"src":"53125:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14926,"name":"string","nodeType":"ElementaryTypeName","src":"53125:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53075:72:15"},"returnParameters":{"id":14929,"nodeType":"ParameterList","parameters":[],"src":"53161:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14938,"nodeType":"FunctionDefinition","src":"53221:61:15","nodes":[],"documentation":{"id":14931,"nodeType":"StructuredDocumentation","src":"53168:48:15","text":"Asserts that two `uint256` values are equal."},"functionSelector":"98296c54","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"53230:8:15","parameters":{"id":14936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14933,"mutability":"mutable","name":"left","nameLocation":"53247:4:15","nodeType":"VariableDeclaration","scope":14938,"src":"53239:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14932,"name":"uint256","nodeType":"ElementaryTypeName","src":"53239:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":14935,"mutability":"mutable","name":"right","nameLocation":"53261:5:15","nodeType":"VariableDeclaration","scope":14938,"src":"53253:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14934,"name":"uint256","nodeType":"ElementaryTypeName","src":"53253:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"53238:29:15"},"returnParameters":{"id":14937,"nodeType":"ParameterList","parameters":[],"src":"53281:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14948,"nodeType":"FunctionDefinition","src":"53351:83:15","nodes":[],"documentation":{"id":14939,"nodeType":"StructuredDocumentation","src":"53288:58:15","text":"Asserts that two arrays of `address` values are equal."},"functionSelector":"3868ac34","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"53360:8:15","parameters":{"id":14946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14942,"mutability":"mutable","name":"left","nameLocation":"53388:4:15","nodeType":"VariableDeclaration","scope":14948,"src":"53369:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14940,"name":"address","nodeType":"ElementaryTypeName","src":"53369:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14941,"nodeType":"ArrayTypeName","src":"53369:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":14945,"mutability":"mutable","name":"right","nameLocation":"53413:5:15","nodeType":"VariableDeclaration","scope":14948,"src":"53394:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14943,"name":"address","nodeType":"ElementaryTypeName","src":"53394:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14944,"nodeType":"ArrayTypeName","src":"53394:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"53368:51:15"},"returnParameters":{"id":14947,"nodeType":"ParameterList","parameters":[],"src":"53433:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14960,"nodeType":"FunctionDefinition","src":"53560:106:15","nodes":[],"documentation":{"id":14949,"nodeType":"StructuredDocumentation","src":"53440:115:15","text":"Asserts that two arrays of `address` values are equal and includes error message into revert string on failure."},"functionSelector":"3e9173c5","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"53569:8:15","parameters":{"id":14958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14952,"mutability":"mutable","name":"left","nameLocation":"53597:4:15","nodeType":"VariableDeclaration","scope":14960,"src":"53578:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14950,"name":"address","nodeType":"ElementaryTypeName","src":"53578:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14951,"nodeType":"ArrayTypeName","src":"53578:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":14955,"mutability":"mutable","name":"right","nameLocation":"53622:5:15","nodeType":"VariableDeclaration","scope":14960,"src":"53603:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":14953,"name":"address","nodeType":"ElementaryTypeName","src":"53603:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":14954,"nodeType":"ArrayTypeName","src":"53603:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":14957,"mutability":"mutable","name":"error","nameLocation":"53645:5:15","nodeType":"VariableDeclaration","scope":14960,"src":"53629:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14956,"name":"string","nodeType":"ElementaryTypeName","src":"53629:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53577:74:15"},"returnParameters":{"id":14959,"nodeType":"ParameterList","parameters":[],"src":"53665:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14970,"nodeType":"FunctionDefinition","src":"53735:83:15","nodes":[],"documentation":{"id":14961,"nodeType":"StructuredDocumentation","src":"53672:58:15","text":"Asserts that two arrays of `bytes32` values are equal."},"functionSelector":"0cc9ee84","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"53744:8:15","parameters":{"id":14968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14964,"mutability":"mutable","name":"left","nameLocation":"53772:4:15","nodeType":"VariableDeclaration","scope":14970,"src":"53753:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14962,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53753:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14963,"nodeType":"ArrayTypeName","src":"53753:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":14967,"mutability":"mutable","name":"right","nameLocation":"53797:5:15","nodeType":"VariableDeclaration","scope":14970,"src":"53778:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14965,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53778:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14966,"nodeType":"ArrayTypeName","src":"53778:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"53752:51:15"},"returnParameters":{"id":14969,"nodeType":"ParameterList","parameters":[],"src":"53817:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14982,"nodeType":"FunctionDefinition","src":"53944:106:15","nodes":[],"documentation":{"id":14971,"nodeType":"StructuredDocumentation","src":"53824:115:15","text":"Asserts that two arrays of `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"e03e9177","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"53953:8:15","parameters":{"id":14980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14974,"mutability":"mutable","name":"left","nameLocation":"53981:4:15","nodeType":"VariableDeclaration","scope":14982,"src":"53962:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14972,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53962:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14973,"nodeType":"ArrayTypeName","src":"53962:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":14977,"mutability":"mutable","name":"right","nameLocation":"54006:5:15","nodeType":"VariableDeclaration","scope":14982,"src":"53987:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":14975,"name":"bytes32","nodeType":"ElementaryTypeName","src":"53987:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":14976,"nodeType":"ArrayTypeName","src":"53987:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":14979,"mutability":"mutable","name":"error","nameLocation":"54029:5:15","nodeType":"VariableDeclaration","scope":14982,"src":"54013:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":14978,"name":"string","nodeType":"ElementaryTypeName","src":"54013:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"53961:74:15"},"returnParameters":{"id":14981,"nodeType":"ParameterList","parameters":[],"src":"54049:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":14992,"nodeType":"FunctionDefinition","src":"54118:81:15","nodes":[],"documentation":{"id":14983,"nodeType":"StructuredDocumentation","src":"54056:57:15","text":"Asserts that two arrays of `string` values are equal."},"functionSelector":"cf1c049c","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"54127:8:15","parameters":{"id":14990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14986,"mutability":"mutable","name":"left","nameLocation":"54154:4:15","nodeType":"VariableDeclaration","scope":14992,"src":"54136:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14984,"name":"string","nodeType":"ElementaryTypeName","src":"54136:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14985,"nodeType":"ArrayTypeName","src":"54136:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":14989,"mutability":"mutable","name":"right","nameLocation":"54178:5:15","nodeType":"VariableDeclaration","scope":14992,"src":"54160:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14987,"name":"string","nodeType":"ElementaryTypeName","src":"54160:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14988,"nodeType":"ArrayTypeName","src":"54160:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"54135:49:15"},"returnParameters":{"id":14991,"nodeType":"ParameterList","parameters":[],"src":"54198:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15004,"nodeType":"FunctionDefinition","src":"54324:104:15","nodes":[],"documentation":{"id":14993,"nodeType":"StructuredDocumentation","src":"54205:114:15","text":"Asserts that two arrays of `string` values are equal and includes error message into revert string on failure."},"functionSelector":"eff6b27d","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"54333:8:15","parameters":{"id":15002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14996,"mutability":"mutable","name":"left","nameLocation":"54360:4:15","nodeType":"VariableDeclaration","scope":15004,"src":"54342:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14994,"name":"string","nodeType":"ElementaryTypeName","src":"54342:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14995,"nodeType":"ArrayTypeName","src":"54342:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":14999,"mutability":"mutable","name":"right","nameLocation":"54384:5:15","nodeType":"VariableDeclaration","scope":15004,"src":"54366:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":14997,"name":"string","nodeType":"ElementaryTypeName","src":"54366:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":14998,"nodeType":"ArrayTypeName","src":"54366:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":15001,"mutability":"mutable","name":"error","nameLocation":"54407:5:15","nodeType":"VariableDeclaration","scope":15004,"src":"54391:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15000,"name":"string","nodeType":"ElementaryTypeName","src":"54391:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54341:72:15"},"returnParameters":{"id":15003,"nodeType":"ParameterList","parameters":[],"src":"54427:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15014,"nodeType":"FunctionDefinition","src":"54495:79:15","nodes":[],"documentation":{"id":15005,"nodeType":"StructuredDocumentation","src":"54434:56:15","text":"Asserts that two arrays of `bytes` values are equal."},"functionSelector":"e5fb9b4a","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"54504:8:15","parameters":{"id":15012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15008,"mutability":"mutable","name":"left","nameLocation":"54530:4:15","nodeType":"VariableDeclaration","scope":15014,"src":"54513:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":15006,"name":"bytes","nodeType":"ElementaryTypeName","src":"54513:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":15007,"nodeType":"ArrayTypeName","src":"54513:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":15011,"mutability":"mutable","name":"right","nameLocation":"54553:5:15","nodeType":"VariableDeclaration","scope":15014,"src":"54536:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":15009,"name":"bytes","nodeType":"ElementaryTypeName","src":"54536:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":15010,"nodeType":"ArrayTypeName","src":"54536:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"54512:47:15"},"returnParameters":{"id":15013,"nodeType":"ParameterList","parameters":[],"src":"54573:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15026,"nodeType":"FunctionDefinition","src":"54698:102:15","nodes":[],"documentation":{"id":15015,"nodeType":"StructuredDocumentation","src":"54580:113:15","text":"Asserts that two arrays of `bytes` values are equal and includes error message into revert string on failure."},"functionSelector":"f413f0b6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"54707:8:15","parameters":{"id":15024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15018,"mutability":"mutable","name":"left","nameLocation":"54733:4:15","nodeType":"VariableDeclaration","scope":15026,"src":"54716:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":15016,"name":"bytes","nodeType":"ElementaryTypeName","src":"54716:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":15017,"nodeType":"ArrayTypeName","src":"54716:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":15021,"mutability":"mutable","name":"right","nameLocation":"54756:5:15","nodeType":"VariableDeclaration","scope":15026,"src":"54739:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":15019,"name":"bytes","nodeType":"ElementaryTypeName","src":"54739:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":15020,"nodeType":"ArrayTypeName","src":"54739:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":15023,"mutability":"mutable","name":"error","nameLocation":"54779:5:15","nodeType":"VariableDeclaration","scope":15026,"src":"54763:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15022,"name":"string","nodeType":"ElementaryTypeName","src":"54763:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54715:70:15"},"returnParameters":{"id":15025,"nodeType":"ParameterList","parameters":[],"src":"54799:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15036,"nodeType":"FunctionDefinition","src":"54916:84:15","nodes":[],"documentation":{"id":15027,"nodeType":"StructuredDocumentation","src":"54806:105:15","text":"Asserts that two `uint256` values are equal and includes error message into revert string on failure."},"functionSelector":"88b44c85","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"54925:8:15","parameters":{"id":15034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15029,"mutability":"mutable","name":"left","nameLocation":"54942:4:15","nodeType":"VariableDeclaration","scope":15036,"src":"54934:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15028,"name":"uint256","nodeType":"ElementaryTypeName","src":"54934:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15031,"mutability":"mutable","name":"right","nameLocation":"54956:5:15","nodeType":"VariableDeclaration","scope":15036,"src":"54948:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15030,"name":"uint256","nodeType":"ElementaryTypeName","src":"54948:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15033,"mutability":"mutable","name":"error","nameLocation":"54979:5:15","nodeType":"VariableDeclaration","scope":15036,"src":"54963:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15032,"name":"string","nodeType":"ElementaryTypeName","src":"54963:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"54933:52:15"},"returnParameters":{"id":15035,"nodeType":"ParameterList","parameters":[],"src":"54999:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15044,"nodeType":"FunctionDefinition","src":"55058:59:15","nodes":[],"documentation":{"id":15037,"nodeType":"StructuredDocumentation","src":"55006:47:15","text":"Asserts that two `int256` values are equal."},"functionSelector":"fe74f05b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"55067:8:15","parameters":{"id":15042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15039,"mutability":"mutable","name":"left","nameLocation":"55083:4:15","nodeType":"VariableDeclaration","scope":15044,"src":"55076:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15038,"name":"int256","nodeType":"ElementaryTypeName","src":"55076:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15041,"mutability":"mutable","name":"right","nameLocation":"55096:5:15","nodeType":"VariableDeclaration","scope":15044,"src":"55089:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15040,"name":"int256","nodeType":"ElementaryTypeName","src":"55089:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"55075:27:15"},"returnParameters":{"id":15043,"nodeType":"ParameterList","parameters":[],"src":"55116:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15054,"nodeType":"FunctionDefinition","src":"55232:82:15","nodes":[],"documentation":{"id":15045,"nodeType":"StructuredDocumentation","src":"55123:104:15","text":"Asserts that two `int256` values are equal and includes error message into revert string on failure."},"functionSelector":"714a2f13","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"55241:8:15","parameters":{"id":15052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15047,"mutability":"mutable","name":"left","nameLocation":"55257:4:15","nodeType":"VariableDeclaration","scope":15054,"src":"55250:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15046,"name":"int256","nodeType":"ElementaryTypeName","src":"55250:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15049,"mutability":"mutable","name":"right","nameLocation":"55270:5:15","nodeType":"VariableDeclaration","scope":15054,"src":"55263:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15048,"name":"int256","nodeType":"ElementaryTypeName","src":"55263:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15051,"mutability":"mutable","name":"error","nameLocation":"55293:5:15","nodeType":"VariableDeclaration","scope":15054,"src":"55277:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15050,"name":"string","nodeType":"ElementaryTypeName","src":"55277:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55249:50:15"},"returnParameters":{"id":15053,"nodeType":"ParameterList","parameters":[],"src":"55313:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15062,"nodeType":"FunctionDefinition","src":"55373:61:15","nodes":[],"documentation":{"id":15055,"nodeType":"StructuredDocumentation","src":"55320:48:15","text":"Asserts that two `address` values are equal."},"functionSelector":"515361f6","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"55382:8:15","parameters":{"id":15060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15057,"mutability":"mutable","name":"left","nameLocation":"55399:4:15","nodeType":"VariableDeclaration","scope":15062,"src":"55391:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15056,"name":"address","nodeType":"ElementaryTypeName","src":"55391:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15059,"mutability":"mutable","name":"right","nameLocation":"55413:5:15","nodeType":"VariableDeclaration","scope":15062,"src":"55405:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15058,"name":"address","nodeType":"ElementaryTypeName","src":"55405:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"55390:29:15"},"returnParameters":{"id":15061,"nodeType":"ParameterList","parameters":[],"src":"55433:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15072,"nodeType":"FunctionDefinition","src":"55550:84:15","nodes":[],"documentation":{"id":15063,"nodeType":"StructuredDocumentation","src":"55440:105:15","text":"Asserts that two `address` values are equal and includes error message into revert string on failure."},"functionSelector":"2f2769d1","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"55559:8:15","parameters":{"id":15070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15065,"mutability":"mutable","name":"left","nameLocation":"55576:4:15","nodeType":"VariableDeclaration","scope":15072,"src":"55568:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15064,"name":"address","nodeType":"ElementaryTypeName","src":"55568:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15067,"mutability":"mutable","name":"right","nameLocation":"55590:5:15","nodeType":"VariableDeclaration","scope":15072,"src":"55582:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15066,"name":"address","nodeType":"ElementaryTypeName","src":"55582:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15069,"mutability":"mutable","name":"error","nameLocation":"55613:5:15","nodeType":"VariableDeclaration","scope":15072,"src":"55597:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15068,"name":"string","nodeType":"ElementaryTypeName","src":"55597:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55567:52:15"},"returnParameters":{"id":15071,"nodeType":"ParameterList","parameters":[],"src":"55633:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15080,"nodeType":"FunctionDefinition","src":"55693:61:15","nodes":[],"documentation":{"id":15073,"nodeType":"StructuredDocumentation","src":"55640:48:15","text":"Asserts that two `bytes32` values are equal."},"functionSelector":"7c84c69b","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"55702:8:15","parameters":{"id":15078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15075,"mutability":"mutable","name":"left","nameLocation":"55719:4:15","nodeType":"VariableDeclaration","scope":15080,"src":"55711:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15074,"name":"bytes32","nodeType":"ElementaryTypeName","src":"55711:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15077,"mutability":"mutable","name":"right","nameLocation":"55733:5:15","nodeType":"VariableDeclaration","scope":15080,"src":"55725:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15076,"name":"bytes32","nodeType":"ElementaryTypeName","src":"55725:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"55710:29:15"},"returnParameters":{"id":15079,"nodeType":"ParameterList","parameters":[],"src":"55753:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15090,"nodeType":"FunctionDefinition","src":"55870:84:15","nodes":[],"documentation":{"id":15081,"nodeType":"StructuredDocumentation","src":"55760:105:15","text":"Asserts that two `bytes32` values are equal and includes error message into revert string on failure."},"functionSelector":"c1fa1ed0","implemented":false,"kind":"function","modifiers":[],"name":"assertEq","nameLocation":"55879:8:15","parameters":{"id":15088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15083,"mutability":"mutable","name":"left","nameLocation":"55896:4:15","nodeType":"VariableDeclaration","scope":15090,"src":"55888:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15082,"name":"bytes32","nodeType":"ElementaryTypeName","src":"55888:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15085,"mutability":"mutable","name":"right","nameLocation":"55910:5:15","nodeType":"VariableDeclaration","scope":15090,"src":"55902:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15084,"name":"bytes32","nodeType":"ElementaryTypeName","src":"55902:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15087,"mutability":"mutable","name":"error","nameLocation":"55933:5:15","nodeType":"VariableDeclaration","scope":15090,"src":"55917:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15086,"name":"string","nodeType":"ElementaryTypeName","src":"55917:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"55887:52:15"},"returnParameters":{"id":15089,"nodeType":"ParameterList","parameters":[],"src":"55953:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15096,"nodeType":"FunctionDefinition","src":"56011:51:15","nodes":[],"documentation":{"id":15091,"nodeType":"StructuredDocumentation","src":"55960:46:15","text":"Asserts that the given condition is false."},"functionSelector":"a5982885","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"56020:11:15","parameters":{"id":15094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15093,"mutability":"mutable","name":"condition","nameLocation":"56037:9:15","nodeType":"VariableDeclaration","scope":15096,"src":"56032:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15092,"name":"bool","nodeType":"ElementaryTypeName","src":"56032:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"56031:16:15"},"returnParameters":{"id":15095,"nodeType":"ParameterList","parameters":[],"src":"56061:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15104,"nodeType":"FunctionDefinition","src":"56176:74:15","nodes":[],"documentation":{"id":15097,"nodeType":"StructuredDocumentation","src":"56068:103:15","text":"Asserts that the given condition is false and includes error message into revert string on failure."},"functionSelector":"7ba04809","implemented":false,"kind":"function","modifiers":[],"name":"assertFalse","nameLocation":"56185:11:15","parameters":{"id":15102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15099,"mutability":"mutable","name":"condition","nameLocation":"56202:9:15","nodeType":"VariableDeclaration","scope":15104,"src":"56197:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15098,"name":"bool","nodeType":"ElementaryTypeName","src":"56197:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15101,"mutability":"mutable","name":"error","nameLocation":"56229:5:15","nodeType":"VariableDeclaration","scope":15104,"src":"56213:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15100,"name":"string","nodeType":"ElementaryTypeName","src":"56213:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56196:39:15"},"returnParameters":{"id":15103,"nodeType":"ParameterList","parameters":[],"src":"56249:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15114,"nodeType":"FunctionDefinition","src":"56411:86:15","nodes":[],"documentation":{"id":15105,"nodeType":"StructuredDocumentation","src":"56256:150:15","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"3d1fe08a","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"56420:15:15","parameters":{"id":15112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15107,"mutability":"mutable","name":"left","nameLocation":"56444:4:15","nodeType":"VariableDeclaration","scope":15114,"src":"56436:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15106,"name":"uint256","nodeType":"ElementaryTypeName","src":"56436:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15109,"mutability":"mutable","name":"right","nameLocation":"56458:5:15","nodeType":"VariableDeclaration","scope":15114,"src":"56450:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15108,"name":"uint256","nodeType":"ElementaryTypeName","src":"56450:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15111,"mutability":"mutable","name":"decimals","nameLocation":"56473:8:15","nodeType":"VariableDeclaration","scope":15114,"src":"56465:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15110,"name":"uint256","nodeType":"ElementaryTypeName","src":"56465:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"56435:47:15"},"returnParameters":{"id":15113,"nodeType":"ParameterList","parameters":[],"src":"56496:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15126,"nodeType":"FunctionDefinition","src":"56712:109:15","nodes":[],"documentation":{"id":15115,"nodeType":"StructuredDocumentation","src":"56503:204:15","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"8bff9133","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"56721:15:15","parameters":{"id":15124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15117,"mutability":"mutable","name":"left","nameLocation":"56745:4:15","nodeType":"VariableDeclaration","scope":15126,"src":"56737:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15116,"name":"uint256","nodeType":"ElementaryTypeName","src":"56737:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15119,"mutability":"mutable","name":"right","nameLocation":"56759:5:15","nodeType":"VariableDeclaration","scope":15126,"src":"56751:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15118,"name":"uint256","nodeType":"ElementaryTypeName","src":"56751:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15121,"mutability":"mutable","name":"decimals","nameLocation":"56774:8:15","nodeType":"VariableDeclaration","scope":15126,"src":"56766:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15120,"name":"uint256","nodeType":"ElementaryTypeName","src":"56766:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15123,"mutability":"mutable","name":"error","nameLocation":"56800:5:15","nodeType":"VariableDeclaration","scope":15126,"src":"56784:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15122,"name":"string","nodeType":"ElementaryTypeName","src":"56784:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"56736:70:15"},"returnParameters":{"id":15125,"nodeType":"ParameterList","parameters":[],"src":"56820:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15136,"nodeType":"FunctionDefinition","src":"56981:84:15","nodes":[],"documentation":{"id":15127,"nodeType":"StructuredDocumentation","src":"56827:149:15","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"dc28c0f1","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"56990:15:15","parameters":{"id":15134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15129,"mutability":"mutable","name":"left","nameLocation":"57013:4:15","nodeType":"VariableDeclaration","scope":15136,"src":"57006:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15128,"name":"int256","nodeType":"ElementaryTypeName","src":"57006:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15131,"mutability":"mutable","name":"right","nameLocation":"57026:5:15","nodeType":"VariableDeclaration","scope":15136,"src":"57019:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15130,"name":"int256","nodeType":"ElementaryTypeName","src":"57019:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15133,"mutability":"mutable","name":"decimals","nameLocation":"57041:8:15","nodeType":"VariableDeclaration","scope":15136,"src":"57033:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15132,"name":"uint256","nodeType":"ElementaryTypeName","src":"57033:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"57005:45:15"},"returnParameters":{"id":15135,"nodeType":"ParameterList","parameters":[],"src":"57064:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15148,"nodeType":"FunctionDefinition","src":"57279:107:15","nodes":[],"documentation":{"id":15137,"nodeType":"StructuredDocumentation","src":"57071:203:15","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"5df93c9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGeDecimal","nameLocation":"57288:15:15","parameters":{"id":15146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15139,"mutability":"mutable","name":"left","nameLocation":"57311:4:15","nodeType":"VariableDeclaration","scope":15148,"src":"57304:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15138,"name":"int256","nodeType":"ElementaryTypeName","src":"57304:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15141,"mutability":"mutable","name":"right","nameLocation":"57324:5:15","nodeType":"VariableDeclaration","scope":15148,"src":"57317:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15140,"name":"int256","nodeType":"ElementaryTypeName","src":"57317:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15143,"mutability":"mutable","name":"decimals","nameLocation":"57339:8:15","nodeType":"VariableDeclaration","scope":15148,"src":"57331:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15142,"name":"uint256","nodeType":"ElementaryTypeName","src":"57331:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15145,"mutability":"mutable","name":"error","nameLocation":"57365:5:15","nodeType":"VariableDeclaration","scope":15148,"src":"57349:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15144,"name":"string","nodeType":"ElementaryTypeName","src":"57349:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57303:68:15"},"returnParameters":{"id":15147,"nodeType":"ParameterList","parameters":[],"src":"57385:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15156,"nodeType":"FunctionDefinition","src":"57490:61:15","nodes":[],"documentation":{"id":15149,"nodeType":"StructuredDocumentation","src":"57392:93:15","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second."},"functionSelector":"a8d4d1d9","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"57499:8:15","parameters":{"id":15154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15151,"mutability":"mutable","name":"left","nameLocation":"57516:4:15","nodeType":"VariableDeclaration","scope":15156,"src":"57508:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15150,"name":"uint256","nodeType":"ElementaryTypeName","src":"57508:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15153,"mutability":"mutable","name":"right","nameLocation":"57530:5:15","nodeType":"VariableDeclaration","scope":15156,"src":"57522:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15152,"name":"uint256","nodeType":"ElementaryTypeName","src":"57522:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"57507:29:15"},"returnParameters":{"id":15155,"nodeType":"ParameterList","parameters":[],"src":"57550:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15166,"nodeType":"FunctionDefinition","src":"57717:84:15","nodes":[],"documentation":{"id":15157,"nodeType":"StructuredDocumentation","src":"57557:155:15","text":"Compares two `uint256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"e25242c0","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"57726:8:15","parameters":{"id":15164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15159,"mutability":"mutable","name":"left","nameLocation":"57743:4:15","nodeType":"VariableDeclaration","scope":15166,"src":"57735:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15158,"name":"uint256","nodeType":"ElementaryTypeName","src":"57735:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15161,"mutability":"mutable","name":"right","nameLocation":"57757:5:15","nodeType":"VariableDeclaration","scope":15166,"src":"57749:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15160,"name":"uint256","nodeType":"ElementaryTypeName","src":"57749:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15163,"mutability":"mutable","name":"error","nameLocation":"57780:5:15","nodeType":"VariableDeclaration","scope":15166,"src":"57764:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15162,"name":"string","nodeType":"ElementaryTypeName","src":"57764:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"57734:52:15"},"returnParameters":{"id":15165,"nodeType":"ParameterList","parameters":[],"src":"57800:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15174,"nodeType":"FunctionDefinition","src":"57904:59:15","nodes":[],"documentation":{"id":15167,"nodeType":"StructuredDocumentation","src":"57807:92:15","text":"Compares two `int256` values. Expects first value to be greater than or equal to second."},"functionSelector":"0a30b771","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"57913:8:15","parameters":{"id":15172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15169,"mutability":"mutable","name":"left","nameLocation":"57929:4:15","nodeType":"VariableDeclaration","scope":15174,"src":"57922:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15168,"name":"int256","nodeType":"ElementaryTypeName","src":"57922:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15171,"mutability":"mutable","name":"right","nameLocation":"57942:5:15","nodeType":"VariableDeclaration","scope":15174,"src":"57935:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15170,"name":"int256","nodeType":"ElementaryTypeName","src":"57935:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"57921:27:15"},"returnParameters":{"id":15173,"nodeType":"ParameterList","parameters":[],"src":"57962:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15184,"nodeType":"FunctionDefinition","src":"58128:82:15","nodes":[],"documentation":{"id":15175,"nodeType":"StructuredDocumentation","src":"57969:154:15","text":"Compares two `int256` values. Expects first value to be greater than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"a84328dd","implemented":false,"kind":"function","modifiers":[],"name":"assertGe","nameLocation":"58137:8:15","parameters":{"id":15182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15177,"mutability":"mutable","name":"left","nameLocation":"58153:4:15","nodeType":"VariableDeclaration","scope":15184,"src":"58146:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15176,"name":"int256","nodeType":"ElementaryTypeName","src":"58146:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15179,"mutability":"mutable","name":"right","nameLocation":"58166:5:15","nodeType":"VariableDeclaration","scope":15184,"src":"58159:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15178,"name":"int256","nodeType":"ElementaryTypeName","src":"58159:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15181,"mutability":"mutable","name":"error","nameLocation":"58189:5:15","nodeType":"VariableDeclaration","scope":15184,"src":"58173:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15180,"name":"string","nodeType":"ElementaryTypeName","src":"58173:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58145:50:15"},"returnParameters":{"id":15183,"nodeType":"ParameterList","parameters":[],"src":"58209:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15194,"nodeType":"FunctionDefinition","src":"58359:86:15","nodes":[],"documentation":{"id":15185,"nodeType":"StructuredDocumentation","src":"58216:138:15","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"eccd2437","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"58368:15:15","parameters":{"id":15192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15187,"mutability":"mutable","name":"left","nameLocation":"58392:4:15","nodeType":"VariableDeclaration","scope":15194,"src":"58384:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15186,"name":"uint256","nodeType":"ElementaryTypeName","src":"58384:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15189,"mutability":"mutable","name":"right","nameLocation":"58406:5:15","nodeType":"VariableDeclaration","scope":15194,"src":"58398:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15188,"name":"uint256","nodeType":"ElementaryTypeName","src":"58398:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15191,"mutability":"mutable","name":"decimals","nameLocation":"58421:8:15","nodeType":"VariableDeclaration","scope":15194,"src":"58413:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15190,"name":"uint256","nodeType":"ElementaryTypeName","src":"58413:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"58383:47:15"},"returnParameters":{"id":15193,"nodeType":"ParameterList","parameters":[],"src":"58444:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15206,"nodeType":"FunctionDefinition","src":"58648:109:15","nodes":[],"documentation":{"id":15195,"nodeType":"StructuredDocumentation","src":"58451:192:15","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"64949a8d","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"58657:15:15","parameters":{"id":15204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15197,"mutability":"mutable","name":"left","nameLocation":"58681:4:15","nodeType":"VariableDeclaration","scope":15206,"src":"58673:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15196,"name":"uint256","nodeType":"ElementaryTypeName","src":"58673:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15199,"mutability":"mutable","name":"right","nameLocation":"58695:5:15","nodeType":"VariableDeclaration","scope":15206,"src":"58687:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15198,"name":"uint256","nodeType":"ElementaryTypeName","src":"58687:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15201,"mutability":"mutable","name":"decimals","nameLocation":"58710:8:15","nodeType":"VariableDeclaration","scope":15206,"src":"58702:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15200,"name":"uint256","nodeType":"ElementaryTypeName","src":"58702:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15203,"mutability":"mutable","name":"error","nameLocation":"58736:5:15","nodeType":"VariableDeclaration","scope":15206,"src":"58720:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15202,"name":"string","nodeType":"ElementaryTypeName","src":"58720:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"58672:70:15"},"returnParameters":{"id":15205,"nodeType":"ParameterList","parameters":[],"src":"58756:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15216,"nodeType":"FunctionDefinition","src":"58905:84:15","nodes":[],"documentation":{"id":15207,"nodeType":"StructuredDocumentation","src":"58763:137:15","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message."},"functionSelector":"78611f0e","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"58914:15:15","parameters":{"id":15214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15209,"mutability":"mutable","name":"left","nameLocation":"58937:4:15","nodeType":"VariableDeclaration","scope":15216,"src":"58930:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15208,"name":"int256","nodeType":"ElementaryTypeName","src":"58930:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15211,"mutability":"mutable","name":"right","nameLocation":"58950:5:15","nodeType":"VariableDeclaration","scope":15216,"src":"58943:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15210,"name":"int256","nodeType":"ElementaryTypeName","src":"58943:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15213,"mutability":"mutable","name":"decimals","nameLocation":"58965:8:15","nodeType":"VariableDeclaration","scope":15216,"src":"58957:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15212,"name":"uint256","nodeType":"ElementaryTypeName","src":"58957:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"58929:45:15"},"returnParameters":{"id":15215,"nodeType":"ParameterList","parameters":[],"src":"58988:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15228,"nodeType":"FunctionDefinition","src":"59191:107:15","nodes":[],"documentation":{"id":15217,"nodeType":"StructuredDocumentation","src":"58995:191:15","text":"Compares two `int256` values. Expects first value to be greater than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"04a5c7ab","implemented":false,"kind":"function","modifiers":[],"name":"assertGtDecimal","nameLocation":"59200:15:15","parameters":{"id":15226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15219,"mutability":"mutable","name":"left","nameLocation":"59223:4:15","nodeType":"VariableDeclaration","scope":15228,"src":"59216:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15218,"name":"int256","nodeType":"ElementaryTypeName","src":"59216:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15221,"mutability":"mutable","name":"right","nameLocation":"59236:5:15","nodeType":"VariableDeclaration","scope":15228,"src":"59229:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15220,"name":"int256","nodeType":"ElementaryTypeName","src":"59229:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15223,"mutability":"mutable","name":"decimals","nameLocation":"59251:8:15","nodeType":"VariableDeclaration","scope":15228,"src":"59243:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15222,"name":"uint256","nodeType":"ElementaryTypeName","src":"59243:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15225,"mutability":"mutable","name":"error","nameLocation":"59277:5:15","nodeType":"VariableDeclaration","scope":15228,"src":"59261:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15224,"name":"string","nodeType":"ElementaryTypeName","src":"59261:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59215:68:15"},"returnParameters":{"id":15227,"nodeType":"ParameterList","parameters":[],"src":"59297:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15236,"nodeType":"FunctionDefinition","src":"59390:61:15","nodes":[],"documentation":{"id":15229,"nodeType":"StructuredDocumentation","src":"59304:81:15","text":"Compares two `uint256` values. Expects first value to be greater than second."},"functionSelector":"db07fcd2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"59399:8:15","parameters":{"id":15234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15231,"mutability":"mutable","name":"left","nameLocation":"59416:4:15","nodeType":"VariableDeclaration","scope":15236,"src":"59408:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15230,"name":"uint256","nodeType":"ElementaryTypeName","src":"59408:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15233,"mutability":"mutable","name":"right","nameLocation":"59430:5:15","nodeType":"VariableDeclaration","scope":15236,"src":"59422:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15232,"name":"uint256","nodeType":"ElementaryTypeName","src":"59422:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"59407:29:15"},"returnParameters":{"id":15235,"nodeType":"ParameterList","parameters":[],"src":"59450:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15246,"nodeType":"FunctionDefinition","src":"59605:84:15","nodes":[],"documentation":{"id":15237,"nodeType":"StructuredDocumentation","src":"59457:143:15","text":"Compares two `uint256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"d9a3c4d2","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"59614:8:15","parameters":{"id":15244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15239,"mutability":"mutable","name":"left","nameLocation":"59631:4:15","nodeType":"VariableDeclaration","scope":15246,"src":"59623:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15238,"name":"uint256","nodeType":"ElementaryTypeName","src":"59623:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15241,"mutability":"mutable","name":"right","nameLocation":"59645:5:15","nodeType":"VariableDeclaration","scope":15246,"src":"59637:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15240,"name":"uint256","nodeType":"ElementaryTypeName","src":"59637:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15243,"mutability":"mutable","name":"error","nameLocation":"59668:5:15","nodeType":"VariableDeclaration","scope":15246,"src":"59652:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15242,"name":"string","nodeType":"ElementaryTypeName","src":"59652:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"59622:52:15"},"returnParameters":{"id":15245,"nodeType":"ParameterList","parameters":[],"src":"59688:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15254,"nodeType":"FunctionDefinition","src":"59780:59:15","nodes":[],"documentation":{"id":15247,"nodeType":"StructuredDocumentation","src":"59695:80:15","text":"Compares two `int256` values. Expects first value to be greater than second."},"functionSelector":"5a362d45","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"59789:8:15","parameters":{"id":15252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15249,"mutability":"mutable","name":"left","nameLocation":"59805:4:15","nodeType":"VariableDeclaration","scope":15254,"src":"59798:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15248,"name":"int256","nodeType":"ElementaryTypeName","src":"59798:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15251,"mutability":"mutable","name":"right","nameLocation":"59818:5:15","nodeType":"VariableDeclaration","scope":15254,"src":"59811:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15250,"name":"int256","nodeType":"ElementaryTypeName","src":"59811:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"59797:27:15"},"returnParameters":{"id":15253,"nodeType":"ParameterList","parameters":[],"src":"59838:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15264,"nodeType":"FunctionDefinition","src":"59992:82:15","nodes":[],"documentation":{"id":15255,"nodeType":"StructuredDocumentation","src":"59845:142:15","text":"Compares two `int256` values. Expects first value to be greater than second.\n Includes error message into revert string on failure."},"functionSelector":"f8d33b9b","implemented":false,"kind":"function","modifiers":[],"name":"assertGt","nameLocation":"60001:8:15","parameters":{"id":15262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15257,"mutability":"mutable","name":"left","nameLocation":"60017:4:15","nodeType":"VariableDeclaration","scope":15264,"src":"60010:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15256,"name":"int256","nodeType":"ElementaryTypeName","src":"60010:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15259,"mutability":"mutable","name":"right","nameLocation":"60030:5:15","nodeType":"VariableDeclaration","scope":15264,"src":"60023:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15258,"name":"int256","nodeType":"ElementaryTypeName","src":"60023:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15261,"mutability":"mutable","name":"error","nameLocation":"60053:5:15","nodeType":"VariableDeclaration","scope":15264,"src":"60037:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15260,"name":"string","nodeType":"ElementaryTypeName","src":"60037:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60009:50:15"},"returnParameters":{"id":15263,"nodeType":"ParameterList","parameters":[],"src":"60073:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15274,"nodeType":"FunctionDefinition","src":"60232:86:15","nodes":[],"documentation":{"id":15265,"nodeType":"StructuredDocumentation","src":"60080:147:15","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"c304aab7","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"60241:15:15","parameters":{"id":15272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15267,"mutability":"mutable","name":"left","nameLocation":"60265:4:15","nodeType":"VariableDeclaration","scope":15274,"src":"60257:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15266,"name":"uint256","nodeType":"ElementaryTypeName","src":"60257:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15269,"mutability":"mutable","name":"right","nameLocation":"60279:5:15","nodeType":"VariableDeclaration","scope":15274,"src":"60271:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15268,"name":"uint256","nodeType":"ElementaryTypeName","src":"60271:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15271,"mutability":"mutable","name":"decimals","nameLocation":"60294:8:15","nodeType":"VariableDeclaration","scope":15274,"src":"60286:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15270,"name":"uint256","nodeType":"ElementaryTypeName","src":"60286:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"60256:47:15"},"returnParameters":{"id":15273,"nodeType":"ParameterList","parameters":[],"src":"60317:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15286,"nodeType":"FunctionDefinition","src":"60530:109:15","nodes":[],"documentation":{"id":15275,"nodeType":"StructuredDocumentation","src":"60324:201:15","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"7fefbbe0","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"60539:15:15","parameters":{"id":15284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15277,"mutability":"mutable","name":"left","nameLocation":"60563:4:15","nodeType":"VariableDeclaration","scope":15286,"src":"60555:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15276,"name":"uint256","nodeType":"ElementaryTypeName","src":"60555:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15279,"mutability":"mutable","name":"right","nameLocation":"60577:5:15","nodeType":"VariableDeclaration","scope":15286,"src":"60569:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15278,"name":"uint256","nodeType":"ElementaryTypeName","src":"60569:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15281,"mutability":"mutable","name":"decimals","nameLocation":"60592:8:15","nodeType":"VariableDeclaration","scope":15286,"src":"60584:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15280,"name":"uint256","nodeType":"ElementaryTypeName","src":"60584:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15283,"mutability":"mutable","name":"error","nameLocation":"60618:5:15","nodeType":"VariableDeclaration","scope":15286,"src":"60602:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15282,"name":"string","nodeType":"ElementaryTypeName","src":"60602:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"60554:70:15"},"returnParameters":{"id":15285,"nodeType":"ParameterList","parameters":[],"src":"60638:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15296,"nodeType":"FunctionDefinition","src":"60796:84:15","nodes":[],"documentation":{"id":15287,"nodeType":"StructuredDocumentation","src":"60645:146:15","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message."},"functionSelector":"11d1364a","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"60805:15:15","parameters":{"id":15294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15289,"mutability":"mutable","name":"left","nameLocation":"60828:4:15","nodeType":"VariableDeclaration","scope":15296,"src":"60821:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15288,"name":"int256","nodeType":"ElementaryTypeName","src":"60821:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15291,"mutability":"mutable","name":"right","nameLocation":"60841:5:15","nodeType":"VariableDeclaration","scope":15296,"src":"60834:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15290,"name":"int256","nodeType":"ElementaryTypeName","src":"60834:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15293,"mutability":"mutable","name":"decimals","nameLocation":"60856:8:15","nodeType":"VariableDeclaration","scope":15296,"src":"60848:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15292,"name":"uint256","nodeType":"ElementaryTypeName","src":"60848:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"60820:45:15"},"returnParameters":{"id":15295,"nodeType":"ParameterList","parameters":[],"src":"60879:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15308,"nodeType":"FunctionDefinition","src":"61091:107:15","nodes":[],"documentation":{"id":15297,"nodeType":"StructuredDocumentation","src":"60886:200:15","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"aa5cf788","implemented":false,"kind":"function","modifiers":[],"name":"assertLeDecimal","nameLocation":"61100:15:15","parameters":{"id":15306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15299,"mutability":"mutable","name":"left","nameLocation":"61123:4:15","nodeType":"VariableDeclaration","scope":15308,"src":"61116:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15298,"name":"int256","nodeType":"ElementaryTypeName","src":"61116:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15301,"mutability":"mutable","name":"right","nameLocation":"61136:5:15","nodeType":"VariableDeclaration","scope":15308,"src":"61129:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15300,"name":"int256","nodeType":"ElementaryTypeName","src":"61129:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15303,"mutability":"mutable","name":"decimals","nameLocation":"61151:8:15","nodeType":"VariableDeclaration","scope":15308,"src":"61143:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15302,"name":"uint256","nodeType":"ElementaryTypeName","src":"61143:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15305,"mutability":"mutable","name":"error","nameLocation":"61177:5:15","nodeType":"VariableDeclaration","scope":15308,"src":"61161:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15304,"name":"string","nodeType":"ElementaryTypeName","src":"61161:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61115:68:15"},"returnParameters":{"id":15307,"nodeType":"ParameterList","parameters":[],"src":"61197:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15316,"nodeType":"FunctionDefinition","src":"61299:61:15","nodes":[],"documentation":{"id":15309,"nodeType":"StructuredDocumentation","src":"61204:90:15","text":"Compares two `uint256` values. Expects first value to be less than or equal to second."},"functionSelector":"8466f415","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"61308:8:15","parameters":{"id":15314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15311,"mutability":"mutable","name":"left","nameLocation":"61325:4:15","nodeType":"VariableDeclaration","scope":15316,"src":"61317:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15310,"name":"uint256","nodeType":"ElementaryTypeName","src":"61317:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15313,"mutability":"mutable","name":"right","nameLocation":"61339:5:15","nodeType":"VariableDeclaration","scope":15316,"src":"61331:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15312,"name":"uint256","nodeType":"ElementaryTypeName","src":"61331:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"61316:29:15"},"returnParameters":{"id":15315,"nodeType":"ParameterList","parameters":[],"src":"61359:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15326,"nodeType":"FunctionDefinition","src":"61523:84:15","nodes":[],"documentation":{"id":15317,"nodeType":"StructuredDocumentation","src":"61366:152:15","text":"Compares two `uint256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"d17d4b0d","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"61532:8:15","parameters":{"id":15324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15319,"mutability":"mutable","name":"left","nameLocation":"61549:4:15","nodeType":"VariableDeclaration","scope":15326,"src":"61541:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15318,"name":"uint256","nodeType":"ElementaryTypeName","src":"61541:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15321,"mutability":"mutable","name":"right","nameLocation":"61563:5:15","nodeType":"VariableDeclaration","scope":15326,"src":"61555:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15320,"name":"uint256","nodeType":"ElementaryTypeName","src":"61555:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15323,"mutability":"mutable","name":"error","nameLocation":"61586:5:15","nodeType":"VariableDeclaration","scope":15326,"src":"61570:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15322,"name":"string","nodeType":"ElementaryTypeName","src":"61570:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61540:52:15"},"returnParameters":{"id":15325,"nodeType":"ParameterList","parameters":[],"src":"61606:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15334,"nodeType":"FunctionDefinition","src":"61707:59:15","nodes":[],"documentation":{"id":15327,"nodeType":"StructuredDocumentation","src":"61613:89:15","text":"Compares two `int256` values. Expects first value to be less than or equal to second."},"functionSelector":"95fd154e","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"61716:8:15","parameters":{"id":15332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15329,"mutability":"mutable","name":"left","nameLocation":"61732:4:15","nodeType":"VariableDeclaration","scope":15334,"src":"61725:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15328,"name":"int256","nodeType":"ElementaryTypeName","src":"61725:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15331,"mutability":"mutable","name":"right","nameLocation":"61745:5:15","nodeType":"VariableDeclaration","scope":15334,"src":"61738:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15330,"name":"int256","nodeType":"ElementaryTypeName","src":"61738:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"61724:27:15"},"returnParameters":{"id":15333,"nodeType":"ParameterList","parameters":[],"src":"61765:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15344,"nodeType":"FunctionDefinition","src":"61928:82:15","nodes":[],"documentation":{"id":15335,"nodeType":"StructuredDocumentation","src":"61772:151:15","text":"Compares two `int256` values. Expects first value to be less than or equal to second.\n Includes error message into revert string on failure."},"functionSelector":"4dfe692c","implemented":false,"kind":"function","modifiers":[],"name":"assertLe","nameLocation":"61937:8:15","parameters":{"id":15342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15337,"mutability":"mutable","name":"left","nameLocation":"61953:4:15","nodeType":"VariableDeclaration","scope":15344,"src":"61946:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15336,"name":"int256","nodeType":"ElementaryTypeName","src":"61946:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15339,"mutability":"mutable","name":"right","nameLocation":"61966:5:15","nodeType":"VariableDeclaration","scope":15344,"src":"61959:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15338,"name":"int256","nodeType":"ElementaryTypeName","src":"61959:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15341,"mutability":"mutable","name":"error","nameLocation":"61989:5:15","nodeType":"VariableDeclaration","scope":15344,"src":"61973:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15340,"name":"string","nodeType":"ElementaryTypeName","src":"61973:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"61945:50:15"},"returnParameters":{"id":15343,"nodeType":"ParameterList","parameters":[],"src":"62009:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15354,"nodeType":"FunctionDefinition","src":"62156:86:15","nodes":[],"documentation":{"id":15345,"nodeType":"StructuredDocumentation","src":"62016:135:15","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"2077337e","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"62165:15:15","parameters":{"id":15352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15347,"mutability":"mutable","name":"left","nameLocation":"62189:4:15","nodeType":"VariableDeclaration","scope":15354,"src":"62181:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15346,"name":"uint256","nodeType":"ElementaryTypeName","src":"62181:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15349,"mutability":"mutable","name":"right","nameLocation":"62203:5:15","nodeType":"VariableDeclaration","scope":15354,"src":"62195:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15348,"name":"uint256","nodeType":"ElementaryTypeName","src":"62195:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15351,"mutability":"mutable","name":"decimals","nameLocation":"62218:8:15","nodeType":"VariableDeclaration","scope":15354,"src":"62210:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15350,"name":"uint256","nodeType":"ElementaryTypeName","src":"62210:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"62180:47:15"},"returnParameters":{"id":15353,"nodeType":"ParameterList","parameters":[],"src":"62241:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15366,"nodeType":"FunctionDefinition","src":"62442:109:15","nodes":[],"documentation":{"id":15355,"nodeType":"StructuredDocumentation","src":"62248:189:15","text":"Compares two `uint256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"a972d037","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"62451:15:15","parameters":{"id":15364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15357,"mutability":"mutable","name":"left","nameLocation":"62475:4:15","nodeType":"VariableDeclaration","scope":15366,"src":"62467:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15356,"name":"uint256","nodeType":"ElementaryTypeName","src":"62467:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15359,"mutability":"mutable","name":"right","nameLocation":"62489:5:15","nodeType":"VariableDeclaration","scope":15366,"src":"62481:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15358,"name":"uint256","nodeType":"ElementaryTypeName","src":"62481:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15361,"mutability":"mutable","name":"decimals","nameLocation":"62504:8:15","nodeType":"VariableDeclaration","scope":15366,"src":"62496:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15360,"name":"uint256","nodeType":"ElementaryTypeName","src":"62496:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15363,"mutability":"mutable","name":"error","nameLocation":"62530:5:15","nodeType":"VariableDeclaration","scope":15366,"src":"62514:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15362,"name":"string","nodeType":"ElementaryTypeName","src":"62514:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"62466:70:15"},"returnParameters":{"id":15365,"nodeType":"ParameterList","parameters":[],"src":"62550:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15376,"nodeType":"FunctionDefinition","src":"62696:84:15","nodes":[],"documentation":{"id":15367,"nodeType":"StructuredDocumentation","src":"62557:134:15","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message."},"functionSelector":"dbe8d88b","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"62705:15:15","parameters":{"id":15374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15369,"mutability":"mutable","name":"left","nameLocation":"62728:4:15","nodeType":"VariableDeclaration","scope":15376,"src":"62721:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15368,"name":"int256","nodeType":"ElementaryTypeName","src":"62721:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15371,"mutability":"mutable","name":"right","nameLocation":"62741:5:15","nodeType":"VariableDeclaration","scope":15376,"src":"62734:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15370,"name":"int256","nodeType":"ElementaryTypeName","src":"62734:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15373,"mutability":"mutable","name":"decimals","nameLocation":"62756:8:15","nodeType":"VariableDeclaration","scope":15376,"src":"62748:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15372,"name":"uint256","nodeType":"ElementaryTypeName","src":"62748:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"62720:45:15"},"returnParameters":{"id":15375,"nodeType":"ParameterList","parameters":[],"src":"62779:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15388,"nodeType":"FunctionDefinition","src":"62979:107:15","nodes":[],"documentation":{"id":15377,"nodeType":"StructuredDocumentation","src":"62786:188:15","text":"Compares two `int256` values. Expects first value to be less than second.\n Formats values with decimals in failure message. Includes error message into revert string on failure."},"functionSelector":"40f0b4e0","implemented":false,"kind":"function","modifiers":[],"name":"assertLtDecimal","nameLocation":"62988:15:15","parameters":{"id":15386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15379,"mutability":"mutable","name":"left","nameLocation":"63011:4:15","nodeType":"VariableDeclaration","scope":15388,"src":"63004:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15378,"name":"int256","nodeType":"ElementaryTypeName","src":"63004:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15381,"mutability":"mutable","name":"right","nameLocation":"63024:5:15","nodeType":"VariableDeclaration","scope":15388,"src":"63017:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15380,"name":"int256","nodeType":"ElementaryTypeName","src":"63017:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15383,"mutability":"mutable","name":"decimals","nameLocation":"63039:8:15","nodeType":"VariableDeclaration","scope":15388,"src":"63031:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15382,"name":"uint256","nodeType":"ElementaryTypeName","src":"63031:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15385,"mutability":"mutable","name":"error","nameLocation":"63065:5:15","nodeType":"VariableDeclaration","scope":15388,"src":"63049:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15384,"name":"string","nodeType":"ElementaryTypeName","src":"63049:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63003:68:15"},"returnParameters":{"id":15387,"nodeType":"ParameterList","parameters":[],"src":"63085:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15396,"nodeType":"FunctionDefinition","src":"63175:61:15","nodes":[],"documentation":{"id":15389,"nodeType":"StructuredDocumentation","src":"63092:78:15","text":"Compares two `uint256` values. Expects first value to be less than second."},"functionSelector":"b12fc005","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"63184:8:15","parameters":{"id":15394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15391,"mutability":"mutable","name":"left","nameLocation":"63201:4:15","nodeType":"VariableDeclaration","scope":15396,"src":"63193:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15390,"name":"uint256","nodeType":"ElementaryTypeName","src":"63193:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15393,"mutability":"mutable","name":"right","nameLocation":"63215:5:15","nodeType":"VariableDeclaration","scope":15396,"src":"63207:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15392,"name":"uint256","nodeType":"ElementaryTypeName","src":"63207:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"63192:29:15"},"returnParameters":{"id":15395,"nodeType":"ParameterList","parameters":[],"src":"63235:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15406,"nodeType":"FunctionDefinition","src":"63387:84:15","nodes":[],"documentation":{"id":15397,"nodeType":"StructuredDocumentation","src":"63242:140:15","text":"Compares two `uint256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"65d5c135","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"63396:8:15","parameters":{"id":15404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15399,"mutability":"mutable","name":"left","nameLocation":"63413:4:15","nodeType":"VariableDeclaration","scope":15406,"src":"63405:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15398,"name":"uint256","nodeType":"ElementaryTypeName","src":"63405:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15401,"mutability":"mutable","name":"right","nameLocation":"63427:5:15","nodeType":"VariableDeclaration","scope":15406,"src":"63419:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15400,"name":"uint256","nodeType":"ElementaryTypeName","src":"63419:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15403,"mutability":"mutable","name":"error","nameLocation":"63450:5:15","nodeType":"VariableDeclaration","scope":15406,"src":"63434:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15402,"name":"string","nodeType":"ElementaryTypeName","src":"63434:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63404:52:15"},"returnParameters":{"id":15405,"nodeType":"ParameterList","parameters":[],"src":"63470:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15414,"nodeType":"FunctionDefinition","src":"63559:59:15","nodes":[],"documentation":{"id":15407,"nodeType":"StructuredDocumentation","src":"63477:77:15","text":"Compares two `int256` values. Expects first value to be less than second."},"functionSelector":"3e914080","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"63568:8:15","parameters":{"id":15412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15409,"mutability":"mutable","name":"left","nameLocation":"63584:4:15","nodeType":"VariableDeclaration","scope":15414,"src":"63577:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15408,"name":"int256","nodeType":"ElementaryTypeName","src":"63577:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15411,"mutability":"mutable","name":"right","nameLocation":"63597:5:15","nodeType":"VariableDeclaration","scope":15414,"src":"63590:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15410,"name":"int256","nodeType":"ElementaryTypeName","src":"63590:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"63576:27:15"},"returnParameters":{"id":15413,"nodeType":"ParameterList","parameters":[],"src":"63617:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15424,"nodeType":"FunctionDefinition","src":"63768:82:15","nodes":[],"documentation":{"id":15415,"nodeType":"StructuredDocumentation","src":"63624:139:15","text":"Compares two `int256` values. Expects first value to be less than second.\n Includes error message into revert string on failure."},"functionSelector":"9ff531e3","implemented":false,"kind":"function","modifiers":[],"name":"assertLt","nameLocation":"63777:8:15","parameters":{"id":15422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15417,"mutability":"mutable","name":"left","nameLocation":"63793:4:15","nodeType":"VariableDeclaration","scope":15424,"src":"63786:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15416,"name":"int256","nodeType":"ElementaryTypeName","src":"63786:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15419,"mutability":"mutable","name":"right","nameLocation":"63806:5:15","nodeType":"VariableDeclaration","scope":15424,"src":"63799:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15418,"name":"int256","nodeType":"ElementaryTypeName","src":"63799:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15421,"mutability":"mutable","name":"error","nameLocation":"63829:5:15","nodeType":"VariableDeclaration","scope":15424,"src":"63813:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15420,"name":"string","nodeType":"ElementaryTypeName","src":"63813:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"63785:50:15"},"returnParameters":{"id":15423,"nodeType":"ParameterList","parameters":[],"src":"63849:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15434,"nodeType":"FunctionDefinition","src":"63963:89:15","nodes":[],"documentation":{"id":15425,"nodeType":"StructuredDocumentation","src":"63856:102:15","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"669efca7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"63972:18:15","parameters":{"id":15432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15427,"mutability":"mutable","name":"left","nameLocation":"63999:4:15","nodeType":"VariableDeclaration","scope":15434,"src":"63991:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15426,"name":"uint256","nodeType":"ElementaryTypeName","src":"63991:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15429,"mutability":"mutable","name":"right","nameLocation":"64013:5:15","nodeType":"VariableDeclaration","scope":15434,"src":"64005:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15428,"name":"uint256","nodeType":"ElementaryTypeName","src":"64005:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15431,"mutability":"mutable","name":"decimals","nameLocation":"64028:8:15","nodeType":"VariableDeclaration","scope":15434,"src":"64020:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15430,"name":"uint256","nodeType":"ElementaryTypeName","src":"64020:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"63990:47:15"},"returnParameters":{"id":15433,"nodeType":"ParameterList","parameters":[],"src":"64051:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15446,"nodeType":"FunctionDefinition","src":"64227:112:15","nodes":[],"documentation":{"id":15435,"nodeType":"StructuredDocumentation","src":"64058:164:15","text":"Asserts that two `uint256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"f5a55558","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"64236:18:15","parameters":{"id":15444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15437,"mutability":"mutable","name":"left","nameLocation":"64263:4:15","nodeType":"VariableDeclaration","scope":15446,"src":"64255:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15436,"name":"uint256","nodeType":"ElementaryTypeName","src":"64255:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15439,"mutability":"mutable","name":"right","nameLocation":"64277:5:15","nodeType":"VariableDeclaration","scope":15446,"src":"64269:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15438,"name":"uint256","nodeType":"ElementaryTypeName","src":"64269:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15441,"mutability":"mutable","name":"decimals","nameLocation":"64292:8:15","nodeType":"VariableDeclaration","scope":15446,"src":"64284:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15440,"name":"uint256","nodeType":"ElementaryTypeName","src":"64284:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15443,"mutability":"mutable","name":"error","nameLocation":"64318:5:15","nodeType":"VariableDeclaration","scope":15446,"src":"64302:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15442,"name":"string","nodeType":"ElementaryTypeName","src":"64302:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64254:70:15"},"returnParameters":{"id":15445,"nodeType":"ParameterList","parameters":[],"src":"64338:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15456,"nodeType":"FunctionDefinition","src":"64451:87:15","nodes":[],"documentation":{"id":15447,"nodeType":"StructuredDocumentation","src":"64345:101:15","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message."},"functionSelector":"14e75680","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"64460:18:15","parameters":{"id":15454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15449,"mutability":"mutable","name":"left","nameLocation":"64486:4:15","nodeType":"VariableDeclaration","scope":15456,"src":"64479:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15448,"name":"int256","nodeType":"ElementaryTypeName","src":"64479:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15451,"mutability":"mutable","name":"right","nameLocation":"64499:5:15","nodeType":"VariableDeclaration","scope":15456,"src":"64492:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15450,"name":"int256","nodeType":"ElementaryTypeName","src":"64492:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15453,"mutability":"mutable","name":"decimals","nameLocation":"64514:8:15","nodeType":"VariableDeclaration","scope":15456,"src":"64506:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15452,"name":"uint256","nodeType":"ElementaryTypeName","src":"64506:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"64478:45:15"},"returnParameters":{"id":15455,"nodeType":"ParameterList","parameters":[],"src":"64537:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15468,"nodeType":"FunctionDefinition","src":"64712:110:15","nodes":[],"documentation":{"id":15457,"nodeType":"StructuredDocumentation","src":"64544:163:15","text":"Asserts that two `int256` values are not equal, formatting them with decimals in failure message.\n Includes error message into revert string on failure."},"functionSelector":"33949f0b","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEqDecimal","nameLocation":"64721:18:15","parameters":{"id":15466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15459,"mutability":"mutable","name":"left","nameLocation":"64747:4:15","nodeType":"VariableDeclaration","scope":15468,"src":"64740:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15458,"name":"int256","nodeType":"ElementaryTypeName","src":"64740:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15461,"mutability":"mutable","name":"right","nameLocation":"64760:5:15","nodeType":"VariableDeclaration","scope":15468,"src":"64753:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15460,"name":"int256","nodeType":"ElementaryTypeName","src":"64753:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15463,"mutability":"mutable","name":"decimals","nameLocation":"64775:8:15","nodeType":"VariableDeclaration","scope":15468,"src":"64767:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15462,"name":"uint256","nodeType":"ElementaryTypeName","src":"64767:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15465,"mutability":"mutable","name":"error","nameLocation":"64801:5:15","nodeType":"VariableDeclaration","scope":15468,"src":"64785:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15464,"name":"string","nodeType":"ElementaryTypeName","src":"64785:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"64739:68:15"},"returnParameters":{"id":15467,"nodeType":"ParameterList","parameters":[],"src":"64821:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15476,"nodeType":"FunctionDefinition","src":"64882:58:15","nodes":[],"documentation":{"id":15469,"nodeType":"StructuredDocumentation","src":"64828:49:15","text":"Asserts that two `bool` values are not equal."},"functionSelector":"236e4d66","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"64891:11:15","parameters":{"id":15474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15471,"mutability":"mutable","name":"left","nameLocation":"64908:4:15","nodeType":"VariableDeclaration","scope":15476,"src":"64903:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15470,"name":"bool","nodeType":"ElementaryTypeName","src":"64903:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15473,"mutability":"mutable","name":"right","nameLocation":"64919:5:15","nodeType":"VariableDeclaration","scope":15476,"src":"64914:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15472,"name":"bool","nodeType":"ElementaryTypeName","src":"64914:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"64902:23:15"},"returnParameters":{"id":15475,"nodeType":"ParameterList","parameters":[],"src":"64939:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15486,"nodeType":"FunctionDefinition","src":"65057:81:15","nodes":[],"documentation":{"id":15477,"nodeType":"StructuredDocumentation","src":"64946:106:15","text":"Asserts that two `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"1091a261","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65066:11:15","parameters":{"id":15484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15479,"mutability":"mutable","name":"left","nameLocation":"65083:4:15","nodeType":"VariableDeclaration","scope":15486,"src":"65078:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15478,"name":"bool","nodeType":"ElementaryTypeName","src":"65078:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15481,"mutability":"mutable","name":"right","nameLocation":"65094:5:15","nodeType":"VariableDeclaration","scope":15486,"src":"65089:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15480,"name":"bool","nodeType":"ElementaryTypeName","src":"65089:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15483,"mutability":"mutable","name":"error","nameLocation":"65117:5:15","nodeType":"VariableDeclaration","scope":15486,"src":"65101:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15482,"name":"string","nodeType":"ElementaryTypeName","src":"65101:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65077:46:15"},"returnParameters":{"id":15485,"nodeType":"ParameterList","parameters":[],"src":"65137:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15494,"nodeType":"FunctionDefinition","src":"65200:80:15","nodes":[],"documentation":{"id":15487,"nodeType":"StructuredDocumentation","src":"65144:51:15","text":"Asserts that two `string` values are not equal."},"functionSelector":"6a8237b3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65209:11:15","parameters":{"id":15492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15489,"mutability":"mutable","name":"left","nameLocation":"65237:4:15","nodeType":"VariableDeclaration","scope":15494,"src":"65221:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15488,"name":"string","nodeType":"ElementaryTypeName","src":"65221:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15491,"mutability":"mutable","name":"right","nameLocation":"65259:5:15","nodeType":"VariableDeclaration","scope":15494,"src":"65243:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15490,"name":"string","nodeType":"ElementaryTypeName","src":"65243:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65220:45:15"},"returnParameters":{"id":15493,"nodeType":"ParameterList","parameters":[],"src":"65279:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15504,"nodeType":"FunctionDefinition","src":"65399:103:15","nodes":[],"documentation":{"id":15495,"nodeType":"StructuredDocumentation","src":"65286:108:15","text":"Asserts that two `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"78bdcea7","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65408:11:15","parameters":{"id":15502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15497,"mutability":"mutable","name":"left","nameLocation":"65436:4:15","nodeType":"VariableDeclaration","scope":15504,"src":"65420:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15496,"name":"string","nodeType":"ElementaryTypeName","src":"65420:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15499,"mutability":"mutable","name":"right","nameLocation":"65458:5:15","nodeType":"VariableDeclaration","scope":15504,"src":"65442:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15498,"name":"string","nodeType":"ElementaryTypeName","src":"65442:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15501,"mutability":"mutable","name":"error","nameLocation":"65481:5:15","nodeType":"VariableDeclaration","scope":15504,"src":"65465:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15500,"name":"string","nodeType":"ElementaryTypeName","src":"65465:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65419:68:15"},"returnParameters":{"id":15503,"nodeType":"ParameterList","parameters":[],"src":"65501:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15512,"nodeType":"FunctionDefinition","src":"65563:78:15","nodes":[],"documentation":{"id":15505,"nodeType":"StructuredDocumentation","src":"65508:50:15","text":"Asserts that two `bytes` values are not equal."},"functionSelector":"3cf78e28","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65572:11:15","parameters":{"id":15510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15507,"mutability":"mutable","name":"left","nameLocation":"65599:4:15","nodeType":"VariableDeclaration","scope":15512,"src":"65584:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15506,"name":"bytes","nodeType":"ElementaryTypeName","src":"65584:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15509,"mutability":"mutable","name":"right","nameLocation":"65620:5:15","nodeType":"VariableDeclaration","scope":15512,"src":"65605:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15508,"name":"bytes","nodeType":"ElementaryTypeName","src":"65605:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"65583:43:15"},"returnParameters":{"id":15511,"nodeType":"ParameterList","parameters":[],"src":"65640:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15522,"nodeType":"FunctionDefinition","src":"65759:101:15","nodes":[],"documentation":{"id":15513,"nodeType":"StructuredDocumentation","src":"65647:107:15","text":"Asserts that two `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"9507540e","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65768:11:15","parameters":{"id":15520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15515,"mutability":"mutable","name":"left","nameLocation":"65795:4:15","nodeType":"VariableDeclaration","scope":15522,"src":"65780:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15514,"name":"bytes","nodeType":"ElementaryTypeName","src":"65780:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15517,"mutability":"mutable","name":"right","nameLocation":"65816:5:15","nodeType":"VariableDeclaration","scope":15522,"src":"65801:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":15516,"name":"bytes","nodeType":"ElementaryTypeName","src":"65801:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":15519,"mutability":"mutable","name":"error","nameLocation":"65839:5:15","nodeType":"VariableDeclaration","scope":15522,"src":"65823:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15518,"name":"string","nodeType":"ElementaryTypeName","src":"65823:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"65779:66:15"},"returnParameters":{"id":15521,"nodeType":"ParameterList","parameters":[],"src":"65859:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15532,"nodeType":"FunctionDefinition","src":"65930:80:15","nodes":[],"documentation":{"id":15523,"nodeType":"StructuredDocumentation","src":"65866:59:15","text":"Asserts that two arrays of `bool` values are not equal."},"functionSelector":"286fafea","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"65939:11:15","parameters":{"id":15530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15526,"mutability":"mutable","name":"left","nameLocation":"65967:4:15","nodeType":"VariableDeclaration","scope":15532,"src":"65951:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":15524,"name":"bool","nodeType":"ElementaryTypeName","src":"65951:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15525,"nodeType":"ArrayTypeName","src":"65951:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":15529,"mutability":"mutable","name":"right","nameLocation":"65989:5:15","nodeType":"VariableDeclaration","scope":15532,"src":"65973:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":15527,"name":"bool","nodeType":"ElementaryTypeName","src":"65973:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15528,"nodeType":"ArrayTypeName","src":"65973:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"65950:45:15"},"returnParameters":{"id":15531,"nodeType":"ParameterList","parameters":[],"src":"66009:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15544,"nodeType":"FunctionDefinition","src":"66137:103:15","nodes":[],"documentation":{"id":15533,"nodeType":"StructuredDocumentation","src":"66016:116:15","text":"Asserts that two arrays of `bool` values are not equal and includes error message into revert string on failure."},"functionSelector":"62c6f9fb","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66146:11:15","parameters":{"id":15542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15536,"mutability":"mutable","name":"left","nameLocation":"66174:4:15","nodeType":"VariableDeclaration","scope":15544,"src":"66158:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":15534,"name":"bool","nodeType":"ElementaryTypeName","src":"66158:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15535,"nodeType":"ArrayTypeName","src":"66158:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":15539,"mutability":"mutable","name":"right","nameLocation":"66196:5:15","nodeType":"VariableDeclaration","scope":15544,"src":"66180:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":15537,"name":"bool","nodeType":"ElementaryTypeName","src":"66180:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15538,"nodeType":"ArrayTypeName","src":"66180:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":15541,"mutability":"mutable","name":"error","nameLocation":"66219:5:15","nodeType":"VariableDeclaration","scope":15544,"src":"66203:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15540,"name":"string","nodeType":"ElementaryTypeName","src":"66203:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66157:68:15"},"returnParameters":{"id":15543,"nodeType":"ParameterList","parameters":[],"src":"66239:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15554,"nodeType":"FunctionDefinition","src":"66313:86:15","nodes":[],"documentation":{"id":15545,"nodeType":"StructuredDocumentation","src":"66246:62:15","text":"Asserts that two arrays of `uint256` values are not equal."},"functionSelector":"56f29cba","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66322:11:15","parameters":{"id":15552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15548,"mutability":"mutable","name":"left","nameLocation":"66353:4:15","nodeType":"VariableDeclaration","scope":15554,"src":"66334:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15546,"name":"uint256","nodeType":"ElementaryTypeName","src":"66334:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15547,"nodeType":"ArrayTypeName","src":"66334:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":15551,"mutability":"mutable","name":"right","nameLocation":"66378:5:15","nodeType":"VariableDeclaration","scope":15554,"src":"66359:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15549,"name":"uint256","nodeType":"ElementaryTypeName","src":"66359:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15550,"nodeType":"ArrayTypeName","src":"66359:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"66333:51:15"},"returnParameters":{"id":15553,"nodeType":"ParameterList","parameters":[],"src":"66398:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15566,"nodeType":"FunctionDefinition","src":"66529:109:15","nodes":[],"documentation":{"id":15555,"nodeType":"StructuredDocumentation","src":"66405:119:15","text":"Asserts that two arrays of `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"9a7fbd8f","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66538:11:15","parameters":{"id":15564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15558,"mutability":"mutable","name":"left","nameLocation":"66569:4:15","nodeType":"VariableDeclaration","scope":15566,"src":"66550:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15556,"name":"uint256","nodeType":"ElementaryTypeName","src":"66550:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15557,"nodeType":"ArrayTypeName","src":"66550:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":15561,"mutability":"mutable","name":"right","nameLocation":"66594:5:15","nodeType":"VariableDeclaration","scope":15566,"src":"66575:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15559,"name":"uint256","nodeType":"ElementaryTypeName","src":"66575:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15560,"nodeType":"ArrayTypeName","src":"66575:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":15563,"mutability":"mutable","name":"error","nameLocation":"66617:5:15","nodeType":"VariableDeclaration","scope":15566,"src":"66601:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15562,"name":"string","nodeType":"ElementaryTypeName","src":"66601:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66549:74:15"},"returnParameters":{"id":15565,"nodeType":"ParameterList","parameters":[],"src":"66637:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15576,"nodeType":"FunctionDefinition","src":"66710:84:15","nodes":[],"documentation":{"id":15567,"nodeType":"StructuredDocumentation","src":"66644:61:15","text":"Asserts that two arrays of `int256` values are not equal."},"functionSelector":"0b72f4ef","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66719:11:15","parameters":{"id":15574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15570,"mutability":"mutable","name":"left","nameLocation":"66749:4:15","nodeType":"VariableDeclaration","scope":15576,"src":"66731:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":15568,"name":"int256","nodeType":"ElementaryTypeName","src":"66731:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":15569,"nodeType":"ArrayTypeName","src":"66731:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":15573,"mutability":"mutable","name":"right","nameLocation":"66773:5:15","nodeType":"VariableDeclaration","scope":15576,"src":"66755:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":15571,"name":"int256","nodeType":"ElementaryTypeName","src":"66755:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":15572,"nodeType":"ArrayTypeName","src":"66755:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"66730:49:15"},"returnParameters":{"id":15575,"nodeType":"ParameterList","parameters":[],"src":"66793:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15588,"nodeType":"FunctionDefinition","src":"66923:107:15","nodes":[],"documentation":{"id":15577,"nodeType":"StructuredDocumentation","src":"66800:118:15","text":"Asserts that two arrays of `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"d3977322","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"66932:11:15","parameters":{"id":15586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15580,"mutability":"mutable","name":"left","nameLocation":"66962:4:15","nodeType":"VariableDeclaration","scope":15588,"src":"66944:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":15578,"name":"int256","nodeType":"ElementaryTypeName","src":"66944:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":15579,"nodeType":"ArrayTypeName","src":"66944:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":15583,"mutability":"mutable","name":"right","nameLocation":"66986:5:15","nodeType":"VariableDeclaration","scope":15588,"src":"66968:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_calldata_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":15581,"name":"int256","nodeType":"ElementaryTypeName","src":"66968:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":15582,"nodeType":"ArrayTypeName","src":"66968:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"},{"constant":false,"id":15585,"mutability":"mutable","name":"error","nameLocation":"67009:5:15","nodeType":"VariableDeclaration","scope":15588,"src":"66993:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15584,"name":"string","nodeType":"ElementaryTypeName","src":"66993:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"66943:72:15"},"returnParameters":{"id":15587,"nodeType":"ParameterList","parameters":[],"src":"67029:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15596,"nodeType":"FunctionDefinition","src":"67093:64:15","nodes":[],"documentation":{"id":15589,"nodeType":"StructuredDocumentation","src":"67036:52:15","text":"Asserts that two `uint256` values are not equal."},"functionSelector":"b7909320","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"67102:11:15","parameters":{"id":15594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15591,"mutability":"mutable","name":"left","nameLocation":"67122:4:15","nodeType":"VariableDeclaration","scope":15596,"src":"67114:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15590,"name":"uint256","nodeType":"ElementaryTypeName","src":"67114:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15593,"mutability":"mutable","name":"right","nameLocation":"67136:5:15","nodeType":"VariableDeclaration","scope":15596,"src":"67128:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15592,"name":"uint256","nodeType":"ElementaryTypeName","src":"67128:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"67113:29:15"},"returnParameters":{"id":15595,"nodeType":"ParameterList","parameters":[],"src":"67156:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15606,"nodeType":"FunctionDefinition","src":"67230:86:15","nodes":[],"documentation":{"id":15597,"nodeType":"StructuredDocumentation","src":"67163:62:15","text":"Asserts that two arrays of `address` values are not equal."},"functionSelector":"46d0b252","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"67239:11:15","parameters":{"id":15604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15600,"mutability":"mutable","name":"left","nameLocation":"67270:4:15","nodeType":"VariableDeclaration","scope":15606,"src":"67251:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15598,"name":"address","nodeType":"ElementaryTypeName","src":"67251:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15599,"nodeType":"ArrayTypeName","src":"67251:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":15603,"mutability":"mutable","name":"right","nameLocation":"67295:5:15","nodeType":"VariableDeclaration","scope":15606,"src":"67276:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15601,"name":"address","nodeType":"ElementaryTypeName","src":"67276:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15602,"nodeType":"ArrayTypeName","src":"67276:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"67250:51:15"},"returnParameters":{"id":15605,"nodeType":"ParameterList","parameters":[],"src":"67315:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15618,"nodeType":"FunctionDefinition","src":"67446:109:15","nodes":[],"documentation":{"id":15607,"nodeType":"StructuredDocumentation","src":"67322:119:15","text":"Asserts that two arrays of `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"72c7e0b5","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"67455:11:15","parameters":{"id":15616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15610,"mutability":"mutable","name":"left","nameLocation":"67486:4:15","nodeType":"VariableDeclaration","scope":15618,"src":"67467:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15608,"name":"address","nodeType":"ElementaryTypeName","src":"67467:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15609,"nodeType":"ArrayTypeName","src":"67467:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":15613,"mutability":"mutable","name":"right","nameLocation":"67511:5:15","nodeType":"VariableDeclaration","scope":15618,"src":"67492:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15611,"name":"address","nodeType":"ElementaryTypeName","src":"67492:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15612,"nodeType":"ArrayTypeName","src":"67492:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":15615,"mutability":"mutable","name":"error","nameLocation":"67534:5:15","nodeType":"VariableDeclaration","scope":15618,"src":"67518:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15614,"name":"string","nodeType":"ElementaryTypeName","src":"67518:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67466:74:15"},"returnParameters":{"id":15617,"nodeType":"ParameterList","parameters":[],"src":"67554:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15628,"nodeType":"FunctionDefinition","src":"67628:86:15","nodes":[],"documentation":{"id":15619,"nodeType":"StructuredDocumentation","src":"67561:62:15","text":"Asserts that two arrays of `bytes32` values are not equal."},"functionSelector":"0603ea68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"67637:11:15","parameters":{"id":15626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15622,"mutability":"mutable","name":"left","nameLocation":"67668:4:15","nodeType":"VariableDeclaration","scope":15628,"src":"67649:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15620,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67649:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15621,"nodeType":"ArrayTypeName","src":"67649:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":15625,"mutability":"mutable","name":"right","nameLocation":"67693:5:15","nodeType":"VariableDeclaration","scope":15628,"src":"67674:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15623,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67674:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15624,"nodeType":"ArrayTypeName","src":"67674:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"67648:51:15"},"returnParameters":{"id":15627,"nodeType":"ParameterList","parameters":[],"src":"67713:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15640,"nodeType":"FunctionDefinition","src":"67844:109:15","nodes":[],"documentation":{"id":15629,"nodeType":"StructuredDocumentation","src":"67720:119:15","text":"Asserts that two arrays of `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b873634c","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"67853:11:15","parameters":{"id":15638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15632,"mutability":"mutable","name":"left","nameLocation":"67884:4:15","nodeType":"VariableDeclaration","scope":15640,"src":"67865:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15630,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67865:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15631,"nodeType":"ArrayTypeName","src":"67865:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":15635,"mutability":"mutable","name":"right","nameLocation":"67909:5:15","nodeType":"VariableDeclaration","scope":15640,"src":"67890:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15633,"name":"bytes32","nodeType":"ElementaryTypeName","src":"67890:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15634,"nodeType":"ArrayTypeName","src":"67890:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":15637,"mutability":"mutable","name":"error","nameLocation":"67932:5:15","nodeType":"VariableDeclaration","scope":15640,"src":"67916:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15636,"name":"string","nodeType":"ElementaryTypeName","src":"67916:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"67864:74:15"},"returnParameters":{"id":15639,"nodeType":"ParameterList","parameters":[],"src":"67952:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15650,"nodeType":"FunctionDefinition","src":"68025:84:15","nodes":[],"documentation":{"id":15641,"nodeType":"StructuredDocumentation","src":"67959:61:15","text":"Asserts that two arrays of `string` values are not equal."},"functionSelector":"bdfacbe8","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"68034:11:15","parameters":{"id":15648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15644,"mutability":"mutable","name":"left","nameLocation":"68064:4:15","nodeType":"VariableDeclaration","scope":15650,"src":"68046:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15642,"name":"string","nodeType":"ElementaryTypeName","src":"68046:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15643,"nodeType":"ArrayTypeName","src":"68046:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":15647,"mutability":"mutable","name":"right","nameLocation":"68088:5:15","nodeType":"VariableDeclaration","scope":15650,"src":"68070:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15645,"name":"string","nodeType":"ElementaryTypeName","src":"68070:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15646,"nodeType":"ArrayTypeName","src":"68070:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"68045:49:15"},"returnParameters":{"id":15649,"nodeType":"ParameterList","parameters":[],"src":"68108:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15662,"nodeType":"FunctionDefinition","src":"68238:107:15","nodes":[],"documentation":{"id":15651,"nodeType":"StructuredDocumentation","src":"68115:118:15","text":"Asserts that two arrays of `string` values are not equal and includes error message into revert string on failure."},"functionSelector":"b67187f3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"68247:11:15","parameters":{"id":15660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15654,"mutability":"mutable","name":"left","nameLocation":"68277:4:15","nodeType":"VariableDeclaration","scope":15662,"src":"68259:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15652,"name":"string","nodeType":"ElementaryTypeName","src":"68259:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15653,"nodeType":"ArrayTypeName","src":"68259:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":15657,"mutability":"mutable","name":"right","nameLocation":"68301:5:15","nodeType":"VariableDeclaration","scope":15662,"src":"68283:23:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15655,"name":"string","nodeType":"ElementaryTypeName","src":"68283:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15656,"nodeType":"ArrayTypeName","src":"68283:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":15659,"mutability":"mutable","name":"error","nameLocation":"68324:5:15","nodeType":"VariableDeclaration","scope":15662,"src":"68308:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15658,"name":"string","nodeType":"ElementaryTypeName","src":"68308:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68258:72:15"},"returnParameters":{"id":15661,"nodeType":"ParameterList","parameters":[],"src":"68344:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15672,"nodeType":"FunctionDefinition","src":"68416:82:15","nodes":[],"documentation":{"id":15663,"nodeType":"StructuredDocumentation","src":"68351:60:15","text":"Asserts that two arrays of `bytes` values are not equal."},"functionSelector":"edecd035","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"68425:11:15","parameters":{"id":15670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15666,"mutability":"mutable","name":"left","nameLocation":"68454:4:15","nodeType":"VariableDeclaration","scope":15672,"src":"68437:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":15664,"name":"bytes","nodeType":"ElementaryTypeName","src":"68437:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":15665,"nodeType":"ArrayTypeName","src":"68437:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":15669,"mutability":"mutable","name":"right","nameLocation":"68477:5:15","nodeType":"VariableDeclaration","scope":15672,"src":"68460:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":15667,"name":"bytes","nodeType":"ElementaryTypeName","src":"68460:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":15668,"nodeType":"ArrayTypeName","src":"68460:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"68436:47:15"},"returnParameters":{"id":15671,"nodeType":"ParameterList","parameters":[],"src":"68497:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15684,"nodeType":"FunctionDefinition","src":"68626:105:15","nodes":[],"documentation":{"id":15673,"nodeType":"StructuredDocumentation","src":"68504:117:15","text":"Asserts that two arrays of `bytes` values are not equal and includes error message into revert string on failure."},"functionSelector":"1dcd1f68","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"68635:11:15","parameters":{"id":15682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15676,"mutability":"mutable","name":"left","nameLocation":"68664:4:15","nodeType":"VariableDeclaration","scope":15684,"src":"68647:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":15674,"name":"bytes","nodeType":"ElementaryTypeName","src":"68647:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":15675,"nodeType":"ArrayTypeName","src":"68647:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":15679,"mutability":"mutable","name":"right","nameLocation":"68687:5:15","nodeType":"VariableDeclaration","scope":15684,"src":"68670:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":15677,"name":"bytes","nodeType":"ElementaryTypeName","src":"68670:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":15678,"nodeType":"ArrayTypeName","src":"68670:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":15681,"mutability":"mutable","name":"error","nameLocation":"68710:5:15","nodeType":"VariableDeclaration","scope":15684,"src":"68694:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15680,"name":"string","nodeType":"ElementaryTypeName","src":"68694:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68646:70:15"},"returnParameters":{"id":15683,"nodeType":"ParameterList","parameters":[],"src":"68730:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15694,"nodeType":"FunctionDefinition","src":"68851:87:15","nodes":[],"documentation":{"id":15685,"nodeType":"StructuredDocumentation","src":"68737:109:15","text":"Asserts that two `uint256` values are not equal and includes error message into revert string on failure."},"functionSelector":"98f9bdbd","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"68860:11:15","parameters":{"id":15692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15687,"mutability":"mutable","name":"left","nameLocation":"68880:4:15","nodeType":"VariableDeclaration","scope":15694,"src":"68872:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15686,"name":"uint256","nodeType":"ElementaryTypeName","src":"68872:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15689,"mutability":"mutable","name":"right","nameLocation":"68894:5:15","nodeType":"VariableDeclaration","scope":15694,"src":"68886:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15688,"name":"uint256","nodeType":"ElementaryTypeName","src":"68886:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":15691,"mutability":"mutable","name":"error","nameLocation":"68917:5:15","nodeType":"VariableDeclaration","scope":15694,"src":"68901:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15690,"name":"string","nodeType":"ElementaryTypeName","src":"68901:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"68871:52:15"},"returnParameters":{"id":15693,"nodeType":"ParameterList","parameters":[],"src":"68937:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15702,"nodeType":"FunctionDefinition","src":"69000:62:15","nodes":[],"documentation":{"id":15695,"nodeType":"StructuredDocumentation","src":"68944:51:15","text":"Asserts that two `int256` values are not equal."},"functionSelector":"f4c004e3","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"69009:11:15","parameters":{"id":15700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15697,"mutability":"mutable","name":"left","nameLocation":"69028:4:15","nodeType":"VariableDeclaration","scope":15702,"src":"69021:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15696,"name":"int256","nodeType":"ElementaryTypeName","src":"69021:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15699,"mutability":"mutable","name":"right","nameLocation":"69041:5:15","nodeType":"VariableDeclaration","scope":15702,"src":"69034:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15698,"name":"int256","nodeType":"ElementaryTypeName","src":"69034:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"69020:27:15"},"returnParameters":{"id":15701,"nodeType":"ParameterList","parameters":[],"src":"69061:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15712,"nodeType":"FunctionDefinition","src":"69181:85:15","nodes":[],"documentation":{"id":15703,"nodeType":"StructuredDocumentation","src":"69068:108:15","text":"Asserts that two `int256` values are not equal and includes error message into revert string on failure."},"functionSelector":"4724c5b9","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"69190:11:15","parameters":{"id":15710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15705,"mutability":"mutable","name":"left","nameLocation":"69209:4:15","nodeType":"VariableDeclaration","scope":15712,"src":"69202:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15704,"name":"int256","nodeType":"ElementaryTypeName","src":"69202:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15707,"mutability":"mutable","name":"right","nameLocation":"69222:5:15","nodeType":"VariableDeclaration","scope":15712,"src":"69215:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15706,"name":"int256","nodeType":"ElementaryTypeName","src":"69215:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":15709,"mutability":"mutable","name":"error","nameLocation":"69245:5:15","nodeType":"VariableDeclaration","scope":15712,"src":"69229:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15708,"name":"string","nodeType":"ElementaryTypeName","src":"69229:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69201:50:15"},"returnParameters":{"id":15711,"nodeType":"ParameterList","parameters":[],"src":"69265:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15720,"nodeType":"FunctionDefinition","src":"69329:64:15","nodes":[],"documentation":{"id":15713,"nodeType":"StructuredDocumentation","src":"69272:52:15","text":"Asserts that two `address` values are not equal."},"functionSelector":"b12e1694","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"69338:11:15","parameters":{"id":15718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15715,"mutability":"mutable","name":"left","nameLocation":"69358:4:15","nodeType":"VariableDeclaration","scope":15720,"src":"69350:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15714,"name":"address","nodeType":"ElementaryTypeName","src":"69350:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15717,"mutability":"mutable","name":"right","nameLocation":"69372:5:15","nodeType":"VariableDeclaration","scope":15720,"src":"69364:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15716,"name":"address","nodeType":"ElementaryTypeName","src":"69364:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"69349:29:15"},"returnParameters":{"id":15719,"nodeType":"ParameterList","parameters":[],"src":"69392:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15730,"nodeType":"FunctionDefinition","src":"69513:87:15","nodes":[],"documentation":{"id":15721,"nodeType":"StructuredDocumentation","src":"69399:109:15","text":"Asserts that two `address` values are not equal and includes error message into revert string on failure."},"functionSelector":"8775a591","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"69522:11:15","parameters":{"id":15728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15723,"mutability":"mutable","name":"left","nameLocation":"69542:4:15","nodeType":"VariableDeclaration","scope":15730,"src":"69534:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15722,"name":"address","nodeType":"ElementaryTypeName","src":"69534:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15725,"mutability":"mutable","name":"right","nameLocation":"69556:5:15","nodeType":"VariableDeclaration","scope":15730,"src":"69548:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15724,"name":"address","nodeType":"ElementaryTypeName","src":"69548:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15727,"mutability":"mutable","name":"error","nameLocation":"69579:5:15","nodeType":"VariableDeclaration","scope":15730,"src":"69563:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15726,"name":"string","nodeType":"ElementaryTypeName","src":"69563:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69533:52:15"},"returnParameters":{"id":15729,"nodeType":"ParameterList","parameters":[],"src":"69599:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15738,"nodeType":"FunctionDefinition","src":"69663:64:15","nodes":[],"documentation":{"id":15731,"nodeType":"StructuredDocumentation","src":"69606:52:15","text":"Asserts that two `bytes32` values are not equal."},"functionSelector":"898e83fc","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"69672:11:15","parameters":{"id":15736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15733,"mutability":"mutable","name":"left","nameLocation":"69692:4:15","nodeType":"VariableDeclaration","scope":15738,"src":"69684:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15732,"name":"bytes32","nodeType":"ElementaryTypeName","src":"69684:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15735,"mutability":"mutable","name":"right","nameLocation":"69706:5:15","nodeType":"VariableDeclaration","scope":15738,"src":"69698:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15734,"name":"bytes32","nodeType":"ElementaryTypeName","src":"69698:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"69683:29:15"},"returnParameters":{"id":15737,"nodeType":"ParameterList","parameters":[],"src":"69726:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15748,"nodeType":"FunctionDefinition","src":"69847:87:15","nodes":[],"documentation":{"id":15739,"nodeType":"StructuredDocumentation","src":"69733:109:15","text":"Asserts that two `bytes32` values are not equal and includes error message into revert string on failure."},"functionSelector":"b2332f51","implemented":false,"kind":"function","modifiers":[],"name":"assertNotEq","nameLocation":"69856:11:15","parameters":{"id":15746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15741,"mutability":"mutable","name":"left","nameLocation":"69876:4:15","nodeType":"VariableDeclaration","scope":15748,"src":"69868:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15740,"name":"bytes32","nodeType":"ElementaryTypeName","src":"69868:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15743,"mutability":"mutable","name":"right","nameLocation":"69890:5:15","nodeType":"VariableDeclaration","scope":15748,"src":"69882:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15742,"name":"bytes32","nodeType":"ElementaryTypeName","src":"69882:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":15745,"mutability":"mutable","name":"error","nameLocation":"69913:5:15","nodeType":"VariableDeclaration","scope":15748,"src":"69897:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15744,"name":"string","nodeType":"ElementaryTypeName","src":"69897:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"69867:52:15"},"returnParameters":{"id":15747,"nodeType":"ParameterList","parameters":[],"src":"69933:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15754,"nodeType":"FunctionDefinition","src":"69990:50:15","nodes":[],"documentation":{"id":15749,"nodeType":"StructuredDocumentation","src":"69940:45:15","text":"Asserts that the given condition is true."},"functionSelector":"0c9fd581","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"69999:10:15","parameters":{"id":15752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15751,"mutability":"mutable","name":"condition","nameLocation":"70015:9:15","nodeType":"VariableDeclaration","scope":15754,"src":"70010:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15750,"name":"bool","nodeType":"ElementaryTypeName","src":"70010:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"70009:16:15"},"returnParameters":{"id":15753,"nodeType":"ParameterList","parameters":[],"src":"70039:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15762,"nodeType":"FunctionDefinition","src":"70153:73:15","nodes":[],"documentation":{"id":15755,"nodeType":"StructuredDocumentation","src":"70046:102:15","text":"Asserts that the given condition is true and includes error message into revert string on failure."},"functionSelector":"a34edc03","implemented":false,"kind":"function","modifiers":[],"name":"assertTrue","nameLocation":"70162:10:15","parameters":{"id":15760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15757,"mutability":"mutable","name":"condition","nameLocation":"70178:9:15","nodeType":"VariableDeclaration","scope":15762,"src":"70173:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15756,"name":"bool","nodeType":"ElementaryTypeName","src":"70173:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":15759,"mutability":"mutable","name":"error","nameLocation":"70205:5:15","nodeType":"VariableDeclaration","scope":15762,"src":"70189:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15758,"name":"string","nodeType":"ElementaryTypeName","src":"70189:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70172:39:15"},"returnParameters":{"id":15761,"nodeType":"ParameterList","parameters":[],"src":"70225:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15768,"nodeType":"FunctionDefinition","src":"70321:46:15","nodes":[],"documentation":{"id":15763,"nodeType":"StructuredDocumentation","src":"70232:84:15","text":"If the condition is false, discard this run's fuzz inputs and generate new ones."},"functionSelector":"4c63e562","implemented":false,"kind":"function","modifiers":[],"name":"assume","nameLocation":"70330:6:15","parameters":{"id":15766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15765,"mutability":"mutable","name":"condition","nameLocation":"70342:9:15","nodeType":"VariableDeclaration","scope":15768,"src":"70337:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15764,"name":"bool","nodeType":"ElementaryTypeName","src":"70337:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"70336:16:15"},"returnParameters":{"id":15767,"nodeType":"ParameterList","parameters":[],"src":"70366:0:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15774,"nodeType":"FunctionDefinition","src":"70429:51:15","nodes":[],"documentation":{"id":15769,"nodeType":"StructuredDocumentation","src":"70373:51:15","text":"Writes a breakpoint to jump to in the debugger."},"functionSelector":"f0259e92","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"70438:10:15","parameters":{"id":15772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15771,"mutability":"mutable","name":"char","nameLocation":"70465:4:15","nodeType":"VariableDeclaration","scope":15774,"src":"70449:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15770,"name":"string","nodeType":"ElementaryTypeName","src":"70449:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70448:22:15"},"returnParameters":{"id":15773,"nodeType":"ParameterList","parameters":[],"src":"70479:0:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15782,"nodeType":"FunctionDefinition","src":"70554:63:15","nodes":[],"documentation":{"id":15775,"nodeType":"StructuredDocumentation","src":"70486:63:15","text":"Writes a conditional breakpoint to jump to in the debugger."},"functionSelector":"f7d39a8d","implemented":false,"kind":"function","modifiers":[],"name":"breakpoint","nameLocation":"70563:10:15","parameters":{"id":15780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15777,"mutability":"mutable","name":"char","nameLocation":"70590:4:15","nodeType":"VariableDeclaration","scope":15782,"src":"70574:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15776,"name":"string","nodeType":"ElementaryTypeName","src":"70574:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15779,"mutability":"mutable","name":"value","nameLocation":"70601:5:15","nodeType":"VariableDeclaration","scope":15782,"src":"70596:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15778,"name":"bool","nodeType":"ElementaryTypeName","src":"70596:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"70573:34:15"},"returnParameters":{"id":15781,"nodeType":"ParameterList","parameters":[],"src":"70616:0:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15790,"nodeType":"FunctionDefinition","src":"70672:85:15","nodes":[],"documentation":{"id":15783,"nodeType":"StructuredDocumentation","src":"70623:44:15","text":"Returns the RPC url for the given alias."},"functionSelector":"975a6ce9","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrl","nameLocation":"70681:6:15","parameters":{"id":15786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15785,"mutability":"mutable","name":"rpcAlias","nameLocation":"70704:8:15","nodeType":"VariableDeclaration","scope":15790,"src":"70688:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15784,"name":"string","nodeType":"ElementaryTypeName","src":"70688:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70687:26:15"},"returnParameters":{"id":15789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15788,"mutability":"mutable","name":"json","nameLocation":"70751:4:15","nodeType":"VariableDeclaration","scope":15790,"src":"70737:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15787,"name":"string","nodeType":"ElementaryTypeName","src":"70737:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"70736:20:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15798,"nodeType":"FunctionDefinition","src":"70822:67:15","nodes":[],"documentation":{"id":15791,"nodeType":"StructuredDocumentation","src":"70763:54:15","text":"Returns all rpc urls and their aliases as structs."},"functionSelector":"9d2ad72a","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrlStructs","nameLocation":"70831:13:15","parameters":{"id":15792,"nodeType":"ParameterList","parameters":[],"src":"70844:2:15"},"returnParameters":{"id":15797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15796,"mutability":"mutable","name":"urls","nameLocation":"70883:4:15","nodeType":"VariableDeclaration","scope":15798,"src":"70870:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$12951_memory_ptr_$dyn_memory_ptr","typeString":"struct VmSafe.Rpc[]"},"typeName":{"baseType":{"id":15794,"nodeType":"UserDefinedTypeName","pathNode":{"id":15793,"name":"Rpc","nameLocations":["70870:3:15"],"nodeType":"IdentifierPath","referencedDeclaration":12951,"src":"70870:3:15"},"referencedDeclaration":12951,"src":"70870:3:15","typeDescriptions":{"typeIdentifier":"t_struct$_Rpc_$12951_storage_ptr","typeString":"struct VmSafe.Rpc"}},"id":15795,"nodeType":"ArrayTypeName","src":"70870:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Rpc_$12951_storage_$dyn_storage_ptr","typeString":"struct VmSafe.Rpc[]"}},"visibility":"internal"}],"src":"70869:19:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15807,"nodeType":"FunctionDefinition","src":"70960:67:15","nodes":[],"documentation":{"id":15799,"nodeType":"StructuredDocumentation","src":"70895:60:15","text":"Returns all rpc urls and their aliases `[alias, url][]`."},"functionSelector":"a85a8418","implemented":false,"kind":"function","modifiers":[],"name":"rpcUrls","nameLocation":"70969:7:15","parameters":{"id":15800,"nodeType":"ParameterList","parameters":[],"src":"70976:2:15"},"returnParameters":{"id":15806,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15805,"mutability":"mutable","name":"urls","nameLocation":"71021:4:15","nodeType":"VariableDeclaration","scope":15807,"src":"71002:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_memory_ptr_$2_memory_ptr_$dyn_memory_ptr","typeString":"string[2][]"},"typeName":{"baseType":{"baseType":{"id":15801,"name":"string","nodeType":"ElementaryTypeName","src":"71002:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15803,"length":{"hexValue":"32","id":15802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"71009:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"ArrayTypeName","src":"71002:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$2_storage_ptr","typeString":"string[2]"}},"id":15804,"nodeType":"ArrayTypeName","src":"71002:11:15","typeDescriptions":{"typeIdentifier":"t_array$_t_array$_t_string_storage_$2_storage_$dyn_storage_ptr","typeString":"string[2][]"}},"visibility":"internal"}],"src":"71001:25:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15813,"nodeType":"FunctionDefinition","src":"71108:42:15","nodes":[],"documentation":{"id":15808,"nodeType":"StructuredDocumentation","src":"71033:70:15","text":"Suspends execution of the main thread for `duration` milliseconds."},"functionSelector":"fa9d8713","implemented":false,"kind":"function","modifiers":[],"name":"sleep","nameLocation":"71117:5:15","parameters":{"id":15811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15810,"mutability":"mutable","name":"duration","nameLocation":"71131:8:15","nodeType":"VariableDeclaration","scope":15813,"src":"71123:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15809,"name":"uint256","nodeType":"ElementaryTypeName","src":"71123:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"71122:18:15"},"returnParameters":{"id":15812,"nodeType":"ParameterList","parameters":[],"src":"71149:0:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":15823,"nodeType":"FunctionDefinition","src":"71235:95:15","nodes":[],"documentation":{"id":15814,"nodeType":"StructuredDocumentation","src":"71187:43:15","text":"Checks if `key` exists in a TOML table."},"functionSelector":"600903ad","implemented":false,"kind":"function","modifiers":[],"name":"keyExistsToml","nameLocation":"71244:13:15","parameters":{"id":15819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15816,"mutability":"mutable","name":"toml","nameLocation":"71274:4:15","nodeType":"VariableDeclaration","scope":15823,"src":"71258:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15815,"name":"string","nodeType":"ElementaryTypeName","src":"71258:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15818,"mutability":"mutable","name":"key","nameLocation":"71296:3:15","nodeType":"VariableDeclaration","scope":15823,"src":"71280:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15817,"name":"string","nodeType":"ElementaryTypeName","src":"71280:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71257:43:15"},"returnParameters":{"id":15822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15823,"src":"71324:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15820,"name":"bool","nodeType":"ElementaryTypeName","src":"71324:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"71323:6:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":15833,"nodeType":"FunctionDefinition","src":"71411:101:15","nodes":[],"documentation":{"id":15824,"nodeType":"StructuredDocumentation","src":"71336:70:15","text":"Parses a string of TOML data at `key` and coerces it to `address`."},"functionSelector":"65e7c844","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddress","nameLocation":"71420:16:15","parameters":{"id":15829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15826,"mutability":"mutable","name":"toml","nameLocation":"71453:4:15","nodeType":"VariableDeclaration","scope":15833,"src":"71437:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15825,"name":"string","nodeType":"ElementaryTypeName","src":"71437:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15828,"mutability":"mutable","name":"key","nameLocation":"71475:3:15","nodeType":"VariableDeclaration","scope":15833,"src":"71459:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15827,"name":"string","nodeType":"ElementaryTypeName","src":"71459:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71436:43:15"},"returnParameters":{"id":15832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15831,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15833,"src":"71503:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15830,"name":"address","nodeType":"ElementaryTypeName","src":"71503:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"71502:9:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15844,"nodeType":"FunctionDefinition","src":"71595:139:15","nodes":[],"documentation":{"id":15834,"nodeType":"StructuredDocumentation","src":"71518:72:15","text":"Parses a string of TOML data at `key` and coerces it to `address[]`."},"functionSelector":"65c428e7","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlAddressArray","nameLocation":"71604:21:15","parameters":{"id":15839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15836,"mutability":"mutable","name":"toml","nameLocation":"71642:4:15","nodeType":"VariableDeclaration","scope":15844,"src":"71626:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15835,"name":"string","nodeType":"ElementaryTypeName","src":"71626:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15838,"mutability":"mutable","name":"key","nameLocation":"71664:3:15","nodeType":"VariableDeclaration","scope":15844,"src":"71648:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15837,"name":"string","nodeType":"ElementaryTypeName","src":"71648:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71625:43:15"},"returnParameters":{"id":15843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15844,"src":"71716:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":15840,"name":"address","nodeType":"ElementaryTypeName","src":"71716:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":15841,"nodeType":"ArrayTypeName","src":"71716:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"71715:18:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15854,"nodeType":"FunctionDefinition","src":"71812:95:15","nodes":[],"documentation":{"id":15845,"nodeType":"StructuredDocumentation","src":"71740:67:15","text":"Parses a string of TOML data at `key` and coerces it to `bool`."},"functionSelector":"d30dced6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBool","nameLocation":"71821:13:15","parameters":{"id":15850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15847,"mutability":"mutable","name":"toml","nameLocation":"71851:4:15","nodeType":"VariableDeclaration","scope":15854,"src":"71835:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15846,"name":"string","nodeType":"ElementaryTypeName","src":"71835:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15849,"mutability":"mutable","name":"key","nameLocation":"71873:3:15","nodeType":"VariableDeclaration","scope":15854,"src":"71857:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15848,"name":"string","nodeType":"ElementaryTypeName","src":"71857:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"71834:43:15"},"returnParameters":{"id":15853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15854,"src":"71901:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":15851,"name":"bool","nodeType":"ElementaryTypeName","src":"71901:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"71900:6:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15865,"nodeType":"FunctionDefinition","src":"71987:109:15","nodes":[],"documentation":{"id":15855,"nodeType":"StructuredDocumentation","src":"71913:69:15","text":"Parses a string of TOML data at `key` and coerces it to `bool[]`."},"functionSelector":"127cfe9a","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBoolArray","nameLocation":"71996:18:15","parameters":{"id":15860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15857,"mutability":"mutable","name":"toml","nameLocation":"72031:4:15","nodeType":"VariableDeclaration","scope":15865,"src":"72015:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15856,"name":"string","nodeType":"ElementaryTypeName","src":"72015:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15859,"mutability":"mutable","name":"key","nameLocation":"72053:3:15","nodeType":"VariableDeclaration","scope":15865,"src":"72037:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15858,"name":"string","nodeType":"ElementaryTypeName","src":"72037:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72014:43:15"},"returnParameters":{"id":15864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15863,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15865,"src":"72081:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":15861,"name":"bool","nodeType":"ElementaryTypeName","src":"72081:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":15862,"nodeType":"ArrayTypeName","src":"72081:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"}],"src":"72080:15:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15875,"nodeType":"FunctionDefinition","src":"72175:104:15","nodes":[],"documentation":{"id":15866,"nodeType":"StructuredDocumentation","src":"72102:68:15","text":"Parses a string of TOML data at `key` and coerces it to `bytes`."},"functionSelector":"d77bfdb9","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes","nameLocation":"72184:14:15","parameters":{"id":15871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15868,"mutability":"mutable","name":"toml","nameLocation":"72215:4:15","nodeType":"VariableDeclaration","scope":15875,"src":"72199:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15867,"name":"string","nodeType":"ElementaryTypeName","src":"72199:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15870,"mutability":"mutable","name":"key","nameLocation":"72237:3:15","nodeType":"VariableDeclaration","scope":15875,"src":"72221:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15869,"name":"string","nodeType":"ElementaryTypeName","src":"72221:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72198:43:15"},"returnParameters":{"id":15874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15875,"src":"72265:12:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":15872,"name":"bytes","nodeType":"ElementaryTypeName","src":"72265:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"72264:14:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15885,"nodeType":"FunctionDefinition","src":"72360:101:15","nodes":[],"documentation":{"id":15876,"nodeType":"StructuredDocumentation","src":"72285:70:15","text":"Parses a string of TOML data at `key` and coerces it to `bytes32`."},"functionSelector":"8e214810","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32","nameLocation":"72369:16:15","parameters":{"id":15881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15878,"mutability":"mutable","name":"toml","nameLocation":"72402:4:15","nodeType":"VariableDeclaration","scope":15885,"src":"72386:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15877,"name":"string","nodeType":"ElementaryTypeName","src":"72386:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15880,"mutability":"mutable","name":"key","nameLocation":"72424:3:15","nodeType":"VariableDeclaration","scope":15885,"src":"72408:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15879,"name":"string","nodeType":"ElementaryTypeName","src":"72408:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72385:43:15"},"returnParameters":{"id":15884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15885,"src":"72452:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15882,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72452:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"72451:9:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15896,"nodeType":"FunctionDefinition","src":"72544:139:15","nodes":[],"documentation":{"id":15886,"nodeType":"StructuredDocumentation","src":"72467:72:15","text":"Parses a string of TOML data at `key` and coerces it to `bytes32[]`."},"functionSelector":"3e716f81","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytes32Array","nameLocation":"72553:21:15","parameters":{"id":15891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15888,"mutability":"mutable","name":"toml","nameLocation":"72591:4:15","nodeType":"VariableDeclaration","scope":15896,"src":"72575:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15887,"name":"string","nodeType":"ElementaryTypeName","src":"72575:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15890,"mutability":"mutable","name":"key","nameLocation":"72613:3:15","nodeType":"VariableDeclaration","scope":15896,"src":"72597:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15889,"name":"string","nodeType":"ElementaryTypeName","src":"72597:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72574:43:15"},"returnParameters":{"id":15895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15896,"src":"72665:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":15892,"name":"bytes32","nodeType":"ElementaryTypeName","src":"72665:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":15893,"nodeType":"ArrayTypeName","src":"72665:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"72664:18:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15907,"nodeType":"FunctionDefinition","src":"72764:111:15","nodes":[],"documentation":{"id":15897,"nodeType":"StructuredDocumentation","src":"72689:70:15","text":"Parses a string of TOML data at `key` and coerces it to `bytes[]`."},"functionSelector":"b197c247","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlBytesArray","nameLocation":"72773:19:15","parameters":{"id":15902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15899,"mutability":"mutable","name":"toml","nameLocation":"72809:4:15","nodeType":"VariableDeclaration","scope":15907,"src":"72793:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15898,"name":"string","nodeType":"ElementaryTypeName","src":"72793:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15901,"mutability":"mutable","name":"key","nameLocation":"72831:3:15","nodeType":"VariableDeclaration","scope":15907,"src":"72815:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15900,"name":"string","nodeType":"ElementaryTypeName","src":"72815:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72792:43:15"},"returnParameters":{"id":15906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15907,"src":"72859:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":15903,"name":"bytes","nodeType":"ElementaryTypeName","src":"72859:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":15904,"nodeType":"ArrayTypeName","src":"72859:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"72858:16:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15917,"nodeType":"FunctionDefinition","src":"72955:96:15","nodes":[],"documentation":{"id":15908,"nodeType":"StructuredDocumentation","src":"72881:69:15","text":"Parses a string of TOML data at `key` and coerces it to `int256`."},"functionSelector":"c1350739","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlInt","nameLocation":"72964:12:15","parameters":{"id":15913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15910,"mutability":"mutable","name":"toml","nameLocation":"72993:4:15","nodeType":"VariableDeclaration","scope":15917,"src":"72977:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15909,"name":"string","nodeType":"ElementaryTypeName","src":"72977:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15912,"mutability":"mutable","name":"key","nameLocation":"73015:3:15","nodeType":"VariableDeclaration","scope":15917,"src":"72999:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15911,"name":"string","nodeType":"ElementaryTypeName","src":"72999:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"72976:43:15"},"returnParameters":{"id":15916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15917,"src":"73043:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":15914,"name":"int256","nodeType":"ElementaryTypeName","src":"73043:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"73042:8:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15928,"nodeType":"FunctionDefinition","src":"73133:110:15","nodes":[],"documentation":{"id":15918,"nodeType":"StructuredDocumentation","src":"73057:71:15","text":"Parses a string of TOML data at `key` and coerces it to `int256[]`."},"functionSelector":"d3522ae6","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlIntArray","nameLocation":"73142:17:15","parameters":{"id":15923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15920,"mutability":"mutable","name":"toml","nameLocation":"73176:4:15","nodeType":"VariableDeclaration","scope":15928,"src":"73160:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15919,"name":"string","nodeType":"ElementaryTypeName","src":"73160:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15922,"mutability":"mutable","name":"key","nameLocation":"73198:3:15","nodeType":"VariableDeclaration","scope":15928,"src":"73182:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15921,"name":"string","nodeType":"ElementaryTypeName","src":"73182:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73159:43:15"},"returnParameters":{"id":15927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15928,"src":"73226:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_memory_ptr","typeString":"int256[]"},"typeName":{"baseType":{"id":15924,"name":"int256","nodeType":"ElementaryTypeName","src":"73226:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":15925,"nodeType":"ArrayTypeName","src":"73226:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_int256_$dyn_storage_ptr","typeString":"int256[]"}},"visibility":"internal"}],"src":"73225:17:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15939,"nodeType":"FunctionDefinition","src":"73307:111:15","nodes":[],"documentation":{"id":15929,"nodeType":"StructuredDocumentation","src":"73249:53:15","text":"Returns an array of all the keys in a TOML table."},"functionSelector":"812a44b2","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlKeys","nameLocation":"73316:13:15","parameters":{"id":15934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15931,"mutability":"mutable","name":"toml","nameLocation":"73346:4:15","nodeType":"VariableDeclaration","scope":15939,"src":"73330:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15930,"name":"string","nodeType":"ElementaryTypeName","src":"73330:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15933,"mutability":"mutable","name":"key","nameLocation":"73368:3:15","nodeType":"VariableDeclaration","scope":15939,"src":"73352:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15932,"name":"string","nodeType":"ElementaryTypeName","src":"73352:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73329:43:15"},"returnParameters":{"id":15938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15937,"mutability":"mutable","name":"keys","nameLocation":"73412:4:15","nodeType":"VariableDeclaration","scope":15939,"src":"73396:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15935,"name":"string","nodeType":"ElementaryTypeName","src":"73396:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15936,"nodeType":"ArrayTypeName","src":"73396:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"73395:22:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15949,"nodeType":"FunctionDefinition","src":"73498:106:15","nodes":[],"documentation":{"id":15940,"nodeType":"StructuredDocumentation","src":"73424:69:15","text":"Parses a string of TOML data at `key` and coerces it to `string`."},"functionSelector":"8bb8dd43","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlString","nameLocation":"73507:15:15","parameters":{"id":15945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15942,"mutability":"mutable","name":"toml","nameLocation":"73539:4:15","nodeType":"VariableDeclaration","scope":15949,"src":"73523:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15941,"name":"string","nodeType":"ElementaryTypeName","src":"73523:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15944,"mutability":"mutable","name":"key","nameLocation":"73561:3:15","nodeType":"VariableDeclaration","scope":15949,"src":"73545:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15943,"name":"string","nodeType":"ElementaryTypeName","src":"73545:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73522:43:15"},"returnParameters":{"id":15948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15949,"src":"73589:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":15946,"name":"string","nodeType":"ElementaryTypeName","src":"73589:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73588:15:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15960,"nodeType":"FunctionDefinition","src":"73686:113:15","nodes":[],"documentation":{"id":15950,"nodeType":"StructuredDocumentation","src":"73610:71:15","text":"Parses a string of TOML data at `key` and coerces it to `string[]`."},"functionSelector":"9f629281","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlStringArray","nameLocation":"73695:20:15","parameters":{"id":15955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15952,"mutability":"mutable","name":"toml","nameLocation":"73732:4:15","nodeType":"VariableDeclaration","scope":15960,"src":"73716:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15951,"name":"string","nodeType":"ElementaryTypeName","src":"73716:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15954,"mutability":"mutable","name":"key","nameLocation":"73754:3:15","nodeType":"VariableDeclaration","scope":15960,"src":"73738:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15953,"name":"string","nodeType":"ElementaryTypeName","src":"73738:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73715:43:15"},"returnParameters":{"id":15959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15958,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15960,"src":"73782:15:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":15956,"name":"string","nodeType":"ElementaryTypeName","src":"73782:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":15957,"nodeType":"ArrayTypeName","src":"73782:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"73781:17:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15970,"nodeType":"FunctionDefinition","src":"73880:98:15","nodes":[],"documentation":{"id":15961,"nodeType":"StructuredDocumentation","src":"73805:70:15","text":"Parses a string of TOML data at `key` and coerces it to `uint256`."},"functionSelector":"cc7b0487","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUint","nameLocation":"73889:13:15","parameters":{"id":15966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15963,"mutability":"mutable","name":"toml","nameLocation":"73919:4:15","nodeType":"VariableDeclaration","scope":15970,"src":"73903:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15962,"name":"string","nodeType":"ElementaryTypeName","src":"73903:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15965,"mutability":"mutable","name":"key","nameLocation":"73941:3:15","nodeType":"VariableDeclaration","scope":15970,"src":"73925:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15964,"name":"string","nodeType":"ElementaryTypeName","src":"73925:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"73902:43:15"},"returnParameters":{"id":15969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15970,"src":"73969:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":15967,"name":"uint256","nodeType":"ElementaryTypeName","src":"73969:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"73968:9:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15981,"nodeType":"FunctionDefinition","src":"74061:112:15","nodes":[],"documentation":{"id":15971,"nodeType":"StructuredDocumentation","src":"73984:72:15","text":"Parses a string of TOML data at `key` and coerces it to `uint256[]`."},"functionSelector":"b5df27c8","implemented":false,"kind":"function","modifiers":[],"name":"parseTomlUintArray","nameLocation":"74070:18:15","parameters":{"id":15976,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15973,"mutability":"mutable","name":"toml","nameLocation":"74105:4:15","nodeType":"VariableDeclaration","scope":15981,"src":"74089:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15972,"name":"string","nodeType":"ElementaryTypeName","src":"74089:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15975,"mutability":"mutable","name":"key","nameLocation":"74127:3:15","nodeType":"VariableDeclaration","scope":15981,"src":"74111:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15974,"name":"string","nodeType":"ElementaryTypeName","src":"74111:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74088:43:15"},"returnParameters":{"id":15980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15979,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":15981,"src":"74155:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":15977,"name":"uint256","nodeType":"ElementaryTypeName","src":"74155:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":15978,"nodeType":"ArrayTypeName","src":"74155:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"74154:18:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15989,"nodeType":"FunctionDefinition","src":"74213:93:15","nodes":[],"documentation":{"id":15982,"nodeType":"StructuredDocumentation","src":"74179:29:15","text":"ABI-encodes a TOML table."},"functionSelector":"592151f0","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"74222:9:15","parameters":{"id":15985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15984,"mutability":"mutable","name":"toml","nameLocation":"74248:4:15","nodeType":"VariableDeclaration","scope":15989,"src":"74232:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15983,"name":"string","nodeType":"ElementaryTypeName","src":"74232:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74231:22:15"},"returnParameters":{"id":15988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15987,"mutability":"mutable","name":"abiEncodedData","nameLocation":"74290:14:15","nodeType":"VariableDeclaration","scope":15989,"src":"74277:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":15986,"name":"bytes","nodeType":"ElementaryTypeName","src":"74277:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"74276:29:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":15999,"nodeType":"FunctionDefinition","src":"74355:114:15","nodes":[],"documentation":{"id":15990,"nodeType":"StructuredDocumentation","src":"74312:38:15","text":"ABI-encodes a TOML table at `key`."},"functionSelector":"37736e08","implemented":false,"kind":"function","modifiers":[],"name":"parseToml","nameLocation":"74364:9:15","parameters":{"id":15995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15992,"mutability":"mutable","name":"toml","nameLocation":"74390:4:15","nodeType":"VariableDeclaration","scope":15999,"src":"74374:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15991,"name":"string","nodeType":"ElementaryTypeName","src":"74374:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":15994,"mutability":"mutable","name":"key","nameLocation":"74412:3:15","nodeType":"VariableDeclaration","scope":15999,"src":"74396:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":15993,"name":"string","nodeType":"ElementaryTypeName","src":"74396:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74373:43:15"},"returnParameters":{"id":15998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":15997,"mutability":"mutable","name":"abiEncodedData","nameLocation":"74453:14:15","nodeType":"VariableDeclaration","scope":15999,"src":"74440:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":15996,"name":"bytes","nodeType":"ElementaryTypeName","src":"74440:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"74439:29:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16007,"nodeType":"FunctionDefinition","src":"74562:72:15","nodes":[],"documentation":{"id":16000,"nodeType":"StructuredDocumentation","src":"74475:82:15","text":"Takes serialized JSON, converts to TOML and write a serialized TOML to a file."},"functionSelector":"c0865ba7","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"74571:9:15","parameters":{"id":16005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16002,"mutability":"mutable","name":"json","nameLocation":"74597:4:15","nodeType":"VariableDeclaration","scope":16007,"src":"74581:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16001,"name":"string","nodeType":"ElementaryTypeName","src":"74581:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16004,"mutability":"mutable","name":"path","nameLocation":"74619:4:15","nodeType":"VariableDeclaration","scope":16007,"src":"74603:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16003,"name":"string","nodeType":"ElementaryTypeName","src":"74603:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74580:44:15"},"returnParameters":{"id":16006,"nodeType":"ParameterList","parameters":[],"src":"74633:0:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16017,"nodeType":"FunctionDefinition","src":"74903:98:15","nodes":[],"documentation":{"id":16008,"nodeType":"StructuredDocumentation","src":"74640:258:15","text":"Takes serialized JSON, converts to TOML and write a serialized TOML table to an **existing** TOML file, replacing a value with key = <value_key.>\n This is useful to replace a specific value of a TOML file, without having to parse the entire thing."},"functionSelector":"51ac6a33","implemented":false,"kind":"function","modifiers":[],"name":"writeToml","nameLocation":"74912:9:15","parameters":{"id":16015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16010,"mutability":"mutable","name":"json","nameLocation":"74938:4:15","nodeType":"VariableDeclaration","scope":16017,"src":"74922:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16009,"name":"string","nodeType":"ElementaryTypeName","src":"74922:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16012,"mutability":"mutable","name":"path","nameLocation":"74960:4:15","nodeType":"VariableDeclaration","scope":16017,"src":"74944:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16011,"name":"string","nodeType":"ElementaryTypeName","src":"74944:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16014,"mutability":"mutable","name":"valueKey","nameLocation":"74982:8:15","nodeType":"VariableDeclaration","scope":16017,"src":"74966:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16013,"name":"string","nodeType":"ElementaryTypeName","src":"74966:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"74921:70:15"},"returnParameters":{"id":16016,"nodeType":"ParameterList","parameters":[],"src":"75000:0:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16029,"nodeType":"FunctionDefinition","src":"75140:141:15","nodes":[],"documentation":{"id":16018,"nodeType":"StructuredDocumentation","src":"75043:92:15","text":"Compute the address of a contract created with CREATE2 using the given CREATE2 deployer."},"functionSelector":"d323826a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"75149:21:15","parameters":{"id":16025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16020,"mutability":"mutable","name":"salt","nameLocation":"75179:4:15","nodeType":"VariableDeclaration","scope":16029,"src":"75171:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16019,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75171:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16022,"mutability":"mutable","name":"initCodeHash","nameLocation":"75193:12:15","nodeType":"VariableDeclaration","scope":16029,"src":"75185:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16021,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75185:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16024,"mutability":"mutable","name":"deployer","nameLocation":"75215:8:15","nodeType":"VariableDeclaration","scope":16029,"src":"75207:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16023,"name":"address","nodeType":"ElementaryTypeName","src":"75207:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"75170:54:15"},"returnParameters":{"id":16028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16029,"src":"75272:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16026,"name":"address","nodeType":"ElementaryTypeName","src":"75272:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"75271:9:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16039,"nodeType":"FunctionDefinition","src":"75386:99:15","nodes":[],"documentation":{"id":16030,"nodeType":"StructuredDocumentation","src":"75287:94:15","text":"Compute the address of a contract created with CREATE2 using the default CREATE2 deployer."},"functionSelector":"890c283b","implemented":false,"kind":"function","modifiers":[],"name":"computeCreate2Address","nameLocation":"75395:21:15","parameters":{"id":16035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16032,"mutability":"mutable","name":"salt","nameLocation":"75425:4:15","nodeType":"VariableDeclaration","scope":16039,"src":"75417:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16031,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75417:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16034,"mutability":"mutable","name":"initCodeHash","nameLocation":"75439:12:15","nodeType":"VariableDeclaration","scope":16039,"src":"75431:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16033,"name":"bytes32","nodeType":"ElementaryTypeName","src":"75431:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"75416:36:15"},"returnParameters":{"id":16038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16039,"src":"75476:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16036,"name":"address","nodeType":"ElementaryTypeName","src":"75476:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"75475:9:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16049,"nodeType":"FunctionDefinition","src":"75590:95:15","nodes":[],"documentation":{"id":16040,"nodeType":"StructuredDocumentation","src":"75491:94:15","text":"Compute the address a contract will be deployed at for a given deployer address and nonce."},"functionSelector":"74637a7a","implemented":false,"kind":"function","modifiers":[],"name":"computeCreateAddress","nameLocation":"75599:20:15","parameters":{"id":16045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16042,"mutability":"mutable","name":"deployer","nameLocation":"75628:8:15","nodeType":"VariableDeclaration","scope":16049,"src":"75620:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16041,"name":"address","nodeType":"ElementaryTypeName","src":"75620:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16044,"mutability":"mutable","name":"nonce","nameLocation":"75646:5:15","nodeType":"VariableDeclaration","scope":16049,"src":"75638:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16043,"name":"uint256","nodeType":"ElementaryTypeName","src":"75638:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"75619:33:15"},"returnParameters":{"id":16048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16047,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16049,"src":"75676:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16046,"name":"address","nodeType":"ElementaryTypeName","src":"75676:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"75675:9:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16058,"nodeType":"FunctionDefinition","src":"75795:91:15","nodes":[],"documentation":{"id":16050,"nodeType":"StructuredDocumentation","src":"75691:99:15","text":"Derives a private key from the name, labels the account with that name, and returns the wallet."},"functionSelector":"7404f1d2","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"75804:12:15","parameters":{"id":16053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16052,"mutability":"mutable","name":"walletLabel","nameLocation":"75833:11:15","nodeType":"VariableDeclaration","scope":16058,"src":"75817:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16051,"name":"string","nodeType":"ElementaryTypeName","src":"75817:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"75816:29:15"},"returnParameters":{"id":16057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16056,"mutability":"mutable","name":"wallet","nameLocation":"75878:6:15","nodeType":"VariableDeclaration","scope":16058,"src":"75864:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13010_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":16055,"nodeType":"UserDefinedTypeName","pathNode":{"id":16054,"name":"Wallet","nameLocations":["75864:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":13010,"src":"75864:6:15"},"referencedDeclaration":13010,"src":"75864:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13010_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"75863:22:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16067,"nodeType":"FunctionDefinition","src":"75964:82:15","nodes":[],"documentation":{"id":16059,"nodeType":"StructuredDocumentation","src":"75892:67:15","text":"Generates a wallet from the private key and returns the wallet."},"functionSelector":"7a675bb6","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"75973:12:15","parameters":{"id":16062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16061,"mutability":"mutable","name":"privateKey","nameLocation":"75994:10:15","nodeType":"VariableDeclaration","scope":16067,"src":"75986:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16060,"name":"uint256","nodeType":"ElementaryTypeName","src":"75986:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"75985:20:15"},"returnParameters":{"id":16066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16065,"mutability":"mutable","name":"wallet","nameLocation":"76038:6:15","nodeType":"VariableDeclaration","scope":16067,"src":"76024:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13010_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":16064,"nodeType":"UserDefinedTypeName","pathNode":{"id":16063,"name":"Wallet","nameLocations":["76024:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":13010,"src":"76024:6:15"},"referencedDeclaration":13010,"src":"76024:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13010_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"76023:22:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16078,"nodeType":"FunctionDefinition","src":"76160:111:15","nodes":[],"documentation":{"id":16068,"nodeType":"StructuredDocumentation","src":"76052:103:15","text":"Generates a wallet from the private key, labels the account with that name, and returns the wallet."},"functionSelector":"ed7c5462","implemented":false,"kind":"function","modifiers":[],"name":"createWallet","nameLocation":"76169:12:15","parameters":{"id":16073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16070,"mutability":"mutable","name":"privateKey","nameLocation":"76190:10:15","nodeType":"VariableDeclaration","scope":16078,"src":"76182:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16069,"name":"uint256","nodeType":"ElementaryTypeName","src":"76182:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16072,"mutability":"mutable","name":"walletLabel","nameLocation":"76218:11:15","nodeType":"VariableDeclaration","scope":16078,"src":"76202:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16071,"name":"string","nodeType":"ElementaryTypeName","src":"76202:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"76181:49:15"},"returnParameters":{"id":16077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16076,"mutability":"mutable","name":"wallet","nameLocation":"76263:6:15","nodeType":"VariableDeclaration","scope":16078,"src":"76249:20:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13010_memory_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":16075,"nodeType":"UserDefinedTypeName","pathNode":{"id":16074,"name":"Wallet","nameLocations":["76249:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":13010,"src":"76249:6:15"},"referencedDeclaration":13010,"src":"76249:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13010_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"76248:22:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16088,"nodeType":"FunctionDefinition","src":"76419:102:15","nodes":[],"documentation":{"id":16079,"nodeType":"StructuredDocumentation","src":"76277:137:15","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"6229498b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"76428:9:15","parameters":{"id":16084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16081,"mutability":"mutable","name":"mnemonic","nameLocation":"76454:8:15","nodeType":"VariableDeclaration","scope":16088,"src":"76438:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16080,"name":"string","nodeType":"ElementaryTypeName","src":"76438:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16083,"mutability":"mutable","name":"index","nameLocation":"76471:5:15","nodeType":"VariableDeclaration","scope":16088,"src":"76464:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":16082,"name":"uint32","nodeType":"ElementaryTypeName","src":"76464:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"76437:40:15"},"returnParameters":{"id":16087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16086,"mutability":"mutable","name":"privateKey","nameLocation":"76509:10:15","nodeType":"VariableDeclaration","scope":16088,"src":"76501:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16085,"name":"uint256","nodeType":"ElementaryTypeName","src":"76501:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"76500:20:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16100,"nodeType":"FunctionDefinition","src":"76650:158:15","nodes":[],"documentation":{"id":16089,"nodeType":"StructuredDocumentation","src":"76527:118:15","text":"Derive a private key from a provided mnenomic string (or mnenomic file path)\n at `{derivationPath}{index}`."},"functionSelector":"6bcb2c1b","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"76659:9:15","parameters":{"id":16096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16091,"mutability":"mutable","name":"mnemonic","nameLocation":"76685:8:15","nodeType":"VariableDeclaration","scope":16100,"src":"76669:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16090,"name":"string","nodeType":"ElementaryTypeName","src":"76669:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16093,"mutability":"mutable","name":"derivationPath","nameLocation":"76711:14:15","nodeType":"VariableDeclaration","scope":16100,"src":"76695:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16092,"name":"string","nodeType":"ElementaryTypeName","src":"76695:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16095,"mutability":"mutable","name":"index","nameLocation":"76734:5:15","nodeType":"VariableDeclaration","scope":16100,"src":"76727:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":16094,"name":"uint32","nodeType":"ElementaryTypeName","src":"76727:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"76668:72:15"},"returnParameters":{"id":16099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16098,"mutability":"mutable","name":"privateKey","nameLocation":"76796:10:15","nodeType":"VariableDeclaration","scope":16100,"src":"76788:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16097,"name":"uint256","nodeType":"ElementaryTypeName","src":"76788:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"76787:20:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16112,"nodeType":"FunctionDefinition","src":"76982:152:15","nodes":[],"documentation":{"id":16101,"nodeType":"StructuredDocumentation","src":"76814:163:15","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at the derivation path `m/44'/60'/0'/0/{index}`."},"functionSelector":"32c8176d","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"76991:9:15","parameters":{"id":16108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16103,"mutability":"mutable","name":"mnemonic","nameLocation":"77017:8:15","nodeType":"VariableDeclaration","scope":16112,"src":"77001:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16102,"name":"string","nodeType":"ElementaryTypeName","src":"77001:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16105,"mutability":"mutable","name":"index","nameLocation":"77034:5:15","nodeType":"VariableDeclaration","scope":16112,"src":"77027:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":16104,"name":"uint32","nodeType":"ElementaryTypeName","src":"77027:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":16107,"mutability":"mutable","name":"language","nameLocation":"77057:8:15","nodeType":"VariableDeclaration","scope":16112,"src":"77041:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16106,"name":"string","nodeType":"ElementaryTypeName","src":"77041:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77000:66:15"},"returnParameters":{"id":16111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16110,"mutability":"mutable","name":"privateKey","nameLocation":"77122:10:15","nodeType":"VariableDeclaration","scope":16112,"src":"77114:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16109,"name":"uint256","nodeType":"ElementaryTypeName","src":"77114:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77113:20:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16126,"nodeType":"FunctionDefinition","src":"77289:184:15","nodes":[],"documentation":{"id":16113,"nodeType":"StructuredDocumentation","src":"77140:144:15","text":"Derive a private key from a provided mnenomic string (or mnenomic file path) in the specified language\n at `{derivationPath}{index}`."},"functionSelector":"29233b1f","implemented":false,"kind":"function","modifiers":[],"name":"deriveKey","nameLocation":"77298:9:15","parameters":{"id":16122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16115,"mutability":"mutable","name":"mnemonic","nameLocation":"77324:8:15","nodeType":"VariableDeclaration","scope":16126,"src":"77308:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16114,"name":"string","nodeType":"ElementaryTypeName","src":"77308:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16117,"mutability":"mutable","name":"derivationPath","nameLocation":"77350:14:15","nodeType":"VariableDeclaration","scope":16126,"src":"77334:30:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16116,"name":"string","nodeType":"ElementaryTypeName","src":"77334:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16119,"mutability":"mutable","name":"index","nameLocation":"77373:5:15","nodeType":"VariableDeclaration","scope":16126,"src":"77366:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":16118,"name":"uint32","nodeType":"ElementaryTypeName","src":"77366:6:15","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":16121,"mutability":"mutable","name":"language","nameLocation":"77396:8:15","nodeType":"VariableDeclaration","scope":16126,"src":"77380:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16120,"name":"string","nodeType":"ElementaryTypeName","src":"77380:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77307:98:15"},"returnParameters":{"id":16125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16124,"mutability":"mutable","name":"privateKey","nameLocation":"77461:10:15","nodeType":"VariableDeclaration","scope":16126,"src":"77453:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16123,"name":"uint256","nodeType":"ElementaryTypeName","src":"77453:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"77452:20:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16134,"nodeType":"FunctionDefinition","src":"77529:75:15","nodes":[],"documentation":{"id":16127,"nodeType":"StructuredDocumentation","src":"77479:45:15","text":"Returns ENS namehash for provided string."},"functionSelector":"8c374c65","implemented":false,"kind":"function","modifiers":[],"name":"ensNamehash","nameLocation":"77538:11:15","parameters":{"id":16130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16129,"mutability":"mutable","name":"name","nameLocation":"77566:4:15","nodeType":"VariableDeclaration","scope":16134,"src":"77550:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16128,"name":"string","nodeType":"ElementaryTypeName","src":"77550:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77549:22:15"},"returnParameters":{"id":16133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16134,"src":"77595:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"77595:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"77594:9:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16142,"nodeType":"FunctionDefinition","src":"77660:86:15","nodes":[],"documentation":{"id":16135,"nodeType":"StructuredDocumentation","src":"77610:45:15","text":"Gets the label for the specified address."},"functionSelector":"28a249b0","implemented":false,"kind":"function","modifiers":[],"name":"getLabel","nameLocation":"77669:8:15","parameters":{"id":16138,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16137,"mutability":"mutable","name":"account","nameLocation":"77686:7:15","nodeType":"VariableDeclaration","scope":16142,"src":"77678:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16136,"name":"address","nodeType":"ElementaryTypeName","src":"77678:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"77677:17:15"},"returnParameters":{"id":16141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16140,"mutability":"mutable","name":"currentLabel","nameLocation":"77732:12:15","nodeType":"VariableDeclaration","scope":16142,"src":"77718:26:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16139,"name":"string","nodeType":"ElementaryTypeName","src":"77718:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77717:28:15"},"scope":16237,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16151,"nodeType":"FunctionDefinition","src":"77784:74:15","nodes":[],"documentation":{"id":16143,"nodeType":"StructuredDocumentation","src":"77752:27:15","text":"Get a `Wallet`'s nonce."},"functionSelector":"a5748aad","implemented":false,"kind":"function","modifiers":[],"name":"getNonce","nameLocation":"77793:8:15","parameters":{"id":16147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16146,"mutability":"mutable","name":"wallet","nameLocation":"77818:6:15","nodeType":"VariableDeclaration","scope":16151,"src":"77802:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13010_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":16145,"nodeType":"UserDefinedTypeName","pathNode":{"id":16144,"name":"Wallet","nameLocations":["77802:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":13010,"src":"77802:6:15"},"referencedDeclaration":13010,"src":"77802:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13010_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"}],"src":"77801:24:15"},"returnParameters":{"id":16150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16149,"mutability":"mutable","name":"nonce","nameLocation":"77851:5:15","nodeType":"VariableDeclaration","scope":16151,"src":"77844:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16148,"name":"uint64","nodeType":"ElementaryTypeName","src":"77844:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"77843:14:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16159,"nodeType":"FunctionDefinition","src":"77906:67:15","nodes":[],"documentation":{"id":16152,"nodeType":"StructuredDocumentation","src":"77864:37:15","text":"Labels an address in call traces."},"functionSelector":"c657c718","implemented":false,"kind":"function","modifiers":[],"name":"label","nameLocation":"77915:5:15","parameters":{"id":16157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16154,"mutability":"mutable","name":"account","nameLocation":"77929:7:15","nodeType":"VariableDeclaration","scope":16159,"src":"77921:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16153,"name":"address","nodeType":"ElementaryTypeName","src":"77921:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16156,"mutability":"mutable","name":"newLabel","nameLocation":"77954:8:15","nodeType":"VariableDeclaration","scope":16159,"src":"77938:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16155,"name":"string","nodeType":"ElementaryTypeName","src":"77938:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"77920:43:15"},"returnParameters":{"id":16158,"nodeType":"ParameterList","parameters":[],"src":"77972:0:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16165,"nodeType":"FunctionDefinition","src":"78015:52:15","nodes":[],"documentation":{"id":16160,"nodeType":"StructuredDocumentation","src":"77979:31:15","text":"Returns a random `address`."},"functionSelector":"d5bee9f5","implemented":false,"kind":"function","modifiers":[],"name":"randomAddress","nameLocation":"78024:13:15","parameters":{"id":16161,"nodeType":"ParameterList","parameters":[],"src":"78037:2:15"},"returnParameters":{"id":16164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16163,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16165,"src":"78058:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16162,"name":"address","nodeType":"ElementaryTypeName","src":"78058:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"78057:9:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16171,"nodeType":"FunctionDefinition","src":"78113:49:15","nodes":[],"documentation":{"id":16166,"nodeType":"StructuredDocumentation","src":"78073:35:15","text":"Returns a random uint256 value."},"functionSelector":"25124730","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"78122:10:15","parameters":{"id":16167,"nodeType":"ParameterList","parameters":[],"src":"78132:2:15"},"returnParameters":{"id":16170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16171,"src":"78153:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16168,"name":"uint256","nodeType":"ElementaryTypeName","src":"78153:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78152:9:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16181,"nodeType":"FunctionDefinition","src":"78245:73:15","nodes":[],"documentation":{"id":16172,"nodeType":"StructuredDocumentation","src":"78168:72:15","text":"Returns random uin256 value between the provided range (=min..=max)."},"functionSelector":"d61b051b","implemented":false,"kind":"function","modifiers":[],"name":"randomUint","nameLocation":"78254:10:15","parameters":{"id":16177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16174,"mutability":"mutable","name":"min","nameLocation":"78273:3:15","nodeType":"VariableDeclaration","scope":16181,"src":"78265:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16173,"name":"uint256","nodeType":"ElementaryTypeName","src":"78265:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16176,"mutability":"mutable","name":"max","nameLocation":"78286:3:15","nodeType":"VariableDeclaration","scope":16181,"src":"78278:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16175,"name":"uint256","nodeType":"ElementaryTypeName","src":"78278:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78264:26:15"},"returnParameters":{"id":16180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16179,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16181,"src":"78309:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16178,"name":"uint256","nodeType":"ElementaryTypeName","src":"78309:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78308:9:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16189,"nodeType":"FunctionDefinition","src":"78402:76:15","nodes":[],"documentation":{"id":16182,"nodeType":"StructuredDocumentation","src":"78324:73:15","text":"Adds a private key to the local forge wallet and returns the address."},"functionSelector":"22100064","implemented":false,"kind":"function","modifiers":[],"name":"rememberKey","nameLocation":"78411:11:15","parameters":{"id":16185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16184,"mutability":"mutable","name":"privateKey","nameLocation":"78431:10:15","nodeType":"VariableDeclaration","scope":16189,"src":"78423:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16183,"name":"uint256","nodeType":"ElementaryTypeName","src":"78423:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"78422:20:15"},"returnParameters":{"id":16188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16187,"mutability":"mutable","name":"keyAddr","nameLocation":"78469:7:15","nodeType":"VariableDeclaration","scope":16189,"src":"78461:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16186,"name":"address","nodeType":"ElementaryTypeName","src":"78461:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"78460:17:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16204,"nodeType":"FunctionDefinition","src":"78520:103:15","nodes":[],"documentation":{"id":16190,"nodeType":"StructuredDocumentation","src":"78484:31:15","text":"Signs data with a `Wallet`."},"functionSelector":"b25c5a25","implemented":false,"kind":"function","modifiers":[],"name":"sign","nameLocation":"78529:4:15","parameters":{"id":16196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16193,"mutability":"mutable","name":"wallet","nameLocation":"78550:6:15","nodeType":"VariableDeclaration","scope":16204,"src":"78534:22:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13010_calldata_ptr","typeString":"struct VmSafe.Wallet"},"typeName":{"id":16192,"nodeType":"UserDefinedTypeName","pathNode":{"id":16191,"name":"Wallet","nameLocations":["78534:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":13010,"src":"78534:6:15"},"referencedDeclaration":13010,"src":"78534:6:15","typeDescriptions":{"typeIdentifier":"t_struct$_Wallet_$13010_storage_ptr","typeString":"struct VmSafe.Wallet"}},"visibility":"internal"},{"constant":false,"id":16195,"mutability":"mutable","name":"digest","nameLocation":"78566:6:15","nodeType":"VariableDeclaration","scope":16204,"src":"78558:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"78558:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"78533:40:15"},"returnParameters":{"id":16203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16198,"mutability":"mutable","name":"v","nameLocation":"78598:1:15","nodeType":"VariableDeclaration","scope":16204,"src":"78592:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":16197,"name":"uint8","nodeType":"ElementaryTypeName","src":"78592:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":16200,"mutability":"mutable","name":"r","nameLocation":"78609:1:15","nodeType":"VariableDeclaration","scope":16204,"src":"78601:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16199,"name":"bytes32","nodeType":"ElementaryTypeName","src":"78601:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16202,"mutability":"mutable","name":"s","nameLocation":"78620:1:15","nodeType":"VariableDeclaration","scope":16204,"src":"78612:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16201,"name":"bytes32","nodeType":"ElementaryTypeName","src":"78612:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"78591:31:15"},"scope":16237,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16212,"nodeType":"FunctionDefinition","src":"78684:80:15","nodes":[],"documentation":{"id":16205,"nodeType":"StructuredDocumentation","src":"78629:50:15","text":"Encodes a `bytes` value to a base64url string."},"functionSelector":"c8bd0e4a","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"78693:11:15","parameters":{"id":16208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16207,"mutability":"mutable","name":"data","nameLocation":"78720:4:15","nodeType":"VariableDeclaration","scope":16212,"src":"78705:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16206,"name":"bytes","nodeType":"ElementaryTypeName","src":"78705:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"78704:21:15"},"returnParameters":{"id":16211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16212,"src":"78749:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16209,"name":"string","nodeType":"ElementaryTypeName","src":"78749:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78748:15:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16220,"nodeType":"FunctionDefinition","src":"78826:81:15","nodes":[],"documentation":{"id":16213,"nodeType":"StructuredDocumentation","src":"78770:51:15","text":"Encodes a `string` value to a base64url string."},"functionSelector":"ae3165b3","implemented":false,"kind":"function","modifiers":[],"name":"toBase64URL","nameLocation":"78835:11:15","parameters":{"id":16216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16215,"mutability":"mutable","name":"data","nameLocation":"78863:4:15","nodeType":"VariableDeclaration","scope":16220,"src":"78847:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16214,"name":"string","nodeType":"ElementaryTypeName","src":"78847:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78846:22:15"},"returnParameters":{"id":16219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16220,"src":"78892:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16217,"name":"string","nodeType":"ElementaryTypeName","src":"78892:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"78891:15:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16228,"nodeType":"FunctionDefinition","src":"78965:77:15","nodes":[],"documentation":{"id":16221,"nodeType":"StructuredDocumentation","src":"78913:47:15","text":"Encodes a `bytes` value to a base64 string."},"functionSelector":"a5cbfe65","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"78974:8:15","parameters":{"id":16224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16223,"mutability":"mutable","name":"data","nameLocation":"78998:4:15","nodeType":"VariableDeclaration","scope":16228,"src":"78983:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16222,"name":"bytes","nodeType":"ElementaryTypeName","src":"78983:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"78982:21:15"},"returnParameters":{"id":16227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16228,"src":"79027:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16225,"name":"string","nodeType":"ElementaryTypeName","src":"79027:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79026:15:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"},{"id":16236,"nodeType":"FunctionDefinition","src":"79101:78:15","nodes":[],"documentation":{"id":16229,"nodeType":"StructuredDocumentation","src":"79048:48:15","text":"Encodes a `string` value to a base64 string."},"functionSelector":"3f8be2c8","implemented":false,"kind":"function","modifiers":[],"name":"toBase64","nameLocation":"79110:8:15","parameters":{"id":16232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16231,"mutability":"mutable","name":"data","nameLocation":"79135:4:15","nodeType":"VariableDeclaration","scope":16236,"src":"79119:20:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16230,"name":"string","nodeType":"ElementaryTypeName","src":"79119:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79118:22:15"},"returnParameters":{"id":16235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":16236,"src":"79164:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":16233,"name":"string","nodeType":"ElementaryTypeName","src":"79164:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"79163:15:15"},"scope":16237,"stateMutability":"pure","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[],"canonicalName":"VmSafe","contractDependencies":[],"contractKind":"interface","documentation":{"id":12905,"nodeType":"StructuredDocumentation","src":"184:225:15","text":"The `VmSafe` interface does not allow manipulation of the EVM state or other actions that may\n result in Script simulations differing from on-chain execution. It is recommended to only use\n these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[16237],"name":"VmSafe","nameLocation":"419:6:15","scope":16887,"usedErrors":[],"usedEvents":[]},{"id":16886,"nodeType":"ContractDefinition","src":"79354:15888:15","nodes":[{"id":16246,"nodeType":"FunctionDefinition","src":"79514:61:15","nodes":[],"documentation":{"id":16241,"nodeType":"StructuredDocumentation","src":"79413:96:15","text":"Returns the identifier of the currently active fork. Reverts if no fork is currently active."},"functionSelector":"2f103f22","implemented":false,"kind":"function","modifiers":[],"name":"activeFork","nameLocation":"79523:10:15","parameters":{"id":16242,"nodeType":"ParameterList","parameters":[],"src":"79533:2:15"},"returnParameters":{"id":16245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16244,"mutability":"mutable","name":"forkId","nameLocation":"79567:6:15","nodeType":"VariableDeclaration","scope":16246,"src":"79559:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16243,"name":"uint256","nodeType":"ElementaryTypeName","src":"79559:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79558:16:15"},"scope":16886,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16252,"nodeType":"FunctionDefinition","src":"79659:51:15","nodes":[],"documentation":{"id":16247,"nodeType":"StructuredDocumentation","src":"79581:73:15","text":"In forking mode, explicitly grant the given address cheatcode access."},"functionSelector":"ea060291","implemented":false,"kind":"function","modifiers":[],"name":"allowCheatcodes","nameLocation":"79668:15:15","parameters":{"id":16250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16249,"mutability":"mutable","name":"account","nameLocation":"79692:7:15","nodeType":"VariableDeclaration","scope":16252,"src":"79684:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16248,"name":"address","nodeType":"ElementaryTypeName","src":"79684:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"79683:17:15"},"returnParameters":{"id":16251,"nodeType":"ParameterList","parameters":[],"src":"79709:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16258,"nodeType":"FunctionDefinition","src":"79749:54:15","nodes":[],"documentation":{"id":16253,"nodeType":"StructuredDocumentation","src":"79716:28:15","text":"Sets `block.blobbasefee`"},"functionSelector":"6d315d7e","implemented":false,"kind":"function","modifiers":[],"name":"blobBaseFee","nameLocation":"79758:11:15","parameters":{"id":16256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16255,"mutability":"mutable","name":"newBlobBaseFee","nameLocation":"79778:14:15","nodeType":"VariableDeclaration","scope":16258,"src":"79770:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16254,"name":"uint256","nodeType":"ElementaryTypeName","src":"79770:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"79769:24:15"},"returnParameters":{"id":16257,"nodeType":"ParameterList","parameters":[],"src":"79802:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16265,"nodeType":"FunctionDefinition","src":"79970:56:15","nodes":[],"documentation":{"id":16259,"nodeType":"StructuredDocumentation","src":"79809:156:15","text":"Sets the blobhashes in the transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"129de7eb","implemented":false,"kind":"function","modifiers":[],"name":"blobhashes","nameLocation":"79979:10:15","parameters":{"id":16263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16262,"mutability":"mutable","name":"hashes","nameLocation":"80009:6:15","nodeType":"VariableDeclaration","scope":16265,"src":"79990:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16260,"name":"bytes32","nodeType":"ElementaryTypeName","src":"79990:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16261,"nodeType":"ArrayTypeName","src":"79990:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"79989:27:15"},"returnParameters":{"id":16264,"nodeType":"ParameterList","parameters":[],"src":"80025:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16271,"nodeType":"FunctionDefinition","src":"80062:46:15","nodes":[],"documentation":{"id":16266,"nodeType":"StructuredDocumentation","src":"80032:25:15","text":"Sets `block.chainid`."},"functionSelector":"4049ddd2","implemented":false,"kind":"function","modifiers":[],"name":"chainId","nameLocation":"80071:7:15","parameters":{"id":16269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16268,"mutability":"mutable","name":"newChainId","nameLocation":"80087:10:15","nodeType":"VariableDeclaration","scope":16271,"src":"80079:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16267,"name":"uint256","nodeType":"ElementaryTypeName","src":"80079:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"80078:20:15"},"returnParameters":{"id":16270,"nodeType":"ParameterList","parameters":[],"src":"80107:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16275,"nodeType":"FunctionDefinition","src":"80147:37:15","nodes":[],"documentation":{"id":16272,"nodeType":"StructuredDocumentation","src":"80114:28:15","text":"Clears all mocked calls."},"functionSelector":"3fdf4e15","implemented":false,"kind":"function","modifiers":[],"name":"clearMockedCalls","nameLocation":"80156:16:15","parameters":{"id":16273,"nodeType":"ParameterList","parameters":[],"src":"80172:2:15"},"returnParameters":{"id":16274,"nodeType":"ParameterList","parameters":[],"src":"80183:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16281,"nodeType":"FunctionDefinition","src":"80221:48:15","nodes":[],"documentation":{"id":16276,"nodeType":"StructuredDocumentation","src":"80190:26:15","text":"Sets `block.coinbase`."},"functionSelector":"ff483c54","implemented":false,"kind":"function","modifiers":[],"name":"coinbase","nameLocation":"80230:8:15","parameters":{"id":16279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16278,"mutability":"mutable","name":"newCoinbase","nameLocation":"80247:11:15","nodeType":"VariableDeclaration","scope":16281,"src":"80239:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16277,"name":"address","nodeType":"ElementaryTypeName","src":"80239:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"80238:21:15"},"returnParameters":{"id":16280,"nodeType":"ParameterList","parameters":[],"src":"80268:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16289,"nodeType":"FunctionDefinition","src":"80389:82:15","nodes":[],"documentation":{"id":16282,"nodeType":"StructuredDocumentation","src":"80275:109:15","text":"Creates a new fork with the given endpoint and the _latest_ block and returns the identifier of the fork."},"functionSelector":"31ba3498","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"80398:10:15","parameters":{"id":16285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16284,"mutability":"mutable","name":"urlOrAlias","nameLocation":"80425:10:15","nodeType":"VariableDeclaration","scope":16289,"src":"80409:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16283,"name":"string","nodeType":"ElementaryTypeName","src":"80409:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"80408:28:15"},"returnParameters":{"id":16288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16287,"mutability":"mutable","name":"forkId","nameLocation":"80463:6:15","nodeType":"VariableDeclaration","scope":16289,"src":"80455:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16286,"name":"uint256","nodeType":"ElementaryTypeName","src":"80455:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"80454:16:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16299,"nodeType":"FunctionDefinition","src":"80578:103:15","nodes":[],"documentation":{"id":16290,"nodeType":"StructuredDocumentation","src":"80477:96:15","text":"Creates a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"6ba3ba2b","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"80587:10:15","parameters":{"id":16295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16292,"mutability":"mutable","name":"urlOrAlias","nameLocation":"80614:10:15","nodeType":"VariableDeclaration","scope":16299,"src":"80598:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16291,"name":"string","nodeType":"ElementaryTypeName","src":"80598:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16294,"mutability":"mutable","name":"blockNumber","nameLocation":"80634:11:15","nodeType":"VariableDeclaration","scope":16299,"src":"80626:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16293,"name":"uint256","nodeType":"ElementaryTypeName","src":"80626:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"80597:49:15"},"returnParameters":{"id":16298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16297,"mutability":"mutable","name":"forkId","nameLocation":"80673:6:15","nodeType":"VariableDeclaration","scope":16299,"src":"80665:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16296,"name":"uint256","nodeType":"ElementaryTypeName","src":"80665:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"80664:16:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16309,"nodeType":"FunctionDefinition","src":"80906:98:15","nodes":[],"documentation":{"id":16300,"nodeType":"StructuredDocumentation","src":"80687:214:15","text":"Creates a new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, and returns the identifier of the fork."},"functionSelector":"7ca29682","implemented":false,"kind":"function","modifiers":[],"name":"createFork","nameLocation":"80915:10:15","parameters":{"id":16305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16302,"mutability":"mutable","name":"urlOrAlias","nameLocation":"80942:10:15","nodeType":"VariableDeclaration","scope":16309,"src":"80926:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16301,"name":"string","nodeType":"ElementaryTypeName","src":"80926:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16304,"mutability":"mutable","name":"txHash","nameLocation":"80962:6:15","nodeType":"VariableDeclaration","scope":16309,"src":"80954:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"80954:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"80925:44:15"},"returnParameters":{"id":16308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16307,"mutability":"mutable","name":"forkId","nameLocation":"80996:6:15","nodeType":"VariableDeclaration","scope":16309,"src":"80988:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16306,"name":"uint256","nodeType":"ElementaryTypeName","src":"80988:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"80987:16:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16317,"nodeType":"FunctionDefinition","src":"81139:88:15","nodes":[],"documentation":{"id":16310,"nodeType":"StructuredDocumentation","src":"81010:124:15","text":"Creates and also selects a new fork with the given endpoint and the latest block and returns the identifier of the fork."},"functionSelector":"98680034","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"81148:16:15","parameters":{"id":16313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16312,"mutability":"mutable","name":"urlOrAlias","nameLocation":"81181:10:15","nodeType":"VariableDeclaration","scope":16317,"src":"81165:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16311,"name":"string","nodeType":"ElementaryTypeName","src":"81165:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"81164:28:15"},"returnParameters":{"id":16316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16315,"mutability":"mutable","name":"forkId","nameLocation":"81219:6:15","nodeType":"VariableDeclaration","scope":16317,"src":"81211:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16314,"name":"uint256","nodeType":"ElementaryTypeName","src":"81211:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81210:16:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16327,"nodeType":"FunctionDefinition","src":"81351:109:15","nodes":[],"documentation":{"id":16318,"nodeType":"StructuredDocumentation","src":"81233:113:15","text":"Creates and also selects a new fork with the given endpoint and block and returns the identifier of the fork."},"functionSelector":"71ee464d","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"81360:16:15","parameters":{"id":16323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16320,"mutability":"mutable","name":"urlOrAlias","nameLocation":"81393:10:15","nodeType":"VariableDeclaration","scope":16327,"src":"81377:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16319,"name":"string","nodeType":"ElementaryTypeName","src":"81377:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16322,"mutability":"mutable","name":"blockNumber","nameLocation":"81413:11:15","nodeType":"VariableDeclaration","scope":16327,"src":"81405:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16321,"name":"uint256","nodeType":"ElementaryTypeName","src":"81405:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81376:49:15"},"returnParameters":{"id":16326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16325,"mutability":"mutable","name":"forkId","nameLocation":"81452:6:15","nodeType":"VariableDeclaration","scope":16327,"src":"81444:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16324,"name":"uint256","nodeType":"ElementaryTypeName","src":"81444:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81443:16:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16337,"nodeType":"FunctionDefinition","src":"81696:104:15","nodes":[],"documentation":{"id":16328,"nodeType":"StructuredDocumentation","src":"81466:225:15","text":"Creates and also selects new fork with the given endpoint and at the block the given transaction was mined in,\n replays all transaction mined in the block before the transaction, returns the identifier of the fork."},"functionSelector":"84d52b7a","implemented":false,"kind":"function","modifiers":[],"name":"createSelectFork","nameLocation":"81705:16:15","parameters":{"id":16333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16330,"mutability":"mutable","name":"urlOrAlias","nameLocation":"81738:10:15","nodeType":"VariableDeclaration","scope":16337,"src":"81722:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16329,"name":"string","nodeType":"ElementaryTypeName","src":"81722:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":16332,"mutability":"mutable","name":"txHash","nameLocation":"81758:6:15","nodeType":"VariableDeclaration","scope":16337,"src":"81750:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16331,"name":"bytes32","nodeType":"ElementaryTypeName","src":"81750:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"81721:44:15"},"returnParameters":{"id":16336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16335,"mutability":"mutable","name":"forkId","nameLocation":"81792:6:15","nodeType":"VariableDeclaration","scope":16337,"src":"81784:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16334,"name":"uint256","nodeType":"ElementaryTypeName","src":"81784:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81783:16:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16345,"nodeType":"FunctionDefinition","src":"81840:60:15","nodes":[],"documentation":{"id":16338,"nodeType":"StructuredDocumentation","src":"81806:29:15","text":"Sets an address' balance."},"functionSelector":"c88a5e6d","implemented":false,"kind":"function","modifiers":[],"name":"deal","nameLocation":"81849:4:15","parameters":{"id":16343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16340,"mutability":"mutable","name":"account","nameLocation":"81862:7:15","nodeType":"VariableDeclaration","scope":16345,"src":"81854:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16339,"name":"address","nodeType":"ElementaryTypeName","src":"81854:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16342,"mutability":"mutable","name":"newBalance","nameLocation":"81879:10:15","nodeType":"VariableDeclaration","scope":16345,"src":"81871:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16341,"name":"uint256","nodeType":"ElementaryTypeName","src":"81871:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"81853:37:15"},"returnParameters":{"id":16344,"nodeType":"ParameterList","parameters":[],"src":"81899:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16353,"nodeType":"FunctionDefinition","src":"82138:76:15","nodes":[],"documentation":{"id":16346,"nodeType":"StructuredDocumentation","src":"81906:227:15","text":"Removes the snapshot with the given ID created by `snapshot`.\n Takes the snapshot ID to delete.\n Returns `true` if the snapshot was successfully deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"a6368557","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshot","nameLocation":"82147:14:15","parameters":{"id":16349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16348,"mutability":"mutable","name":"snapshotId","nameLocation":"82170:10:15","nodeType":"VariableDeclaration","scope":16353,"src":"82162:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16347,"name":"uint256","nodeType":"ElementaryTypeName","src":"82162:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"82161:20:15"},"returnParameters":{"id":16352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16351,"mutability":"mutable","name":"success","nameLocation":"82205:7:15","nodeType":"VariableDeclaration","scope":16353,"src":"82200:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16350,"name":"bool","nodeType":"ElementaryTypeName","src":"82200:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"82199:14:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16357,"nodeType":"FunctionDefinition","src":"82286:36:15","nodes":[],"documentation":{"id":16354,"nodeType":"StructuredDocumentation","src":"82220:61:15","text":"Removes _all_ snapshots previously created by `snapshot`."},"functionSelector":"421ae469","implemented":false,"kind":"function","modifiers":[],"name":"deleteSnapshots","nameLocation":"82295:15:15","parameters":{"id":16355,"nodeType":"ParameterList","parameters":[],"src":"82310:2:15"},"returnParameters":{"id":16356,"nodeType":"ParameterList","parameters":[],"src":"82321:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16363,"nodeType":"FunctionDefinition","src":"82498:52:15","nodes":[],"documentation":{"id":16358,"nodeType":"StructuredDocumentation","src":"82328:165:15","text":"Sets `block.difficulty`.\n Not available on EVM versions from Paris onwards. Use `prevrandao` instead.\n Reverts if used on unsupported EVM versions."},"functionSelector":"46cc92d9","implemented":false,"kind":"function","modifiers":[],"name":"difficulty","nameLocation":"82507:10:15","parameters":{"id":16361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16360,"mutability":"mutable","name":"newDifficulty","nameLocation":"82526:13:15","nodeType":"VariableDeclaration","scope":16363,"src":"82518:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16359,"name":"uint256","nodeType":"ElementaryTypeName","src":"82518:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"82517:23:15"},"returnParameters":{"id":16362,"nodeType":"ParameterList","parameters":[],"src":"82549:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16369,"nodeType":"FunctionDefinition","src":"82609:61:15","nodes":[],"documentation":{"id":16364,"nodeType":"StructuredDocumentation","src":"82556:48:15","text":"Dump a genesis JSON file's `allocs` to disk."},"functionSelector":"709ecd3f","implemented":false,"kind":"function","modifiers":[],"name":"dumpState","nameLocation":"82618:9:15","parameters":{"id":16367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16366,"mutability":"mutable","name":"pathToStateJson","nameLocation":"82644:15:15","nodeType":"VariableDeclaration","scope":16369,"src":"82628:31:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16365,"name":"string","nodeType":"ElementaryTypeName","src":"82628:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"82627:33:15"},"returnParameters":{"id":16368,"nodeType":"ParameterList","parameters":[],"src":"82669:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16377,"nodeType":"FunctionDefinition","src":"82707:74:15","nodes":[],"documentation":{"id":16370,"nodeType":"StructuredDocumentation","src":"82676:26:15","text":"Sets an address' code."},"functionSelector":"b4d6c782","implemented":false,"kind":"function","modifiers":[],"name":"etch","nameLocation":"82716:4:15","parameters":{"id":16375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16372,"mutability":"mutable","name":"target","nameLocation":"82729:6:15","nodeType":"VariableDeclaration","scope":16377,"src":"82721:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16371,"name":"address","nodeType":"ElementaryTypeName","src":"82721:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16374,"mutability":"mutable","name":"newRuntimeBytecode","nameLocation":"82752:18:15","nodeType":"VariableDeclaration","scope":16377,"src":"82737:33:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16373,"name":"bytes","nodeType":"ElementaryTypeName","src":"82737:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"82720:51:15"},"returnParameters":{"id":16376,"nodeType":"ParameterList","parameters":[],"src":"82780:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16383,"nodeType":"FunctionDefinition","src":"82817:42:15","nodes":[],"documentation":{"id":16378,"nodeType":"StructuredDocumentation","src":"82787:25:15","text":"Sets `block.basefee`."},"functionSelector":"39b37ab0","implemented":false,"kind":"function","modifiers":[],"name":"fee","nameLocation":"82826:3:15","parameters":{"id":16381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16380,"mutability":"mutable","name":"newBasefee","nameLocation":"82838:10:15","nodeType":"VariableDeclaration","scope":16383,"src":"82830:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16379,"name":"uint256","nodeType":"ElementaryTypeName","src":"82830:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"82829:20:15"},"returnParameters":{"id":16382,"nodeType":"ParameterList","parameters":[],"src":"82858:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16390,"nodeType":"FunctionDefinition","src":"83037:73:15","nodes":[],"documentation":{"id":16384,"nodeType":"StructuredDocumentation","src":"82865:167:15","text":"Gets the blockhashes from the current transaction.\n Not available on EVM versions before Cancun.\n If used on unsupported EVM versions it will revert."},"functionSelector":"f56ff18b","implemented":false,"kind":"function","modifiers":[],"name":"getBlobhashes","nameLocation":"83046:13:15","parameters":{"id":16385,"nodeType":"ParameterList","parameters":[],"src":"83059:2:15"},"returnParameters":{"id":16389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16388,"mutability":"mutable","name":"hashes","nameLocation":"83102:6:15","nodeType":"VariableDeclaration","scope":16390,"src":"83085:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":16386,"name":"bytes32","nodeType":"ElementaryTypeName","src":"83085:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":16387,"nodeType":"ArrayTypeName","src":"83085:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"83084:25:15"},"scope":16886,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16398,"nodeType":"FunctionDefinition","src":"83177:79:15","nodes":[],"documentation":{"id":16391,"nodeType":"StructuredDocumentation","src":"83116:56:15","text":"Returns true if the account is marked as persistent."},"functionSelector":"d92d8efd","implemented":false,"kind":"function","modifiers":[],"name":"isPersistent","nameLocation":"83186:12:15","parameters":{"id":16394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16393,"mutability":"mutable","name":"account","nameLocation":"83207:7:15","nodeType":"VariableDeclaration","scope":16398,"src":"83199:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16392,"name":"address","nodeType":"ElementaryTypeName","src":"83199:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"83198:17:15"},"returnParameters":{"id":16397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16396,"mutability":"mutable","name":"persistent","nameLocation":"83244:10:15","nodeType":"VariableDeclaration","scope":16398,"src":"83239:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16395,"name":"bool","nodeType":"ElementaryTypeName","src":"83239:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"83238:17:15"},"scope":16886,"stateMutability":"view","virtual":false,"visibility":"external"},{"id":16404,"nodeType":"FunctionDefinition","src":"83337:63:15","nodes":[],"documentation":{"id":16399,"nodeType":"StructuredDocumentation","src":"83262:70:15","text":"Load a genesis JSON file's `allocs` into the in-memory revm state."},"functionSelector":"b3a056d7","implemented":false,"kind":"function","modifiers":[],"name":"loadAllocs","nameLocation":"83346:10:15","parameters":{"id":16402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16401,"mutability":"mutable","name":"pathToAllocsJson","nameLocation":"83373:16:15","nodeType":"VariableDeclaration","scope":16404,"src":"83357:32:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":16400,"name":"string","nodeType":"ElementaryTypeName","src":"83357:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"83356:34:15"},"returnParameters":{"id":16403,"nodeType":"ParameterList","parameters":[],"src":"83399:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16410,"nodeType":"FunctionDefinition","src":"83603:50:15","nodes":[],"documentation":{"id":16405,"nodeType":"StructuredDocumentation","src":"83406:192:15","text":"Marks that the account(s) should use persistent storage across fork swaps in a multifork setup\n Meaning, changes made to the state of this account will be kept when switching forks."},"functionSelector":"57e22dde","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"83612:14:15","parameters":{"id":16408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16407,"mutability":"mutable","name":"account","nameLocation":"83635:7:15","nodeType":"VariableDeclaration","scope":16410,"src":"83627:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16406,"name":"address","nodeType":"ElementaryTypeName","src":"83627:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"83626:17:15"},"returnParameters":{"id":16409,"nodeType":"ParameterList","parameters":[],"src":"83652:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16418,"nodeType":"FunctionDefinition","src":"83698:69:15","nodes":[],"documentation":{"id":16411,"nodeType":"StructuredDocumentation","src":"83659:34:15","text":"See `makePersistent(address)`."},"functionSelector":"4074e0a8","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"83707:14:15","parameters":{"id":16416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16413,"mutability":"mutable","name":"account0","nameLocation":"83730:8:15","nodeType":"VariableDeclaration","scope":16418,"src":"83722:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16412,"name":"address","nodeType":"ElementaryTypeName","src":"83722:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16415,"mutability":"mutable","name":"account1","nameLocation":"83748:8:15","nodeType":"VariableDeclaration","scope":16418,"src":"83740:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16414,"name":"address","nodeType":"ElementaryTypeName","src":"83740:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"83721:36:15"},"returnParameters":{"id":16417,"nodeType":"ParameterList","parameters":[],"src":"83766:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16428,"nodeType":"FunctionDefinition","src":"83812:87:15","nodes":[],"documentation":{"id":16419,"nodeType":"StructuredDocumentation","src":"83773:34:15","text":"See `makePersistent(address)`."},"functionSelector":"efb77a75","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"83821:14:15","parameters":{"id":16426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16421,"mutability":"mutable","name":"account0","nameLocation":"83844:8:15","nodeType":"VariableDeclaration","scope":16428,"src":"83836:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16420,"name":"address","nodeType":"ElementaryTypeName","src":"83836:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16423,"mutability":"mutable","name":"account1","nameLocation":"83862:8:15","nodeType":"VariableDeclaration","scope":16428,"src":"83854:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16422,"name":"address","nodeType":"ElementaryTypeName","src":"83854:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16425,"mutability":"mutable","name":"account2","nameLocation":"83880:8:15","nodeType":"VariableDeclaration","scope":16428,"src":"83872:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16424,"name":"address","nodeType":"ElementaryTypeName","src":"83872:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"83835:54:15"},"returnParameters":{"id":16427,"nodeType":"ParameterList","parameters":[],"src":"83898:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16435,"nodeType":"FunctionDefinition","src":"83944:62:15","nodes":[],"documentation":{"id":16429,"nodeType":"StructuredDocumentation","src":"83905:34:15","text":"See `makePersistent(address)`."},"functionSelector":"1d9e269e","implemented":false,"kind":"function","modifiers":[],"name":"makePersistent","nameLocation":"83953:14:15","parameters":{"id":16433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16432,"mutability":"mutable","name":"accounts","nameLocation":"83987:8:15","nodeType":"VariableDeclaration","scope":16435,"src":"83968:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16430,"name":"address","nodeType":"ElementaryTypeName","src":"83968:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16431,"nodeType":"ArrayTypeName","src":"83968:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"83967:29:15"},"returnParameters":{"id":16434,"nodeType":"ParameterList","parameters":[],"src":"84005:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16445,"nodeType":"FunctionDefinition","src":"84077:97:15","nodes":[],"documentation":{"id":16436,"nodeType":"StructuredDocumentation","src":"84012:60:15","text":"Reverts a call to an address with specified revert data."},"functionSelector":"dbaad147","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"84086:14:15","parameters":{"id":16443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16438,"mutability":"mutable","name":"callee","nameLocation":"84109:6:15","nodeType":"VariableDeclaration","scope":16445,"src":"84101:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16437,"name":"address","nodeType":"ElementaryTypeName","src":"84101:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16440,"mutability":"mutable","name":"data","nameLocation":"84132:4:15","nodeType":"VariableDeclaration","scope":16445,"src":"84117:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16439,"name":"bytes","nodeType":"ElementaryTypeName","src":"84117:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16442,"mutability":"mutable","name":"revertData","nameLocation":"84153:10:15","nodeType":"VariableDeclaration","scope":16445,"src":"84138:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16441,"name":"bytes","nodeType":"ElementaryTypeName","src":"84138:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"84100:64:15"},"returnParameters":{"id":16444,"nodeType":"ParameterList","parameters":[],"src":"84173:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16457,"nodeType":"FunctionDefinition","src":"84274:123:15","nodes":[],"documentation":{"id":16446,"nodeType":"StructuredDocumentation","src":"84180:89:15","text":"Reverts a call to an address with a specific `msg.value`, with specified revert data."},"functionSelector":"d23cd037","implemented":false,"kind":"function","modifiers":[],"name":"mockCallRevert","nameLocation":"84283:14:15","parameters":{"id":16455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16448,"mutability":"mutable","name":"callee","nameLocation":"84306:6:15","nodeType":"VariableDeclaration","scope":16457,"src":"84298:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16447,"name":"address","nodeType":"ElementaryTypeName","src":"84298:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16450,"mutability":"mutable","name":"msgValue","nameLocation":"84322:8:15","nodeType":"VariableDeclaration","scope":16457,"src":"84314:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16449,"name":"uint256","nodeType":"ElementaryTypeName","src":"84314:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16452,"mutability":"mutable","name":"data","nameLocation":"84347:4:15","nodeType":"VariableDeclaration","scope":16457,"src":"84332:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16451,"name":"bytes","nodeType":"ElementaryTypeName","src":"84332:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16454,"mutability":"mutable","name":"revertData","nameLocation":"84368:10:15","nodeType":"VariableDeclaration","scope":16457,"src":"84353:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16453,"name":"bytes","nodeType":"ElementaryTypeName","src":"84353:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"84297:82:15"},"returnParameters":{"id":16456,"nodeType":"ParameterList","parameters":[],"src":"84396:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16467,"nodeType":"FunctionDefinition","src":"84657:91:15","nodes":[],"documentation":{"id":16458,"nodeType":"StructuredDocumentation","src":"84403:249:15","text":"Mocks a call to an address, returning specified data.\n Calldata can either be strict or a partial match, e.g. if you only\n pass a Solidity selector to the expected calldata, then the entire Solidity\n function will be mocked."},"functionSelector":"b96213e4","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"84666:8:15","parameters":{"id":16465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16460,"mutability":"mutable","name":"callee","nameLocation":"84683:6:15","nodeType":"VariableDeclaration","scope":16467,"src":"84675:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16459,"name":"address","nodeType":"ElementaryTypeName","src":"84675:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16462,"mutability":"mutable","name":"data","nameLocation":"84706:4:15","nodeType":"VariableDeclaration","scope":16467,"src":"84691:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16461,"name":"bytes","nodeType":"ElementaryTypeName","src":"84691:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16464,"mutability":"mutable","name":"returnData","nameLocation":"84727:10:15","nodeType":"VariableDeclaration","scope":16467,"src":"84712:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16463,"name":"bytes","nodeType":"ElementaryTypeName","src":"84712:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"84674:64:15"},"returnParameters":{"id":16466,"nodeType":"ParameterList","parameters":[],"src":"84747:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16479,"nodeType":"FunctionDefinition","src":"84923:109:15","nodes":[],"documentation":{"id":16468,"nodeType":"StructuredDocumentation","src":"84754:164:15","text":"Mocks a call to an address with a specific `msg.value`, returning specified data.\n Calldata match takes precedence over `msg.value` in case of ambiguity."},"functionSelector":"81409b91","implemented":false,"kind":"function","modifiers":[],"name":"mockCall","nameLocation":"84932:8:15","parameters":{"id":16477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16470,"mutability":"mutable","name":"callee","nameLocation":"84949:6:15","nodeType":"VariableDeclaration","scope":16479,"src":"84941:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16469,"name":"address","nodeType":"ElementaryTypeName","src":"84941:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16472,"mutability":"mutable","name":"msgValue","nameLocation":"84965:8:15","nodeType":"VariableDeclaration","scope":16479,"src":"84957:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16471,"name":"uint256","nodeType":"ElementaryTypeName","src":"84957:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16474,"mutability":"mutable","name":"data","nameLocation":"84990:4:15","nodeType":"VariableDeclaration","scope":16479,"src":"84975:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16473,"name":"bytes","nodeType":"ElementaryTypeName","src":"84975:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16476,"mutability":"mutable","name":"returnData","nameLocation":"85011:10:15","nodeType":"VariableDeclaration","scope":16479,"src":"84996:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16475,"name":"bytes","nodeType":"ElementaryTypeName","src":"84996:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"84940:82:15"},"returnParameters":{"id":16478,"nodeType":"ParameterList","parameters":[],"src":"85031:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16485,"nodeType":"FunctionDefinition","src":"85107:43:15","nodes":[],"documentation":{"id":16480,"nodeType":"StructuredDocumentation","src":"85038:64:15","text":"Sets the *next* call's `msg.sender` to be the input address."},"functionSelector":"ca669fa7","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"85116:5:15","parameters":{"id":16483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16482,"mutability":"mutable","name":"msgSender","nameLocation":"85130:9:15","nodeType":"VariableDeclaration","scope":16485,"src":"85122:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16481,"name":"address","nodeType":"ElementaryTypeName","src":"85122:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"85121:19:15"},"returnParameters":{"id":16484,"nodeType":"ParameterList","parameters":[],"src":"85149:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16493,"nodeType":"FunctionDefinition","src":"85269:61:15","nodes":[],"documentation":{"id":16486,"nodeType":"StructuredDocumentation","src":"85156:108:15","text":"Sets the *next* call's `msg.sender` to be the input address, and the `tx.origin` to be the second input."},"functionSelector":"47e50cce","implemented":false,"kind":"function","modifiers":[],"name":"prank","nameLocation":"85278:5:15","parameters":{"id":16491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16488,"mutability":"mutable","name":"msgSender","nameLocation":"85292:9:15","nodeType":"VariableDeclaration","scope":16493,"src":"85284:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16487,"name":"address","nodeType":"ElementaryTypeName","src":"85284:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16490,"mutability":"mutable","name":"txOrigin","nameLocation":"85311:8:15","nodeType":"VariableDeclaration","scope":16493,"src":"85303:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16489,"name":"address","nodeType":"ElementaryTypeName","src":"85303:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"85283:37:15"},"returnParameters":{"id":16492,"nodeType":"ParameterList","parameters":[],"src":"85329:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16499,"nodeType":"FunctionDefinition","src":"85507:52:15","nodes":[],"documentation":{"id":16494,"nodeType":"StructuredDocumentation","src":"85336:166:15","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"3b925549","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"85516:10:15","parameters":{"id":16497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16496,"mutability":"mutable","name":"newPrevrandao","nameLocation":"85535:13:15","nodeType":"VariableDeclaration","scope":16499,"src":"85527:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16495,"name":"bytes32","nodeType":"ElementaryTypeName","src":"85527:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"85526:23:15"},"returnParameters":{"id":16498,"nodeType":"ParameterList","parameters":[],"src":"85558:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16505,"nodeType":"FunctionDefinition","src":"85736:52:15","nodes":[],"documentation":{"id":16500,"nodeType":"StructuredDocumentation","src":"85565:166:15","text":"Sets `block.prevrandao`.\n Not available on EVM versions before Paris. Use `difficulty` instead.\n If used on unsupported EVM versions it will revert."},"functionSelector":"9cb1c0d4","implemented":false,"kind":"function","modifiers":[],"name":"prevrandao","nameLocation":"85745:10:15","parameters":{"id":16503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16502,"mutability":"mutable","name":"newPrevrandao","nameLocation":"85764:13:15","nodeType":"VariableDeclaration","scope":16505,"src":"85756:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16501,"name":"uint256","nodeType":"ElementaryTypeName","src":"85756:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"85755:23:15"},"returnParameters":{"id":16504,"nodeType":"ParameterList","parameters":[],"src":"85787:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16516,"nodeType":"FunctionDefinition","src":"85916:101:15","nodes":[],"documentation":{"id":16506,"nodeType":"StructuredDocumentation","src":"85794:117:15","text":"Reads the current `msg.sender` and `tx.origin` from state and reports if there is any active caller modification."},"functionSelector":"4ad0bac9","implemented":false,"kind":"function","modifiers":[],"name":"readCallers","nameLocation":"85925:11:15","parameters":{"id":16507,"nodeType":"ParameterList","parameters":[],"src":"85936:2:15"},"returnParameters":{"id":16515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16510,"mutability":"mutable","name":"callerMode","nameLocation":"85968:10:15","nodeType":"VariableDeclaration","scope":16516,"src":"85957:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$12912","typeString":"enum VmSafe.CallerMode"},"typeName":{"id":16509,"nodeType":"UserDefinedTypeName","pathNode":{"id":16508,"name":"CallerMode","nameLocations":["85957:10:15"],"nodeType":"IdentifierPath","referencedDeclaration":12912,"src":"85957:10:15"},"referencedDeclaration":12912,"src":"85957:10:15","typeDescriptions":{"typeIdentifier":"t_enum$_CallerMode_$12912","typeString":"enum VmSafe.CallerMode"}},"visibility":"internal"},{"constant":false,"id":16512,"mutability":"mutable","name":"msgSender","nameLocation":"85988:9:15","nodeType":"VariableDeclaration","scope":16516,"src":"85980:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16511,"name":"address","nodeType":"ElementaryTypeName","src":"85980:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16514,"mutability":"mutable","name":"txOrigin","nameLocation":"86007:8:15","nodeType":"VariableDeclaration","scope":16516,"src":"85999:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16513,"name":"address","nodeType":"ElementaryTypeName","src":"85999:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"85956:60:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16522,"nodeType":"FunctionDefinition","src":"86105:46:15","nodes":[],"documentation":{"id":16517,"nodeType":"StructuredDocumentation","src":"86023:77:15","text":"Resets the nonce of an account to 0 for EOAs and 1 for contract accounts."},"functionSelector":"1c72346d","implemented":false,"kind":"function","modifiers":[],"name":"resetNonce","nameLocation":"86114:10:15","parameters":{"id":16520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16519,"mutability":"mutable","name":"account","nameLocation":"86133:7:15","nodeType":"VariableDeclaration","scope":16522,"src":"86125:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16518,"name":"address","nodeType":"ElementaryTypeName","src":"86125:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"86124:17:15"},"returnParameters":{"id":16521,"nodeType":"ParameterList","parameters":[],"src":"86150:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16530,"nodeType":"FunctionDefinition","src":"86494:70:15","nodes":[],"documentation":{"id":16523,"nodeType":"StructuredDocumentation","src":"86157:332:15","text":"Revert the state of the EVM to a previous snapshot\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted.\n Returns `false` if the snapshot does not exist.\n **Note:** This does not automatically delete the snapshot. To delete the snapshot use `deleteSnapshot`."},"functionSelector":"44d7f0a4","implemented":false,"kind":"function","modifiers":[],"name":"revertTo","nameLocation":"86503:8:15","parameters":{"id":16526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16525,"mutability":"mutable","name":"snapshotId","nameLocation":"86520:10:15","nodeType":"VariableDeclaration","scope":16530,"src":"86512:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16524,"name":"uint256","nodeType":"ElementaryTypeName","src":"86512:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"86511:20:15"},"returnParameters":{"id":16529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16528,"mutability":"mutable","name":"success","nameLocation":"86555:7:15","nodeType":"VariableDeclaration","scope":16530,"src":"86550:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16527,"name":"bool","nodeType":"ElementaryTypeName","src":"86550:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"86549:14:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16538,"nodeType":"FunctionDefinition","src":"86847:79:15","nodes":[],"documentation":{"id":16531,"nodeType":"StructuredDocumentation","src":"86570:272:15","text":"Revert the state of the EVM to a previous snapshot and automatically deletes the snapshots\n Takes the snapshot ID to revert to.\n Returns `true` if the snapshot was successfully reverted and deleted.\n Returns `false` if the snapshot does not exist."},"functionSelector":"03e0aca9","implemented":false,"kind":"function","modifiers":[],"name":"revertToAndDelete","nameLocation":"86856:17:15","parameters":{"id":16534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16533,"mutability":"mutable","name":"snapshotId","nameLocation":"86882:10:15","nodeType":"VariableDeclaration","scope":16538,"src":"86874:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16532,"name":"uint256","nodeType":"ElementaryTypeName","src":"86874:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"86873:20:15"},"returnParameters":{"id":16537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16536,"mutability":"mutable","name":"success","nameLocation":"86917:7:15","nodeType":"VariableDeclaration","scope":16538,"src":"86912:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16535,"name":"bool","nodeType":"ElementaryTypeName","src":"86912:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"86911:14:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16544,"nodeType":"FunctionDefinition","src":"87023:52:15","nodes":[],"documentation":{"id":16539,"nodeType":"StructuredDocumentation","src":"86932:86:15","text":"Revokes persistent status from the address, previously added via `makePersistent`."},"functionSelector":"997a0222","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"87032:16:15","parameters":{"id":16542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16541,"mutability":"mutable","name":"account","nameLocation":"87057:7:15","nodeType":"VariableDeclaration","scope":16544,"src":"87049:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16540,"name":"address","nodeType":"ElementaryTypeName","src":"87049:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"87048:17:15"},"returnParameters":{"id":16543,"nodeType":"ParameterList","parameters":[],"src":"87074:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16551,"nodeType":"FunctionDefinition","src":"87122:64:15","nodes":[],"documentation":{"id":16545,"nodeType":"StructuredDocumentation","src":"87081:36:15","text":"See `revokePersistent(address)`."},"functionSelector":"3ce969e6","implemented":false,"kind":"function","modifiers":[],"name":"revokePersistent","nameLocation":"87131:16:15","parameters":{"id":16549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16548,"mutability":"mutable","name":"accounts","nameLocation":"87167:8:15","nodeType":"VariableDeclaration","scope":16551,"src":"87148:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":16546,"name":"address","nodeType":"ElementaryTypeName","src":"87148:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":16547,"nodeType":"ArrayTypeName","src":"87148:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"87147:29:15"},"returnParameters":{"id":16550,"nodeType":"ParameterList","parameters":[],"src":"87185:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16557,"nodeType":"FunctionDefinition","src":"87221:42:15","nodes":[],"documentation":{"id":16552,"nodeType":"StructuredDocumentation","src":"87192:24:15","text":"Sets `block.height`."},"functionSelector":"1f7b4f30","implemented":false,"kind":"function","modifiers":[],"name":"roll","nameLocation":"87230:4:15","parameters":{"id":16555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16554,"mutability":"mutable","name":"newHeight","nameLocation":"87243:9:15","nodeType":"VariableDeclaration","scope":16557,"src":"87235:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16553,"name":"uint256","nodeType":"ElementaryTypeName","src":"87235:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"87234:19:15"},"returnParameters":{"id":16556,"nodeType":"ParameterList","parameters":[],"src":"87262:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16563,"nodeType":"FunctionDefinition","src":"87402:48:15","nodes":[],"documentation":{"id":16558,"nodeType":"StructuredDocumentation","src":"87269:128:15","text":"Updates the currently active fork to given block number\n This is similar to `roll` but for the currently active fork."},"functionSelector":"d9bbf3a1","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"87411:8:15","parameters":{"id":16561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16560,"mutability":"mutable","name":"blockNumber","nameLocation":"87428:11:15","nodeType":"VariableDeclaration","scope":16563,"src":"87420:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16559,"name":"uint256","nodeType":"ElementaryTypeName","src":"87420:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"87419:21:15"},"returnParameters":{"id":16562,"nodeType":"ParameterList","parameters":[],"src":"87449:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16569,"nodeType":"FunctionDefinition","src":"87665:43:15","nodes":[],"documentation":{"id":16564,"nodeType":"StructuredDocumentation","src":"87456:204:15","text":"Updates the currently active fork to given transaction. This will `rollFork` with the number\n of the block the transaction was mined in and replays all transaction mined before it in the block."},"functionSelector":"0f29772b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"87674:8:15","parameters":{"id":16567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16566,"mutability":"mutable","name":"txHash","nameLocation":"87691:6:15","nodeType":"VariableDeclaration","scope":16569,"src":"87683:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16565,"name":"bytes32","nodeType":"ElementaryTypeName","src":"87683:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"87682:16:15"},"returnParameters":{"id":16568,"nodeType":"ParameterList","parameters":[],"src":"87707:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16577,"nodeType":"FunctionDefinition","src":"87768:64:15","nodes":[],"documentation":{"id":16570,"nodeType":"StructuredDocumentation","src":"87714:49:15","text":"Updates the given fork to given block number."},"functionSelector":"d74c83a4","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"87777:8:15","parameters":{"id":16575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16572,"mutability":"mutable","name":"forkId","nameLocation":"87794:6:15","nodeType":"VariableDeclaration","scope":16577,"src":"87786:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16571,"name":"uint256","nodeType":"ElementaryTypeName","src":"87786:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16574,"mutability":"mutable","name":"blockNumber","nameLocation":"87810:11:15","nodeType":"VariableDeclaration","scope":16577,"src":"87802:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16573,"name":"uint256","nodeType":"ElementaryTypeName","src":"87802:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"87785:37:15"},"returnParameters":{"id":16576,"nodeType":"ParameterList","parameters":[],"src":"87831:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16585,"nodeType":"FunctionDefinition","src":"87968:59:15","nodes":[],"documentation":{"id":16578,"nodeType":"StructuredDocumentation","src":"87838:125:15","text":"Updates the given fork to block number of the given transaction and replays all transaction mined before it in the block."},"functionSelector":"f2830f7b","implemented":false,"kind":"function","modifiers":[],"name":"rollFork","nameLocation":"87977:8:15","parameters":{"id":16583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16580,"mutability":"mutable","name":"forkId","nameLocation":"87994:6:15","nodeType":"VariableDeclaration","scope":16585,"src":"87986:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16579,"name":"uint256","nodeType":"ElementaryTypeName","src":"87986:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16582,"mutability":"mutable","name":"txHash","nameLocation":"88010:6:15","nodeType":"VariableDeclaration","scope":16585,"src":"88002:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16581,"name":"bytes32","nodeType":"ElementaryTypeName","src":"88002:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"87985:32:15"},"returnParameters":{"id":16584,"nodeType":"ParameterList","parameters":[],"src":"88026:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16591,"nodeType":"FunctionDefinition","src":"88140:45:15","nodes":[],"documentation":{"id":16586,"nodeType":"StructuredDocumentation","src":"88033:102:15","text":"Takes a fork identifier created by `createFork` and sets the corresponding forked state as active."},"functionSelector":"9ebf6827","implemented":false,"kind":"function","modifiers":[],"name":"selectFork","nameLocation":"88149:10:15","parameters":{"id":16589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16588,"mutability":"mutable","name":"forkId","nameLocation":"88168:6:15","nodeType":"VariableDeclaration","scope":16591,"src":"88160:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16587,"name":"uint256","nodeType":"ElementaryTypeName","src":"88160:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"88159:16:15"},"returnParameters":{"id":16590,"nodeType":"ParameterList","parameters":[],"src":"88184:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16599,"nodeType":"FunctionDefinition","src":"88335:71:15","nodes":[],"documentation":{"id":16592,"nodeType":"StructuredDocumentation","src":"88191:139:15","text":"Set blockhash for the current block.\n It only sets the blockhash for blocks where `block.number - 256 <= number < block.number`."},"functionSelector":"5314b54a","implemented":false,"kind":"function","modifiers":[],"name":"setBlockhash","nameLocation":"88344:12:15","parameters":{"id":16597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16594,"mutability":"mutable","name":"blockNumber","nameLocation":"88365:11:15","nodeType":"VariableDeclaration","scope":16599,"src":"88357:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16593,"name":"uint256","nodeType":"ElementaryTypeName","src":"88357:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16596,"mutability":"mutable","name":"blockHash","nameLocation":"88386:9:15","nodeType":"VariableDeclaration","scope":16599,"src":"88378:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16595,"name":"bytes32","nodeType":"ElementaryTypeName","src":"88378:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"88356:40:15"},"returnParameters":{"id":16598,"nodeType":"ParameterList","parameters":[],"src":"88405:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16607,"nodeType":"FunctionDefinition","src":"88504:61:15","nodes":[],"documentation":{"id":16600,"nodeType":"StructuredDocumentation","src":"88412:87:15","text":"Sets the nonce of an account. Must be higher than the current nonce of the account."},"functionSelector":"f8e18b57","implemented":false,"kind":"function","modifiers":[],"name":"setNonce","nameLocation":"88513:8:15","parameters":{"id":16605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16602,"mutability":"mutable","name":"account","nameLocation":"88530:7:15","nodeType":"VariableDeclaration","scope":16607,"src":"88522:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16601,"name":"address","nodeType":"ElementaryTypeName","src":"88522:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16604,"mutability":"mutable","name":"newNonce","nameLocation":"88546:8:15","nodeType":"VariableDeclaration","scope":16607,"src":"88539:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16603,"name":"uint64","nodeType":"ElementaryTypeName","src":"88539:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"88521:34:15"},"returnParameters":{"id":16606,"nodeType":"ParameterList","parameters":[],"src":"88564:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16615,"nodeType":"FunctionDefinition","src":"88631:67:15","nodes":[],"documentation":{"id":16608,"nodeType":"StructuredDocumentation","src":"88571:55:15","text":"Sets the nonce of an account to an arbitrary value."},"functionSelector":"9b67b21c","implemented":false,"kind":"function","modifiers":[],"name":"setNonceUnsafe","nameLocation":"88640:14:15","parameters":{"id":16613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16610,"mutability":"mutable","name":"account","nameLocation":"88663:7:15","nodeType":"VariableDeclaration","scope":16615,"src":"88655:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16609,"name":"address","nodeType":"ElementaryTypeName","src":"88655:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16612,"mutability":"mutable","name":"newNonce","nameLocation":"88679:8:15","nodeType":"VariableDeclaration","scope":16615,"src":"88672:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16611,"name":"uint64","nodeType":"ElementaryTypeName","src":"88672:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"88654:34:15"},"returnParameters":{"id":16614,"nodeType":"ParameterList","parameters":[],"src":"88697:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16621,"nodeType":"FunctionDefinition","src":"88853:58:15","nodes":[],"documentation":{"id":16616,"nodeType":"StructuredDocumentation","src":"88704:144:15","text":"Snapshot the current state of the evm.\n Returns the ID of the snapshot that was created.\n To revert a snapshot use `revertTo`."},"functionSelector":"9711715a","implemented":false,"kind":"function","modifiers":[],"name":"snapshot","nameLocation":"88862:8:15","parameters":{"id":16617,"nodeType":"ParameterList","parameters":[],"src":"88870:2:15"},"returnParameters":{"id":16620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16619,"mutability":"mutable","name":"snapshotId","nameLocation":"88899:10:15","nodeType":"VariableDeclaration","scope":16621,"src":"88891:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16618,"name":"uint256","nodeType":"ElementaryTypeName","src":"88891:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"88890:20:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16627,"nodeType":"FunctionDefinition","src":"89018:48:15","nodes":[],"documentation":{"id":16622,"nodeType":"StructuredDocumentation","src":"88917:96:15","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called."},"functionSelector":"06447d56","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"89027:10:15","parameters":{"id":16625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16624,"mutability":"mutable","name":"msgSender","nameLocation":"89046:9:15","nodeType":"VariableDeclaration","scope":16627,"src":"89038:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16623,"name":"address","nodeType":"ElementaryTypeName","src":"89038:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"89037:19:15"},"returnParameters":{"id":16626,"nodeType":"ParameterList","parameters":[],"src":"89065:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16635,"nodeType":"FunctionDefinition","src":"89217:66:15","nodes":[],"documentation":{"id":16628,"nodeType":"StructuredDocumentation","src":"89072:140:15","text":"Sets all subsequent calls' `msg.sender` to be the input address until `stopPrank` is called, and the `tx.origin` to be the second input."},"functionSelector":"45b56078","implemented":false,"kind":"function","modifiers":[],"name":"startPrank","nameLocation":"89226:10:15","parameters":{"id":16633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16630,"mutability":"mutable","name":"msgSender","nameLocation":"89245:9:15","nodeType":"VariableDeclaration","scope":16635,"src":"89237:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16629,"name":"address","nodeType":"ElementaryTypeName","src":"89237:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16632,"mutability":"mutable","name":"txOrigin","nameLocation":"89264:8:15","nodeType":"VariableDeclaration","scope":16635,"src":"89256:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16631,"name":"address","nodeType":"ElementaryTypeName","src":"89256:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"89236:37:15"},"returnParameters":{"id":16634,"nodeType":"ParameterList","parameters":[],"src":"89282:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16639,"nodeType":"FunctionDefinition","src":"89358:30:15","nodes":[],"documentation":{"id":16636,"nodeType":"StructuredDocumentation","src":"89289:64:15","text":"Resets subsequent calls' `msg.sender` to be `address(this)`."},"functionSelector":"90c5013b","implemented":false,"kind":"function","modifiers":[],"name":"stopPrank","nameLocation":"89367:9:15","parameters":{"id":16637,"nodeType":"ParameterList","parameters":[],"src":"89376:2:15"},"returnParameters":{"id":16638,"nodeType":"ParameterList","parameters":[],"src":"89387:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16649,"nodeType":"FunctionDefinition","src":"89446:69:15","nodes":[],"documentation":{"id":16640,"nodeType":"StructuredDocumentation","src":"89394:47:15","text":"Stores a value to an address' storage slot."},"functionSelector":"70ca10bb","implemented":false,"kind":"function","modifiers":[],"name":"store","nameLocation":"89455:5:15","parameters":{"id":16647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16642,"mutability":"mutable","name":"target","nameLocation":"89469:6:15","nodeType":"VariableDeclaration","scope":16649,"src":"89461:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16641,"name":"address","nodeType":"ElementaryTypeName","src":"89461:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16644,"mutability":"mutable","name":"slot","nameLocation":"89485:4:15","nodeType":"VariableDeclaration","scope":16649,"src":"89477:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16643,"name":"bytes32","nodeType":"ElementaryTypeName","src":"89477:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":16646,"mutability":"mutable","name":"value","nameLocation":"89499:5:15","nodeType":"VariableDeclaration","scope":16649,"src":"89491:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16645,"name":"bytes32","nodeType":"ElementaryTypeName","src":"89491:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"89460:45:15"},"returnParameters":{"id":16648,"nodeType":"ParameterList","parameters":[],"src":"89514:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16655,"nodeType":"FunctionDefinition","src":"89618:43:15","nodes":[],"documentation":{"id":16650,"nodeType":"StructuredDocumentation","src":"89521:92:15","text":"Fetches the given transaction from the active fork and executes it on the current state."},"functionSelector":"be646da1","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"89627:8:15","parameters":{"id":16653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16652,"mutability":"mutable","name":"txHash","nameLocation":"89644:6:15","nodeType":"VariableDeclaration","scope":16655,"src":"89636:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16651,"name":"bytes32","nodeType":"ElementaryTypeName","src":"89636:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"89635:16:15"},"returnParameters":{"id":16654,"nodeType":"ParameterList","parameters":[],"src":"89660:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16663,"nodeType":"FunctionDefinition","src":"89763:59:15","nodes":[],"documentation":{"id":16656,"nodeType":"StructuredDocumentation","src":"89667:91:15","text":"Fetches the given transaction from the given fork and executes it on the current state."},"functionSelector":"4d8abc4b","implemented":false,"kind":"function","modifiers":[],"name":"transact","nameLocation":"89772:8:15","parameters":{"id":16661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16658,"mutability":"mutable","name":"forkId","nameLocation":"89789:6:15","nodeType":"VariableDeclaration","scope":16663,"src":"89781:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16657,"name":"uint256","nodeType":"ElementaryTypeName","src":"89781:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16660,"mutability":"mutable","name":"txHash","nameLocation":"89805:6:15","nodeType":"VariableDeclaration","scope":16663,"src":"89797:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":16659,"name":"bytes32","nodeType":"ElementaryTypeName","src":"89797:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"89780:32:15"},"returnParameters":{"id":16662,"nodeType":"ParameterList","parameters":[],"src":"89821:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16669,"nodeType":"FunctionDefinition","src":"89856:50:15","nodes":[],"documentation":{"id":16664,"nodeType":"StructuredDocumentation","src":"89828:23:15","text":"Sets `tx.gasprice`."},"functionSelector":"48f50c0f","implemented":false,"kind":"function","modifiers":[],"name":"txGasPrice","nameLocation":"89865:10:15","parameters":{"id":16667,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16666,"mutability":"mutable","name":"newGasPrice","nameLocation":"89884:11:15","nodeType":"VariableDeclaration","scope":16669,"src":"89876:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16665,"name":"uint256","nodeType":"ElementaryTypeName","src":"89876:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"89875:21:15"},"returnParameters":{"id":16668,"nodeType":"ParameterList","parameters":[],"src":"89905:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16675,"nodeType":"FunctionDefinition","src":"89944:45:15","nodes":[],"documentation":{"id":16670,"nodeType":"StructuredDocumentation","src":"89912:27:15","text":"Sets `block.timestamp`."},"functionSelector":"e5d6bf02","implemented":false,"kind":"function","modifiers":[],"name":"warp","nameLocation":"89953:4:15","parameters":{"id":16673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16672,"mutability":"mutable","name":"newTimestamp","nameLocation":"89966:12:15","nodeType":"VariableDeclaration","scope":16675,"src":"89958:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16671,"name":"uint256","nodeType":"ElementaryTypeName","src":"89958:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"89957:22:15"},"returnParameters":{"id":16674,"nodeType":"ParameterList","parameters":[],"src":"89988:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16687,"nodeType":"FunctionDefinition","src":"90141:105:15","nodes":[],"documentation":{"id":16676,"nodeType":"StructuredDocumentation","src":"90029:107:15","text":"Expect a call to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"08e4e116","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"90150:16:15","parameters":{"id":16685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16678,"mutability":"mutable","name":"callee","nameLocation":"90175:6:15","nodeType":"VariableDeclaration","scope":16687,"src":"90167:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16677,"name":"address","nodeType":"ElementaryTypeName","src":"90167:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16680,"mutability":"mutable","name":"msgValue","nameLocation":"90191:8:15","nodeType":"VariableDeclaration","scope":16687,"src":"90183:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16679,"name":"uint256","nodeType":"ElementaryTypeName","src":"90183:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16682,"mutability":"mutable","name":"minGas","nameLocation":"90208:6:15","nodeType":"VariableDeclaration","scope":16687,"src":"90201:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16681,"name":"uint64","nodeType":"ElementaryTypeName","src":"90201:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16684,"mutability":"mutable","name":"data","nameLocation":"90231:4:15","nodeType":"VariableDeclaration","scope":16687,"src":"90216:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16683,"name":"bytes","nodeType":"ElementaryTypeName","src":"90216:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"90166:70:15"},"returnParameters":{"id":16686,"nodeType":"ParameterList","parameters":[],"src":"90245:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16701,"nodeType":"FunctionDefinition","src":"90379:127:15","nodes":[],"documentation":{"id":16688,"nodeType":"StructuredDocumentation","src":"90252:122:15","text":"Expect given number of calls to an address with the specified `msg.value` and calldata, and a *minimum* amount of gas."},"functionSelector":"e13a1834","implemented":false,"kind":"function","modifiers":[],"name":"expectCallMinGas","nameLocation":"90388:16:15","parameters":{"id":16699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16690,"mutability":"mutable","name":"callee","nameLocation":"90413:6:15","nodeType":"VariableDeclaration","scope":16701,"src":"90405:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16689,"name":"address","nodeType":"ElementaryTypeName","src":"90405:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16692,"mutability":"mutable","name":"msgValue","nameLocation":"90429:8:15","nodeType":"VariableDeclaration","scope":16701,"src":"90421:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16691,"name":"uint256","nodeType":"ElementaryTypeName","src":"90421:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16694,"mutability":"mutable","name":"minGas","nameLocation":"90446:6:15","nodeType":"VariableDeclaration","scope":16701,"src":"90439:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16693,"name":"uint64","nodeType":"ElementaryTypeName","src":"90439:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16696,"mutability":"mutable","name":"data","nameLocation":"90469:4:15","nodeType":"VariableDeclaration","scope":16701,"src":"90454:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16695,"name":"bytes","nodeType":"ElementaryTypeName","src":"90454:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16698,"mutability":"mutable","name":"count","nameLocation":"90482:5:15","nodeType":"VariableDeclaration","scope":16701,"src":"90475:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16697,"name":"uint64","nodeType":"ElementaryTypeName","src":"90475:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"90404:84:15"},"returnParameters":{"id":16700,"nodeType":"ParameterList","parameters":[],"src":"90505:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16709,"nodeType":"FunctionDefinition","src":"90638:66:15","nodes":[],"documentation":{"id":16702,"nodeType":"StructuredDocumentation","src":"90512:121:15","text":"Expects a call to an address with the specified calldata.\n Calldata can either be a strict or a partial match."},"functionSelector":"bd6af434","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"90647:10:15","parameters":{"id":16707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16704,"mutability":"mutable","name":"callee","nameLocation":"90666:6:15","nodeType":"VariableDeclaration","scope":16709,"src":"90658:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16703,"name":"address","nodeType":"ElementaryTypeName","src":"90658:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16706,"mutability":"mutable","name":"data","nameLocation":"90689:4:15","nodeType":"VariableDeclaration","scope":16709,"src":"90674:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16705,"name":"bytes","nodeType":"ElementaryTypeName","src":"90674:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"90657:37:15"},"returnParameters":{"id":16708,"nodeType":"ParameterList","parameters":[],"src":"90703:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16719,"nodeType":"FunctionDefinition","src":"90791:80:15","nodes":[],"documentation":{"id":16710,"nodeType":"StructuredDocumentation","src":"90710:76:15","text":"Expects given number of calls to an address with the specified calldata."},"functionSelector":"c1adbbff","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"90800:10:15","parameters":{"id":16717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16712,"mutability":"mutable","name":"callee","nameLocation":"90819:6:15","nodeType":"VariableDeclaration","scope":16719,"src":"90811:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16711,"name":"address","nodeType":"ElementaryTypeName","src":"90811:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16714,"mutability":"mutable","name":"data","nameLocation":"90842:4:15","nodeType":"VariableDeclaration","scope":16719,"src":"90827:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16713,"name":"bytes","nodeType":"ElementaryTypeName","src":"90827:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16716,"mutability":"mutable","name":"count","nameLocation":"90855:5:15","nodeType":"VariableDeclaration","scope":16719,"src":"90848:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16715,"name":"uint64","nodeType":"ElementaryTypeName","src":"90848:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"90810:51:15"},"returnParameters":{"id":16718,"nodeType":"ParameterList","parameters":[],"src":"90870:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16729,"nodeType":"FunctionDefinition","src":"90959:84:15","nodes":[],"documentation":{"id":16720,"nodeType":"StructuredDocumentation","src":"90877:77:15","text":"Expects a call to an address with the specified `msg.value` and calldata."},"functionSelector":"f30c7ba3","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"90968:10:15","parameters":{"id":16727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16722,"mutability":"mutable","name":"callee","nameLocation":"90987:6:15","nodeType":"VariableDeclaration","scope":16729,"src":"90979:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16721,"name":"address","nodeType":"ElementaryTypeName","src":"90979:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16724,"mutability":"mutable","name":"msgValue","nameLocation":"91003:8:15","nodeType":"VariableDeclaration","scope":16729,"src":"90995:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16723,"name":"uint256","nodeType":"ElementaryTypeName","src":"90995:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16726,"mutability":"mutable","name":"data","nameLocation":"91028:4:15","nodeType":"VariableDeclaration","scope":16729,"src":"91013:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16725,"name":"bytes","nodeType":"ElementaryTypeName","src":"91013:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"90978:55:15"},"returnParameters":{"id":16728,"nodeType":"ParameterList","parameters":[],"src":"91042:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16741,"nodeType":"FunctionDefinition","src":"91146:98:15","nodes":[],"documentation":{"id":16730,"nodeType":"StructuredDocumentation","src":"91049:92:15","text":"Expects given number of calls to an address with the specified `msg.value` and calldata."},"functionSelector":"a2b1a1ae","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"91155:10:15","parameters":{"id":16739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16732,"mutability":"mutable","name":"callee","nameLocation":"91174:6:15","nodeType":"VariableDeclaration","scope":16741,"src":"91166:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16731,"name":"address","nodeType":"ElementaryTypeName","src":"91166:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16734,"mutability":"mutable","name":"msgValue","nameLocation":"91190:8:15","nodeType":"VariableDeclaration","scope":16741,"src":"91182:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16733,"name":"uint256","nodeType":"ElementaryTypeName","src":"91182:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16736,"mutability":"mutable","name":"data","nameLocation":"91215:4:15","nodeType":"VariableDeclaration","scope":16741,"src":"91200:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16735,"name":"bytes","nodeType":"ElementaryTypeName","src":"91200:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16738,"mutability":"mutable","name":"count","nameLocation":"91228:5:15","nodeType":"VariableDeclaration","scope":16741,"src":"91221:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16737,"name":"uint64","nodeType":"ElementaryTypeName","src":"91221:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"91165:69:15"},"returnParameters":{"id":16740,"nodeType":"ParameterList","parameters":[],"src":"91243:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16753,"nodeType":"FunctionDefinition","src":"91337:96:15","nodes":[],"documentation":{"id":16742,"nodeType":"StructuredDocumentation","src":"91250:82:15","text":"Expect a call to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"23361207","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"91346:10:15","parameters":{"id":16751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16744,"mutability":"mutable","name":"callee","nameLocation":"91365:6:15","nodeType":"VariableDeclaration","scope":16753,"src":"91357:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16743,"name":"address","nodeType":"ElementaryTypeName","src":"91357:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16746,"mutability":"mutable","name":"msgValue","nameLocation":"91381:8:15","nodeType":"VariableDeclaration","scope":16753,"src":"91373:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16745,"name":"uint256","nodeType":"ElementaryTypeName","src":"91373:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16748,"mutability":"mutable","name":"gas","nameLocation":"91398:3:15","nodeType":"VariableDeclaration","scope":16753,"src":"91391:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16747,"name":"uint64","nodeType":"ElementaryTypeName","src":"91391:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16750,"mutability":"mutable","name":"data","nameLocation":"91418:4:15","nodeType":"VariableDeclaration","scope":16753,"src":"91403:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16749,"name":"bytes","nodeType":"ElementaryTypeName","src":"91403:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"91356:67:15"},"returnParameters":{"id":16752,"nodeType":"ParameterList","parameters":[],"src":"91432:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16767,"nodeType":"FunctionDefinition","src":"91542:110:15","nodes":[],"documentation":{"id":16754,"nodeType":"StructuredDocumentation","src":"91439:98:15","text":"Expects given number of calls to an address with the specified `msg.value`, gas, and calldata."},"functionSelector":"65b7b7cc","implemented":false,"kind":"function","modifiers":[],"name":"expectCall","nameLocation":"91551:10:15","parameters":{"id":16765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16756,"mutability":"mutable","name":"callee","nameLocation":"91570:6:15","nodeType":"VariableDeclaration","scope":16767,"src":"91562:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16755,"name":"address","nodeType":"ElementaryTypeName","src":"91562:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":16758,"mutability":"mutable","name":"msgValue","nameLocation":"91586:8:15","nodeType":"VariableDeclaration","scope":16767,"src":"91578:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":16757,"name":"uint256","nodeType":"ElementaryTypeName","src":"91578:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":16760,"mutability":"mutable","name":"gas","nameLocation":"91603:3:15","nodeType":"VariableDeclaration","scope":16767,"src":"91596:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16759,"name":"uint64","nodeType":"ElementaryTypeName","src":"91596:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16762,"mutability":"mutable","name":"data","nameLocation":"91623:4:15","nodeType":"VariableDeclaration","scope":16767,"src":"91608:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16761,"name":"bytes","nodeType":"ElementaryTypeName","src":"91608:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":16764,"mutability":"mutable","name":"count","nameLocation":"91636:5:15","nodeType":"VariableDeclaration","scope":16767,"src":"91629:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16763,"name":"uint64","nodeType":"ElementaryTypeName","src":"91629:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"91561:81:15"},"returnParameters":{"id":16766,"nodeType":"ParameterList","parameters":[],"src":"91651:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16781,"nodeType":"FunctionDefinition","src":"92011:134:15","nodes":[],"documentation":{"id":16768,"nodeType":"StructuredDocumentation","src":"91658:348:15","text":"Prepare an expected anonymous log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"c948db5e","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"92020:19:15","parameters":{"id":16779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16770,"mutability":"mutable","name":"checkTopic0","nameLocation":"92045:11:15","nodeType":"VariableDeclaration","scope":16781,"src":"92040:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16769,"name":"bool","nodeType":"ElementaryTypeName","src":"92040:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16772,"mutability":"mutable","name":"checkTopic1","nameLocation":"92063:11:15","nodeType":"VariableDeclaration","scope":16781,"src":"92058:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16771,"name":"bool","nodeType":"ElementaryTypeName","src":"92058:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16774,"mutability":"mutable","name":"checkTopic2","nameLocation":"92081:11:15","nodeType":"VariableDeclaration","scope":16781,"src":"92076:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16773,"name":"bool","nodeType":"ElementaryTypeName","src":"92076:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16776,"mutability":"mutable","name":"checkTopic3","nameLocation":"92099:11:15","nodeType":"VariableDeclaration","scope":16781,"src":"92094:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16775,"name":"bool","nodeType":"ElementaryTypeName","src":"92094:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16778,"mutability":"mutable","name":"checkData","nameLocation":"92117:9:15","nodeType":"VariableDeclaration","scope":16781,"src":"92112:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16777,"name":"bool","nodeType":"ElementaryTypeName","src":"92112:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"92039:88:15"},"returnParameters":{"id":16780,"nodeType":"ParameterList","parameters":[],"src":"92144:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16797,"nodeType":"FunctionDefinition","src":"92248:197:15","nodes":[],"documentation":{"id":16782,"nodeType":"StructuredDocumentation","src":"92151:92:15","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"71c95899","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"92257:19:15","parameters":{"id":16795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16784,"mutability":"mutable","name":"checkTopic0","nameLocation":"92291:11:15","nodeType":"VariableDeclaration","scope":16797,"src":"92286:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16783,"name":"bool","nodeType":"ElementaryTypeName","src":"92286:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16786,"mutability":"mutable","name":"checkTopic1","nameLocation":"92317:11:15","nodeType":"VariableDeclaration","scope":16797,"src":"92312:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16785,"name":"bool","nodeType":"ElementaryTypeName","src":"92312:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16788,"mutability":"mutable","name":"checkTopic2","nameLocation":"92343:11:15","nodeType":"VariableDeclaration","scope":16797,"src":"92338:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16787,"name":"bool","nodeType":"ElementaryTypeName","src":"92338:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16790,"mutability":"mutable","name":"checkTopic3","nameLocation":"92369:11:15","nodeType":"VariableDeclaration","scope":16797,"src":"92364:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16789,"name":"bool","nodeType":"ElementaryTypeName","src":"92364:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16792,"mutability":"mutable","name":"checkData","nameLocation":"92395:9:15","nodeType":"VariableDeclaration","scope":16797,"src":"92390:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16791,"name":"bool","nodeType":"ElementaryTypeName","src":"92390:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16794,"mutability":"mutable","name":"emitter","nameLocation":"92422:7:15","nodeType":"VariableDeclaration","scope":16797,"src":"92414:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16793,"name":"address","nodeType":"ElementaryTypeName","src":"92414:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"92276:159:15"},"returnParameters":{"id":16796,"nodeType":"ParameterList","parameters":[],"src":"92444:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16801,"nodeType":"FunctionDefinition","src":"92735:40:15","nodes":[],"documentation":{"id":16798,"nodeType":"StructuredDocumentation","src":"92451:279:15","text":"Prepare an expected anonymous log with all topic and data checks enabled.\n Call this function, then emit an anonymous event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"2e5f270c","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"92744:19:15","parameters":{"id":16799,"nodeType":"ParameterList","parameters":[],"src":"92763:2:15"},"returnParameters":{"id":16800,"nodeType":"ParameterList","parameters":[],"src":"92774:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16807,"nodeType":"FunctionDefinition","src":"92878:55:15","nodes":[],"documentation":{"id":16802,"nodeType":"StructuredDocumentation","src":"92781:92:15","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"6fc68705","implemented":false,"kind":"function","modifiers":[],"name":"expectEmitAnonymous","nameLocation":"92887:19:15","parameters":{"id":16805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16804,"mutability":"mutable","name":"emitter","nameLocation":"92915:7:15","nodeType":"VariableDeclaration","scope":16807,"src":"92907:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16803,"name":"address","nodeType":"ElementaryTypeName","src":"92907:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"92906:17:15"},"returnParameters":{"id":16806,"nodeType":"ParameterList","parameters":[],"src":"92932:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16819,"nodeType":"FunctionDefinition","src":"93272:99:15","nodes":[],"documentation":{"id":16808,"nodeType":"StructuredDocumentation","src":"92939:328:15","text":"Prepare an expected log with (bool checkTopic1, bool checkTopic2, bool checkTopic3, bool checkData.).\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data (as specified by the booleans)."},"functionSelector":"491cc7c2","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"93281:10:15","parameters":{"id":16817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16810,"mutability":"mutable","name":"checkTopic1","nameLocation":"93297:11:15","nodeType":"VariableDeclaration","scope":16819,"src":"93292:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16809,"name":"bool","nodeType":"ElementaryTypeName","src":"93292:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16812,"mutability":"mutable","name":"checkTopic2","nameLocation":"93315:11:15","nodeType":"VariableDeclaration","scope":16819,"src":"93310:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16811,"name":"bool","nodeType":"ElementaryTypeName","src":"93310:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16814,"mutability":"mutable","name":"checkTopic3","nameLocation":"93333:11:15","nodeType":"VariableDeclaration","scope":16819,"src":"93328:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16813,"name":"bool","nodeType":"ElementaryTypeName","src":"93328:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16816,"mutability":"mutable","name":"checkData","nameLocation":"93351:9:15","nodeType":"VariableDeclaration","scope":16819,"src":"93346:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16815,"name":"bool","nodeType":"ElementaryTypeName","src":"93346:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"93291:70:15"},"returnParameters":{"id":16818,"nodeType":"ParameterList","parameters":[],"src":"93370:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16833,"nodeType":"FunctionDefinition","src":"93474:124:15","nodes":[],"documentation":{"id":16820,"nodeType":"StructuredDocumentation","src":"93377:92:15","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"81bad6f3","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"93483:10:15","parameters":{"id":16831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16822,"mutability":"mutable","name":"checkTopic1","nameLocation":"93499:11:15","nodeType":"VariableDeclaration","scope":16833,"src":"93494:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16821,"name":"bool","nodeType":"ElementaryTypeName","src":"93494:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16824,"mutability":"mutable","name":"checkTopic2","nameLocation":"93517:11:15","nodeType":"VariableDeclaration","scope":16833,"src":"93512:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16823,"name":"bool","nodeType":"ElementaryTypeName","src":"93512:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16826,"mutability":"mutable","name":"checkTopic3","nameLocation":"93535:11:15","nodeType":"VariableDeclaration","scope":16833,"src":"93530:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16825,"name":"bool","nodeType":"ElementaryTypeName","src":"93530:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16828,"mutability":"mutable","name":"checkData","nameLocation":"93553:9:15","nodeType":"VariableDeclaration","scope":16833,"src":"93548:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16827,"name":"bool","nodeType":"ElementaryTypeName","src":"93548:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":16830,"mutability":"mutable","name":"emitter","nameLocation":"93572:7:15","nodeType":"VariableDeclaration","scope":16833,"src":"93564:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16829,"name":"address","nodeType":"ElementaryTypeName","src":"93564:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"93493:87:15"},"returnParameters":{"id":16832,"nodeType":"ParameterList","parameters":[],"src":"93597:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16837,"nodeType":"FunctionDefinition","src":"93868:31:15","nodes":[],"documentation":{"id":16834,"nodeType":"StructuredDocumentation","src":"93604:259:15","text":"Prepare an expected log with all topic and data checks enabled.\n Call this function, then emit an event, then call a function. Internally after the call, we check if\n logs were emitted in the expected order with the expected topics and data."},"functionSelector":"440ed10d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"93877:10:15","parameters":{"id":16835,"nodeType":"ParameterList","parameters":[],"src":"93887:2:15"},"returnParameters":{"id":16836,"nodeType":"ParameterList","parameters":[],"src":"93898:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16843,"nodeType":"FunctionDefinition","src":"94002:46:15","nodes":[],"documentation":{"id":16838,"nodeType":"StructuredDocumentation","src":"93905:92:15","text":"Same as the previous method, but also checks supplied address against emitting contract."},"functionSelector":"86b9620d","implemented":false,"kind":"function","modifiers":[],"name":"expectEmit","nameLocation":"94011:10:15","parameters":{"id":16841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16840,"mutability":"mutable","name":"emitter","nameLocation":"94030:7:15","nodeType":"VariableDeclaration","scope":16843,"src":"94022:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":16839,"name":"address","nodeType":"ElementaryTypeName","src":"94022:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"94021:17:15"},"returnParameters":{"id":16842,"nodeType":"ParameterList","parameters":[],"src":"94047:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16847,"nodeType":"FunctionDefinition","src":"94114:33:15","nodes":[],"documentation":{"id":16844,"nodeType":"StructuredDocumentation","src":"94054:55:15","text":"Expects an error on next call with any revert data."},"functionSelector":"f4844814","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"94123:12:15","parameters":{"id":16845,"nodeType":"ParameterList","parameters":[],"src":"94135:2:15"},"returnParameters":{"id":16846,"nodeType":"ParameterList","parameters":[],"src":"94146:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16853,"nodeType":"FunctionDefinition","src":"94225:50:15","nodes":[],"documentation":{"id":16848,"nodeType":"StructuredDocumentation","src":"94153:67:15","text":"Expects an error on next call that starts with the revert data."},"functionSelector":"c31eb0e0","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"94234:12:15","parameters":{"id":16851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16850,"mutability":"mutable","name":"revertData","nameLocation":"94254:10:15","nodeType":"VariableDeclaration","scope":16853,"src":"94247:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":16849,"name":"bytes4","nodeType":"ElementaryTypeName","src":"94247:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"94246:19:15"},"returnParameters":{"id":16852,"nodeType":"ParameterList","parameters":[],"src":"94274:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16859,"nodeType":"FunctionDefinition","src":"94357:58:15","nodes":[],"documentation":{"id":16854,"nodeType":"StructuredDocumentation","src":"94281:71:15","text":"Expects an error on next call that exactly matches the revert data."},"functionSelector":"f28dceb3","implemented":false,"kind":"function","modifiers":[],"name":"expectRevert","nameLocation":"94366:12:15","parameters":{"id":16857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16856,"mutability":"mutable","name":"revertData","nameLocation":"94394:10:15","nodeType":"VariableDeclaration","scope":16859,"src":"94379:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":16855,"name":"bytes","nodeType":"ElementaryTypeName","src":"94379:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"94378:27:15"},"returnParameters":{"id":16858,"nodeType":"ParameterList","parameters":[],"src":"94414:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16867,"nodeType":"FunctionDefinition","src":"94644:59:15","nodes":[],"documentation":{"id":16860,"nodeType":"StructuredDocumentation","src":"94421:218:15","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the current subcontext. If any other\n memory is written to, the test will fail. Can be called multiple times to add more ranges to the set."},"functionSelector":"6d016688","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemory","nameLocation":"94653:16:15","parameters":{"id":16865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16862,"mutability":"mutable","name":"min","nameLocation":"94677:3:15","nodeType":"VariableDeclaration","scope":16867,"src":"94670:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16861,"name":"uint64","nodeType":"ElementaryTypeName","src":"94670:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16864,"mutability":"mutable","name":"max","nameLocation":"94689:3:15","nodeType":"VariableDeclaration","scope":16867,"src":"94682:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16863,"name":"uint64","nodeType":"ElementaryTypeName","src":"94682:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"94669:24:15"},"returnParameters":{"id":16866,"nodeType":"ParameterList","parameters":[],"src":"94702:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16875,"nodeType":"FunctionDefinition","src":"94945:63:15","nodes":[],"documentation":{"id":16868,"nodeType":"StructuredDocumentation","src":"94709:231:15","text":"Only allows memory writes to offsets [0x00, 0x60) ∪ [min, max) in the next created subcontext.\n If any other memory is written to, the test will fail. Can be called multiple times to add more ranges\n to the set."},"functionSelector":"05838bf4","implemented":false,"kind":"function","modifiers":[],"name":"expectSafeMemoryCall","nameLocation":"94954:20:15","parameters":{"id":16873,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16870,"mutability":"mutable","name":"min","nameLocation":"94982:3:15","nodeType":"VariableDeclaration","scope":16875,"src":"94975:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16869,"name":"uint64","nodeType":"ElementaryTypeName","src":"94975:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":16872,"mutability":"mutable","name":"max","nameLocation":"94994:3:15","nodeType":"VariableDeclaration","scope":16875,"src":"94987:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":16871,"name":"uint64","nodeType":"ElementaryTypeName","src":"94987:6:15","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"94974:24:15"},"returnParameters":{"id":16874,"nodeType":"ParameterList","parameters":[],"src":"95007:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16881,"nodeType":"FunctionDefinition","src":"95086:38:15","nodes":[],"documentation":{"id":16876,"nodeType":"StructuredDocumentation","src":"95014:67:15","text":"Marks a test as skipped. Must be called at the top of the test."},"functionSelector":"dd82d13e","implemented":false,"kind":"function","modifiers":[],"name":"skip","nameLocation":"95095:4:15","parameters":{"id":16879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16878,"mutability":"mutable","name":"skipTest","nameLocation":"95105:8:15","nodeType":"VariableDeclaration","scope":16881,"src":"95100:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":16877,"name":"bool","nodeType":"ElementaryTypeName","src":"95100:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"95099:15:15"},"returnParameters":{"id":16880,"nodeType":"ParameterList","parameters":[],"src":"95123:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"id":16885,"nodeType":"FunctionDefinition","src":"95199:41:15","nodes":[],"documentation":{"id":16882,"nodeType":"StructuredDocumentation","src":"95130:64:15","text":"Stops all safe memory expectation in the current subcontext."},"functionSelector":"0956441b","implemented":false,"kind":"function","modifiers":[],"name":"stopExpectSafeMemory","nameLocation":"95208:20:15","parameters":{"id":16883,"nodeType":"ParameterList","parameters":[],"src":"95228:2:15"},"returnParameters":{"id":16884,"nodeType":"ParameterList","parameters":[],"src":"95239:0:15"},"scope":16886,"stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"abstract":false,"baseContracts":[{"baseName":{"id":16239,"name":"VmSafe","nameLocations":["79370:6:15"],"nodeType":"IdentifierPath","referencedDeclaration":16237,"src":"79370:6:15"},"id":16240,"nodeType":"InheritanceSpecifier","src":"79370:6:15"}],"canonicalName":"Vm","contractDependencies":[],"contractKind":"interface","documentation":{"id":16238,"nodeType":"StructuredDocumentation","src":"79183:171:15","text":"The `Vm` interface does allow manipulation of the EVM state. These are all intended to be used\n in tests, but it is not recommended to use these cheats in scripts."},"fullyImplemented":false,"linearizedBaseContracts":[16886,16237],"name":"Vm","nameLocation":"79364:2:15","scope":16887,"usedErrors":[],"usedEvents":[]}],"license":"MIT OR Apache-2.0"},"id":15}